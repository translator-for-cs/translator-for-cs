Behörighet:För kurser på grundnivå inom Chalmers utbildningsprogram gäller samma behörighetskrav som till de(t) program där kursen ingår i programplanen.
      


                Syfte
	Kursen ska ge förståelse av datorns uppbyggnad och funktionssätt och därigenom en mycket god teoretisk och praktisk grund för fortsatta studier i såväl datortekniska som programmeringstekniska kurser.
	
    
            Lärandemål (efter fullgjord kurs ska studenten kunna)
	om datorns uppbyggnad och funktion
* beskriva datorns uppbyggnad och funktion.
Detta betyder att man till exempel ska kunna
- beskriva på blocknivå hur styrenhet, dataväg, registerfil, aritmetik- och logikenhet (ALU) kopplas samman i en centralenhet.
- förklara begreppen ackumulatorarkitektur, RISC, CISC, stackarkitektur och pipeline.
* beskriva och analysera/konstruera centralenhetens grundläggande delar.
Detta betyder att man till exempel ska kunna
- analysera/konstruera en enkel ALU och utforma styrsignalsekvenser för grundläggande ALU-operationer.
- analysera en enkel dataväg, samt konstruera och utforma styrsignalsekvenser för överföringar
mellan register, ALU och minne.
* förklara hur instruktioner byggs upp av styrsekvenser.
Detta betyder att man till exempel ska kunna förklara och med exempel beskriva instruktionsformat, instruktionsavkodning och instruktionsutförande
* beskriva och analysera den automatiska styrenhetens funktion och uppbyggnad.
Detta betyder att man till exempel ska kunna
- beskriva hur styrsignalsekvenser kan realiseras med fast kopplad logik såväl som mikroprogrammerad logik.
- analysera och konstruera styrsignalsekvenser utgående från instruktioners semantik.
* förklara primärminnets grundläggande funktioner samt beskriva, analysera och konstruera primärminnets anslutning till centralenheten.
Detta betyder att man till exempel ska kunna
- beskriva olika typer av primärminnen såsom ROM, PROM, FLASH, statiskt RAM och dynamiskt RAM, samt förklara respektive minnestyps användbarhet för olika ändamål.
- förklara begreppet minneshierarki.
- beskriva, analysera och konstruera avkodningslogik för primärminne med digitala komponenter.
- beskriva, analysera och konstruera enkel minnesadresserad IO med digitala komponenter.
- förklara/beskriva hur centralenhet och minne kopplas samman med hjälp av datorns bussystem.
Detta betyder att man till exempel ska kunna beskriva synkrona och asynkrona bussprotokoll samt multiplexteknik.
* beskriva elementär undantagshantering i datorsystem.
Detta betyder att man till exempel ska kunna
* förklara undantagstyper såsom återstart, programvaruinitierade undantag samt externt genererade undantag (avbrott).
* beskriva hur återstart och programvaruinitierade undantag utförs i styrenheten.
* beskriva hur avbrott hanteras i centralenheten.

om digitalteknik
* beskriva och använda binära koder.
Detta betyder att man till exempel ska kunna
- utföra omvandling av tal mellan decimal, binär och hexadecimal representation.
- utföra addition och subtraktion med binära heltal.
- känna till hur multiplikation och division utförs i binär representation.
* beskriva och analysera datorns uppbyggnad som programmerbart digitalt system.
Detta betyder att man till exempel ska kunna beskriva, analysera och konstruera sådana kombinatoriska nät och sekvensnät som typiskt används för att bygga en dators centralenhet. De kombinatoriska nät som här avses utgörs (huvudsakligen) av enklare nät såsom väljare,fördelare, heladderare, bitskiftare etc. De sekvensnät som här avses utgörs av minneselement och räknare.

om assemblerprogrammering
* förklara det lagrade programmets princip.
Detta betyder att man till exempel ska kunna beskriva hur en sekvens maskininstruktioner,som ordnats sekvensiellt i minnet, utförs.
* beskriva programmerarens bild av maskinen, dvs instruktionsuppsättning och adresseringssätt.
Detta betyder att man till exempel ska kunna förklara olika allmängiltiga typer av instruktionsgrupper och adresseringssätt samt beskriva dessa med exempel.
* beskriva, analysera och konstruera enkla assemblerprogram, organiserade i subrutiner.
Detta betyder att man till exempel ska kunna
- strukturera program med hjälp av subrutiner och stackhantering.
- skriva små rutiner innefattande programstyrd och avbrottsstyrd in- och utmatning samt fördröjningar.


	
                Innehåll
	* Digitalteknikens grundläggande element och begrepp och olika talsystem.* Boolesk algebras användning för konstruktion av kombinatoriska nät och synkrona sekvensnät.* Datorns digitala byggblock (ALU, dataväg, styrenhet, minne, in- och ut- enheter).* Den traditionsenliga processorns uppbyggnad (dataväg och styrenhet med instruktionsuppsättning) som en synkront arbetande digitalmaskin.* Kodning i maskinspråk och assemblerspråk.
        	  
                Organisation
	Schemalagd undervisning består av föreläsningar, demonstrationer och handledda simulerings- kodnings- övningar. Dessutom utförs handledda obligatoriska laborationer där förkunskapskontroll genomförs inför varje laboration.Under kursen konstruerar studenten genomgående större och större digitala byggblock ingående i digitala system och datorsystem. Teorin inhämtas genom föreläsningar och demonstrationer. Studenten konstruerar sina byggblock och testar sin konstruktion med hjälp av simulatorer under simuleringsövningar. Därefter implementerar studenten sina byggblock i hårdvara under laboration. Konstruktionsarbetet avslutas med att sammankoppla byggblocken till en dator och programmera denna.
	
                Litteratur
	            ISBN:9789144115610, Grundläggande datorteknik - paket, R. Johansson, Studentlitteratur, 2016.
		
                       Examination inklusive obligatoriska moment
       	För att bli godkänd på kursen krävs godkänd skriftlig tentamen samt godkända laborationer. Baserat på tentamensresultatet ges betygen U,3,4 eller 5.
	
    

    