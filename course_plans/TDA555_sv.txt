Behörighet:För kurser på grundnivå inom Chalmers utbildningsprogram gäller samma behörighetskrav som till de(t) program där kursen ingår i programplanen.
      


                Syfte
	Detta är en introduktionskurs i programmering som använder det funktionella programmeringsspråket Haskell. Det primära syftet är att lära ut grundläggande datavetenskapliga begrepp, samtidigt som studenterna lär sig skriva realistiska (små) program. Sekundära mål är att ge en grund för kommande kurser (specifikt datastrukturer, algoritmer, digitala kretsar, formella metoder och kurser i programspråk), samt att ge en inblick i karriärsmöjligheter inom data genom inbjudna talare.
	
    
            Lärandemål (efter fullgjord kurs ska studenten kunna)
	beskriva grundläggande begrepp inom modern funktionell programmering, såsom: datatyper, funktioner inklusive högre ordningens funktioner, lat evaluering, oändliga datastrukturerbeskriva en grundläggande uppsättning av programmeringstekniker, såsom: rekursion, testning, användning av datatyper för modellering och problemlösningskriva små funktionella program för olika tillämpningarstrukturera program så att de blir lätta att förså och förändra, genom lämplig användning av datatyper, abstraktion, och återanvändbar kodgenomföra effektiv testning av funktionella program med hjälp av lämpliga verktygvisa färdigheter att i olika programmeringssammanhang bedöma vilka programmeringstekniker som lämpar sig bäst för att lösa det aktuella problemet
	
                Innehåll
	Detta är en introduktionskurs i programmering som använder ett funktionellt programmeringsspråk. Det primära syftet är att lära ut grundläggande datavetenskapliga begrepp, samtidigt som studenterna lär sig skriva små program. Sekundära mål är att ge en grund för kommande kurser (specifikt datastrukturer, algoritmer, formella metoder och kurser i programspråk).Specifika ämnen som behandlas i kursen är:värden, typer och funktionersammansatta datastrukturer (listor, tupler, användardefinierade typer)högre ordningens funktioneranvändning av abstraktionsmekanismer för att undvika repetitiv programmeringrekursion och rekursiva datatypereffektiva och ineffektiva programinput-outputverifiering med hjälp av testning
        	  
                Organisation
	Undervisningen består av föreläsningar, gruppmöten samt handledda programmeringsövningar.
Kursen kan komma att ges på svenska eller engelska.

Studenter som redan har programmeringskunskaper uppmuntras att välja DIT143/TDA452 Funktionell programmering istället. Kursen kan inte ingå i en examen där kursen DIT143/TDA452 ingår, inte heller i en examen som baseras på en annan examen där DIT143/TDA452 ingår.

	
                Litteratur
	            Slides och annat material från föreläsningarnaBok: Learn You a Haskell for Great Good!Se kurshemsidan för detaljer.
		
                       Examination inklusive obligatoriska moment
       	Kursen examineras genom en individuell skriftlig salstentamen, samt ett antal obligatoriska laborationer som normalt genomförs i grupp om 2-3 studenter. 
	
    

    