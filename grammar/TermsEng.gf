--# -path=.:alltenses:english

concrete TermsEng of Terms = CatEng **
  open
    MakeTermEng, ParadigmsEng, SyntaxEng

in {

lincat
  Term = Utt ;

lin
  CNSgTerm cn = mkUtt cn ;
  CNPlTerm cn = mkUtt (mkNP aPl_Det cn) ;
  APTerm ap = mkUtt ap ;

-- example lexicon
lin
  goal_CN = mkCN (mkN "goal" "goals") ;
  generation_N = mkN "generation" "generations" ;
  partnership_N = mkN "partnership" ;
  project_N = mkN "project" "projects" ;
  semantic_AP = mkAP semantic_A ;
  encode_V2 = mkV2 (mkV "encode") ;
  bitrate_N = mkN "bitrate" ;
  protocol_N = mkN "protocol" "protocols" ;
  coding_theory_CN = makeCN (mkN "coding") theory_N ;
  data_N = mkN "data" ;
  type_N = mkN "type" "types";
  graph_N = mkN "graph" "graphs";
  syntax_N = mkN "syntax" "syntaxes";
  notation_N = mkN "notation" "notations";
  tree_N = mkN "tree" "trees";
  window_N = mkN "window" "windows";
  toolbox_N = mkN "toolbox" "toolboxes";
  accelerate_V2 = mkV2 (mkV "accelerate" "accelerates") ;
  graphic_N = mkN "graphic" "graphics" ;
  port_N = mkN "port" "ports";
  access_N = mkN "access" ;
  control_N = mkN "control" "controls";
  list_N = mkN "list" "lists";
  method_N = mkN "method" "methods";
  time_N = mkN "time" "times";
  poison_N = mkN "poison" "poisons" ;
  acknowledge_VS = mkVS (mkV "acknowledge" "acknowledgement") ;
  character_N = mkN "character" "characters" ;
  acoustic_N = mkN "acoustic" "acoustics";
  coupler_N = mkN "coupler" "couplers" ;
  acronym_N = mkN "acronym" "acronyms" ;
  letters_N = mkN "letters" ;
  active_AP = mkAP active_A ;
  current_N = mkN "current" "currents";
  loop_N = mkN "loop" "loops";
  directory_N = mkN "directory" "directories";
  hub_N = mkN "hub" "hubs";
  matrix_N = mkN "matrix" "matricies";
  liquid_N = mkN "liquid" "liquids" ;
  crystal_N = mkN "crystal" "crystals" ;
  display_N = mkN "display" "displays" ;
  monitor_N = mkN "monitor" "monitors" ;
  server_N = mkN "server" "servers" ;
  page_N = mkN "page" "pages" ;
  terminator_N = mkN "terminator" "terminators" ;
  object_N = mkN "object" "objects" ;
  actor_N = mkN "actor" "actors" ;
  base_V2 = mkV2 (mkV "base" "bases") ;
  concurrent_AP = mkAP concurrent_A ;
  language_N = mkN "language" "languages";
  adaptive_AP = mkAP adaptive_A ;
  equalizer_N = mkN "equalizer" "equalizers";
  replacement_N = mkN "replacement" "replacements";
  cache_N = mkN "cache" "caches" ;
  address_N = mkN "address" "addresses";
  resolution_N = mkN "resolution" "resolutions";
  space_N = mkN "space" "spaces" ;
  layout_N = mkN "layout" "layouts" ;
  randomization_N = mkN "randomization" "randomizations" ;
  administrative_AP = mkAP administrative_A ;
  domain_N = mkN "domain" "domains" ;
  adobe_N = mkN "adobe" ;
  flash_N = mkN "flash" "flashes" ;
  audio_N = mkN "audio" ;
  code_V2 = mkV2 (mkV "code") ;
  environment_N = mkN "environment" "environments" ;
  configuration_N = mkN "configuration" "configurations" ;
  power_N = mkN "power" "powers" ;
  interface_N = mkN "interface" "interfaces" ;
  communication_N = mkN "communication" "communications" ;
  procedure_N = mkN "procedure" "procedures" ;
  encryption_N = mkN "encryption" "encryptions" ;
  standard_N = mkN "standard" "standards" ;
  linux_N = mkN "linux" ;
  sound_N = mkN "sound" "sounds" ;
  architecture_N = mkN "architecture" "architectures" ;
  message_N = mkN "message" "messages" ;
  queue_V = mkV "queue" ;
  micro_AP = mkAP micro_A ;
  device_N = mkN "device" "devices";
  interrupt_V2 = mkV2 (mkV "interrupt") ;
  controller_N = mkN "controller" "controllers" ;
  research_N = mkN "research" ;
  agency_N = mkN "agency" "agencys" ;
  technology_N = mkN "technology" "technologies" ;
  attachment_N = mkN "attachment" "attachments" ;
  algorithmic_AP = mkAP algorithmic_A ;
  state_N = mkN "state" "states";
  machine_N = mkN "machine" "machines" ;
  allow_VS = mkVS allow_VS ;
  cell_N = mkN "cell" "cells" ;
  rate_N = mkN "rate" "rates" ;
  alternate_V2 = mkV2 (mkV "alternate") ;
  national_AP = mkAP national_A ;
  institute_N = mkN "institute" "institutes" ;
  for_Prep = mkPrep "for" ;
  internet_N = mkN "internet" ;
  number_N = mkN "number" "numbers" ;
  amoled_N = mkN "amoled" ;
  amplitude_N = mkN "amplitude" "amplitudes" ;
  compiler_N = mkN "compiler" "compilers" ;
  digital_AP = mkAP digital_A ;
  converter_N = mkN "converter" "converters";
  anisotropic_AP = mkAP anisotropic_A ;
  filter_V2 = mkV2 (mkV "filter") ;
  escape_N = mkN "escape" "escapes" ;
  antivirus_N = mkN "antivirus" ;
  apache_N = mkN "apache" ;
  ant_N = mkN "ant" "ants" ;
  portable_AP = mkAP portable_A ;
  apple_N = mkN "apple" "apples" ;
  desktop_N = mkN "desktop" "desktops" ;
  bus_N = mkN "bus" "buses" ;
  connector_N = mkN "connector" "connectors" ;
  filing_N = mkN "filing" "filings" ;
  lossless_AP = mkAP lossless_A ;
  worldwide_AP = mkAP worldwide_A ;
  developer_N = mkN "developer" "developers" ;
  conference_N = mkN "conference" "conferences" ;
  application_N = mkN "application" "applications" ;
  binary_AP = mkAP binary_A ;
  layer_N = mkN "layer" "layers" ;
  service_N = mkN "service" "services" ;
  provider_N = mkN "provider" "providers" ;
  specific_AP = mkAP specific_A ;
  integrate_V2 = mkV2 (mkV "integrate") ;
  circuit_N = mkN "circuit" "circuits" ;
  border_N = mkN "border" "borders" ;
  router_N = mkN "router" "routers" ;
  arithmetic_N = mkN "arithmetic" "arithmetics" ;
  logic_N = mkN "logic" "logics" ;
  holding_N = mkN "holding" "holdings" ;
  operate_V2 = mkV2 (mkV "operate") ;
  system_N = mkN "system" "systems" ;
  artificial_AP = mkAP artificial_A ;
  intelligence_N = mkN "intelligence" ;
  neural_AP = mkAP neural_A ;
  network_N = mkN "network" "networks" ;
  ascii_N = mkN "ascii" ;
  aspect_N = mkN "aspect" "aspects" ;
  orient_V2 = mkV2 (mkV "orient") ;
  association_N = mkN "association" "associations" ;
  machinery_N = mkN "machinery" "machineries" ;
  asymmetric_AP = mkAP asymmetric_A ;
  subscriber_N = mkN "subscriber" "subscribers" ;
  asynchronous_AP = mkAP asynchronous_A ;
  balance_V2 = mkV2 (mkV "balance") ;
  mode_N = mkN "mode" "modes" ;
  transfer_N = mkN "transfer" "transfers" ;
  ethernet_N = mkN "ethernet" ;
  adaptation_N = mkN "adaptation" "adaptations" ;
  attenuation_N = mkN "attenuation" "attenuations" ;
  crosstalk_N = mkN "crosstalk" "crosstalks" ;
  ratio_N = mkN "ratio" "ratios" ;
  modem_N = mkN "modem" "modems" ;
  video_N = mkN "video" "videos" ;
  interleave_V2 = mkV2 (mkV "interleave") ;
  accessibility_N = mkN "accessibility" "accessibilities" ;
  guideline_N = mkN "guideline" "guidelines" ;
  automate_V2 = mkV2 (mkV "automate") ;
  classification_N = mkN "classification" "classifications" ;
  entity_N = mkN "entity" "entities" ;
  security_N = mkN "security" "securities" ;
  enhancement_N = mkN "enhancement" "enhancements" ;
  baud_N = mkN "baud" "bauds" ;
  detection_N = mkN "detection" "detections" ;
  call_N = mkN "call" "calls" ;
  distributor_N = mkN "distributor" "distributors" ;
  available_AP = mkAP available_A ;
  bit_N = mkN "bit" "bits" ;
  average_N = mkN "average" "averages" ;
  average_AP = mkAP (mkA "average") ;
  bandwidth_N = mkN "bandwidth" ;
  processor_N = mkN "processor" "processors" ;
  basic_AP = mkAP basic_A ;
  multilingual_AP = mkAP multilingual_A ;
  plane_N = mkN "plane" "planes" ;
  telecommunication_N = mkN "telecommunication" "telecommunications" ;
  infrastructure_N = mkN "infrastructure" "infrastructures" ;
  distribution_N = mkN "distribution" "distributions" ;
  bidirectional_AP = mkAP bidirectional_A ;
  forwarding_N = mkN "forwarding" ;
  directional_AP = mkAP directional_A ;
  text_N = mkN "text" ;
  decimal_N = mkN "decimal" "decimals" ;
  library_N = mkN "library" "libraries" ;
  large_AP = mkAP large_A ;
  bind_V2 = mkV2 (mkV "bind") ;
  bios_N = mkN "bios" ;
  bipolar_AP = mkAP bipolar_A ;
  junction_N = mkN "junction" "junctions" ;
  transistor_N = mkN "transistor" "transistors" ;
  error_N = mkN "error" "errors" ;
  block_N = mkN "block" "blocks" ;
  availability_N = mkN "availability" "availabilities" ;
  map_N = mkN "map" "maps" ;
  screen_N = mkN "screen" "screens" ;
  death_N = mkN "death" "deaths" ;
  bluetooth_N = mkN "bluetooth" ;
  boot_V2 = mkV2 (mkV "boot") ;
  gateway_N = mkN "gateway" "gateways";
  normal_AP = mkAP normal_A ;
  form_N = mkN "form" "forms" ;
  breadth_N = mkN "breadth" ;
  device_N = mkN "device" "devices" ;
  bulletin_N = mkN "bulletin" "bulletins" ;
  business_N = mkN "business" "businesses" ;
  continuity_N = mkN "continuity" "continuities" ;
  execution_N = mkN "execution" "executions" ;
  management_N = mkN "management" "managements" ;
  readiness_N = mkN "readiness" ;
  reference_N = mkN "reference" "references" ;
  rule_N = mkN "rule" "rules" ;
  alliance_N = mkN "alliance" "alliances" ;
  consumer_N = mkN "consumer" "consumers" ;
  employee_N = mkN "employee" "employees" ;
  byte_N = mkN "byte" "bytes" ;
  order_N = mkN "order" "orders" ;
  mark_N = mkN "mark" "marks" ;
  fault_N = mkN "fault" "faults" ;
  tolerance_N = mkN "tolerance" "tolerances" ;
  capability_N = mkN "capability" "capabilities" ;
  maturity_N = mkN "maturity" "maturities" ;
  integration_N = mkN "integration" "integrations" ;
  captcha_N = mkN "captcha" "captchas" ;
  theorem_N = mkN "theorem" "theorems" ;
  carriage_N = mkN "carriage" "carriages" ;
  carrier_N = mkN "carrier" "carriers" ;
  sense_N = mkN "sense" "senses" ;
  multiple_N = mkN "multiple" "multiples" ;
  collision_N = mkN "collision" "collisions" ;
  sheet_N = mkN "sheet" "sheets" ;
  cathode_N = mkN "cathode" "cathodes" ;
  ray_N = mkN "ray" "rays" ;
  tube_N = mkN "tube" "tubes" ;
  cd_N = mkN "cd" "cds" ;
  challenge_N = mkN "challenge" "challenges" ;
  handshake_N = mkN "handshake" "handshakes" ;
  authentication_N = mkN "authentication" "authentications" ;
  chief_N = mkN "chief" "chiefs" ;
  information_N = mkN "information" "informations" ;
  officer_N = mkN "officer" "officers" ;
  cisco_N = mkN "cisco" ;
  discovery_N = mkN "discovery" "discoveries" ;
  classless_AP = mkAP classless_A ;
  inter_V2 = mkV2 (mkV "inter") ;
  client_N = mkN "client" "clients";
  close_VS = mkVS close_VS ;
  source_N = mkN "source" "sources" ;
  metal_N = mkN "metal" "metals" ;
  cloud_N = mkN "cloud" "clouds" ;
  division_N = mkN "division" "divisions" ;
  colour_N = mkN "colour" "colours" ;
  adapter_N = mkN "adapter" "adapters" ;
  command_N = mkN "command" "commands" ;
  line_N = mkN "line" "lines" ;
  comma_N = mkN "comma" "commas" ;
  separate_V2 = mkV2 (mkV "separate") ;
  value_N = mkN "value" "values" ;
  commercial_N = mkN "commercial" "commercials" ;
  shelf_N = mkN "shelf" "shelfs" ;
  common_N = mkN "common" "commons" ;
  request_N = mkN "request" "requests" ;
  broker_N = mkN "broker" "brokers" ;
  public_N = mkN "public" "publics" ;
  radio_N = mkN "radio" "radios" ;
  communicate_V2 = mkV2 (mkV "communicate") ;
  sequential_AP = mkAP sequential_A ;
  disc_N = mkN "disc" "discs" ;
  compatibility_N = mkN "compatibility" "compatibilities" ;
  support_N = mkN "support" "supports" ;
  module_N = mkN "module" "modules" ;
  compatible_AP = mkAP compatible_A ;
  sharing_N = mkN "sharing" "sharings";
  compile_V2 = mkV2 (mkV "compile") ;
  function_N = mkN "function" "functions" ;
  complex_N = mkN "complex" ;
  instruction_N = mkN "instruction" "instructions" ;
  set_N = mkN "set" "sets" ;
  computer_N = mkN "computer" "computers" ;
  computational_AP = mkAP computational_A ;
  fluid_N = mkN "fluid" "fluids";
  dynamics_N = mkN "dynamics" ;
  independent_AP = mkAP independent_A ;
  computation_N = mkN "computation" "computations" ;
  compute_V2 = mkV2 (mkV "compute") ;
  axial_AP = mkAP axial_A ;
  aid_V2 = mkV2 (mkV "aid") ;
  industrial_AP = mkAP industrial_A ;
  manufacture_V2 = mkV2 (mkV "manufacture") ;
  quality_N = mkN "quality" "qualities";
  assist_V2 = mkV2 (mkV "assist") ;
  translation_N = mkN "translation" "translations" ;
  emergency_N = mkN "emergency" "emergencys" ;
  response_N = mkN "response" "responses" ;
  team_N = mkN "team" "teams" ;
  generate_V2 = mkV2 (mkV "generate") ;
  imagery_N = mkN "imagery" "imageries" ;
  memory_N = mkN "memory" "memories" ;
  reservation_N = mkN "reservation" "reservations" ;
  science_N = mkN "science" "sciences" ;
  telephony_N = mkN "telephony" "telephonies" ;
  terminal_N = mkN "terminal" "terminals" ;
  version_N = mkN "version" "versions" ;
  database_N = mkN "database" "databases" ;
  electronics_N = mkN "electronics" "electronics" ;
  delivery_N = mkN "delivery" "deliveries" ;
  scramble_VV = scramble_VV ;
  free_AP = mkAP free_A ;
  grammar_N = mkN "grammar" "grammars";
  continuous_AP = mkAP continuous_A ;
  protection_N = mkN "protection" "protections" ;
  flow_N = mkN "flow" "flows" ;
  coordinate_V2 = mkV2 (mkV "coordinate") ;
  universal_AP = mkAP universal_A ;
  create_VV = create_VV ;
  read_VS = mkVS read_VS ;
  update_N = mkN "update" "updates" ;
  delete_V2 = mkV2 (mkV "delete") ;
  cross_N = mkN "cross" "crosses" ;
  platform_N = mkN "platform" "platforms" ;
  site_N = mkN "site" "sites" ;
  forgery_N = mkN "forgery" "forgeries" ;
  cryptography_N = mkN "cryptography" "cryptographies" ;
  operation_N = mkN "operation" "operations" ;
  relationship_N = mkN "relationship" "relationships" ;
  cyclic_AP = mkAP cyclic_A ;
  redundancy_N = mkN "redundancy" "redundancies" ;
  check_N = mkN "check" "checks" ;
  cylinder_N = mkN "cylinder" "cylinders" ;
  head_N = mkN "head" "heads" ;
  sector_N = mkN "sector" "sectors" ;
  daemon_N = mkN "daemon" "daemons" ;
  definition_N = mkN "definition" "definitions" ;
  diagram_N = mkN "diagram" "diagrams" ;
  congestion_N = mkN "congestion" "congestions" ;
  integrity_N = mkN "integrity" "integrities" ;
  field_N = mkN "field" "fields" ;
  loss_N = mkN "loss" "losses" ;
  manipulation_N = mkN "manipulation" "manipulations" ;
  equipment_N = mkN "equipment" "equipments" ;
  warehouse_N = mkN "warehouse" "warehouses" ;
  arrival_N = mkN "arrival" "arrivals" ;
  packet_N = mkN "packet" "packets" ;
  inspection_N = mkN "inspection" "inspections" ;
  procedure_N = mkN "procedure" "procedures" ;
  definitive_AP = mkAP definitive_A ;
  media_N = mkN "media" "medias" ;
  denial_N = mkN "denial" "denials" ;
  attack_N = mkN "attack" "attacks" ;
  depth_N = mkN "depth" "depths" ;
  publish_V2 = mkV2 (mkV "publish") ;
  deterministic_AP = mkAP deterministic_A ;
  finite_AP = mkAP finite_A ;
  automaton_N = mkN "automaton" "automatons" ;
  corporation_N = mkN "corporation" "corporations" ;
  millennium_N = mkN "millennium" "millenniums" ;
  copyright_N = mkN "copyright" "copyrights" ;
  act_N = mkN "act" "acts" ;
  signature_N = mkN "signature" "signatures" ;
  recorder_N = mkN "recorder" "recorders" ;
  visual_AP = mkAP visual_A ;
  recovery_N = mkN "recovery" "recoveries" ;
  storage_N = mkN "storage" "storages" ;
  rendering_N = mkN "rendering" "renderings" ;
  manager_N = mkN "manager" "managers" ;
  disaster_N = mkN "disaster" "disasters" ;
  discretionary_AP = mkAP discretionary_A ;
  distribute_V2 = mkV2 (mkV "distribute") ;
  document_N = mkN "document" "documents" ;
  specification_N = mkN "specification" "specifications" ;
  identify_V2 = mkV2 (mkV "identify") ;
  dot_N = mkN "dot" "dots" ;
  pitch_N = mkN "pitch" "pitches" ;
  double_N = mkN "double" "doubles" ;
  density_N = mkN "density" "densities" ;
  download_V2 = mkV2 (mkV "download") ;
  drag_V2 = mkV2 (mkV "drag") ;
  drop_N = mkN "drop" "drops" ;
  package_N = mkN "package" "packages" ;
  core_N = mkN "core" "cores" ;
  region_N = mkN "region" "regions" ;
  game_N = mkN "game" "games" ;
  dynamic_AP = mkAP dynamic_A ;
  exchange_N = mkN "exchange" "exchanges" ;
  host_N = mkN "host" "hosts" ;
  link_V2 = mkV2 (mkV "link") ;
  random_AP = mkAP random_A ;
  international_AP = mkAP international_A ;
  learning_N = mkN "learning" "learnings";
  electronically_Adv = mkAdv (mkA "electronically") ;
  store_V2 = mkV2 (mkV "store") ;
  electronic_AP = mkAP electronic_A ;
  interchange_N = mkN "interchange" "interchanges" ;
  delay_N = mkN "delay" "delays" ;
  calculator_N = mkN "calculator" "calculators" ;
  frontier_N = mkN "frontier" "frontiers" ;
  foundation_N = mkN "foundation" "foundations" ;
  identity_N = mkN "identity" "identities" ;
  card_N = mkN "card" "cards" ;
  mail_N = mkN "mail" "mails" ;
  elliptic_AP = mkAP elliptic_A ;
  curve_N = mkN "curve" "curves" ;
  elm_N = mkN "elm" "elms" ;
  encrypt_V2 = mkV2 (mkV "encrypt") ;
  end_N = mkN "end" "ends" ;
  day_N = mkN "day" "days" ;
  licence_N = mkN "licence" "licences" ;
  agreement_N = mkN "agreement" "agreements" ;
  enhance_V2 = mkV2 (mkV "enhance") ;
  evolution_N = mkN "evolution" "evolutions" ;
  interior_N = mkN "interior" "interiors" ;
  resource_N = mkN "resource" "resources" ;
  estimate_VS = mkVS estimate_VS ;
  event_N = mkN "event" "events" ;
  trace_V2 = mkV2 (mkV "trace") ;
  format_N = mkN "format" "formats" ;
  expand_V2V = expand_V2V ;
  expense_N = mkN "expense" "expenses" ;
  cost_N = mkN "cost" "costs" ;
  explicit_AP = mkAP explicit_A ;
  notification_N = mkN "notification" "notifications" ;
  industry_N = mkN "industry" "industries" ;
  triton_N = mkN "triton" "tritons" ;
  hint_N = mkN "hint" "hints" ;
  markup_N = mkN "markup" "markups" ;
  meta_N = mkN "meta" "metas" ;
  presence_N = mkN "presence" "presences" ;
  tag_N = mkN "tag" "tags" ;
  framework_N = mkN "framework" "frameworks" ;
  exterior_N = mkN "exterior" "exteriors" ;
  external_AP = mkAP external_A ;
  sata_N = mkN "sata" "satas" ;
  extract_N = mkN "extract" "extracts" ;
  transform_V2 = mkV2 (mkV "transform") ;
  load_N = mkN "load" "loads" ;
  extreme_AP = mkAP extreme_A ;
  low_Adv = mkAdv (mkA "low") ;
  frequency_N = mkN "frequency" "frequencys" ;
  fear_N = mkN "fear" "fears" ;
  uncertainty_N = mkN "uncertainty" "uncertainties" ;
  doubt_N = mkN "doubt" "doubts" ;
  fedora_N = mkN "fedora" ;
  antenna_N = mkN "antenna" "antennas" ;
  effect_N = mkN "effect" "effects" ;
  gate_N = mkN "gate" "gates" ;
  effect_V2 = mkV2 (mkV "effect") ;
  replaceable_AP = mkAP replaceable_A ;
  allocation_N = mkN "allocation" "allocations" ;
  hierarchy_N = mkN "hierarchy" "hierarchies" ;
  convergence_N = mkN "convergence" "convergences" ;
  output_N = mkN "output" "outputs" ;
  instance_N = mkN "instance" "instances" ;
  assembly_N = mkN "assembly" "assemblies" ;
  correction_N = mkN "correction" "corrections" ;
  dictionary_N = mkN "dictionary" "dictionaries" ;
  front_N = mkN "front" "fronts" ;
  side_N = mkN "side" "sides" ;
  ssh_N = mkN "ssh" ;
  full_AP = mkAP full_A ;
  future_AP = mkAP future_A ;
  garbage_N = mkN "garbage" ;
  geographic_AP = mkAP geographic_A ;
  geography_N = mkN "geography" "geographys" ;
  gigabit_N = mkN "gigabit" "gigabits" ;
  gigabyte_N = mkN "gigabyte" "gigabytes" ;
  globalization_N = mkN "globalization" "globalizations" ;
  global_AP = mkAP global_A ;
  unique_AP = mkAP unique_A ;
  identifier_N = mkN "identifier" "identifiers" ;
  collection_N = mkN "collection" "collections" ;
  documentation_N = mkN "documentation" "documentations" ;
  privacy_N = mkN "privacy" "privacies" ;
  guard_N = mkN "guard" "guards" ;
  group_N = mkN "group" "groups" ;
  recording_N = mkN "recording" "recordings" ;
  partition_N = mkN "partition" "partitions" ;
  hard_AP = mkAP hard_A ;
  description_N = mkN "description" "descriptions" ;
  hertz_N = mkN "hertz" ;
  hierarchical_AP = mkAP hierarchical_A ;
  temporal_AP = mkAP temporal_A ;
  performance_N = mkN "performance" "performances" ;
  speed_N = mkN "speed" "speeds" ;
  throughput_N = mkN "throughput" "throughputs" ;
  versatile_AP = mkAP versatile_A ;
  priority_N = mkN "priority" "priorities" ;
  rapid_AP = mkAP rapid_A ;
  stream_V = mkV "stream" ;
  interaction_N = mkN "interaction" "interactions" ;
  hybrid_N = mkN "hybrid" "hybrids" ;
  hyperlink_N = mkN "hyperlink" "hyperlinks" ;
  hypertext_N = mkN "hypertext" "hypertexts" ;
  monochrome_N = mkN "monochrome" "monochromes" ;
  input_N = mkN "input" "inputs" ;
  editor_N = mkN "editor" "editors" ;
  facility_N = mkN "facility" "facilities" ;
  intellectual_AP = mkAP intellectual_A ;
  intelligent_AP = mkAP intelligent_A ;
  interactive_AP = mkAP interactive_A ;
  virtual_AP = mkAP virtual_A ;
  classroom_N = mkN "classroom" "classrooms" ;
  voice_N = mkN "voice" "voices" ;
  intermediate_AP = mkAP intermediate_A ;
  commission_N = mkN "commission" "commissions" ;
  internationalization_N = mkN "internationalization" "internationalizations" ;
  localization_N = mkN "localization" "localizations" ;
  internationalize_V2 = mkV2 (mkV "internationalize") ;
  organization_N = mkN "organization" "organizations" ;
  union_N = mkN "union" "unions" ;
  assign_V2V = assign_V2V ;
  authority_N = mkN "authority" "authoritys" ;
  connection_N = mkN "connection" "connections" ;
  report_N = mkN "report" "reports" ;
  suite_N = mkN "suite" "suites" ;
  relay_N = mkN "relay" "relays" ;
  chat_N = mkN "chat" "chats" ;
  storm_N = mkN "storm" "storms" ;
  handler_N = mkN "handler" "handlers" ;
  interval_N = mkN "interval" "intervals" ;
  intrusion_N = mkN "intrusion" "intrusions" ;
  countermeasure_N = mkN "countermeasure" "countermeasures" ;
  prevention_N = mkN "prevention" "preventions" ;
  panel_N = mkN "panel" "panels" ;
  community_N = mkN "community" "communities" ;
  extension_N = mkN "extension" "extensions" ;
  class_N = mkN "class" "classs" ;
  native_N = mkN "native" "natives" ;
  edition_N = mkN "edition" "editions" ;
  remote_AP = mkAP remote_A ;
  invocation_N = mkN "invocation" "invocations" ;
  job_N = mkN "job" "jobs" ;
  entry_N = mkN "entry" "entries" ;
  subsystem_N = mkN "subsystem" "subsystems" ;
  test_N = mkN "test" "tests" ;
  action_N = mkN "action" "actions" ;
  compilation_N = mkN "compilation" "compilations" ;
  keyboard_N = mkN "keyboard" "keyboards" ;
  kibibyte_N = mkN "kibibyte" "kibibytes" ;
  kilobit_N = mkN "kilobit" "kilobits" ;
  kilobyte_N = mkN "kilobyte" "kilobytes" ;
  kilohertz_N = mkN "kilohertz" ;
  knowledge_N = mkN "knowledge" "knowledges" ;
  grid_N = mkN "grid" "grids" ;
  scale_N = mkN "scale" "scales" ;
  recent_AP = mkAP recent_A ;
  significant_AP = mkAP significant_A ;
  diode_N = mkN "diode" "diodes" ;
  lightweight_AP = mkAP lightweight_A ;
  feed_N = mkN "feed" "feeds" ;
  aggregation_N = mkN "aggregation" "aggregations" ;
  scratch_N = mkN "scratch" "scratches" ;
  kernel_N = mkN "kernel" "kernels" ;
  professional_AP = mkAP professional_A ;
  silicon_N = mkN "silicon" ;
  local_AP = mkAP local_A ;
  logical_AP = mkAP logical_A ;
  volume_N = mkN "volume" "volumes" ;
  term_N = mkN "term" "terms" ;
  insertion_N = mkN "insertion" "insertions" ;
  voltage_N = mkN "voltage" "voltages" ;
  magnetic_AP = mkAP magnetic_A ;
  recognition_N = mkN "recognition" "recognitions" ;
  main_AP = mkAP main_A ;
  mandatory_AP = mkAP mandatory_A ;
  role_N = mkN "role" "roles" ;
  master_N = mkN "master" "masters" ;
  maximum_AP = mkAP maximum_A ;
  transmission_N = mkN "transmission" "transmissions" ;
  medium_N = mkN "medium" "mediums" ;
  megabit_N = mkN "megabit" "megabits" ;
  megabyte_N = mkN "megabyte" "megabytes" ;
  megahertz_N = mkN "megahertz" ;
  channel_N = mkN "channel" "channels" ;
  microprocessor_N = mkN "microprocessor" "microprocessors" ;
  million_N = mkN "million" "millions" ;
  minimum_N = mkN "minimum" "minimums" ;
  ad_N = mkN "ad" "ads" ;
  world_N = mkN "world" "worlds" ;
  congress_N = mkN "congress" "congresses" ;
  mortality_N = mkN "mortality" "mortalities" ;
  medical_AP = mkAP medical_A ;
  picture_N = mkN "picture" "pictures" ;
  expert_N = mkN "expert" "experts" ;
  factor_N = mkN "factor" "factors" ;
  image_N = mkN "image" "images" ;
  label_N = mkN "label" "labels" ;
  instrument_N = mkN "instrument" "instruments" ;
  negative_AP = mkAP negative_A ;
  news_N = mkN "news" ;
  appliance_N = mkN "appliance" "appliances" ;
  internal_AP = mkAP internal_A ;
  uniform_N = mkN "uniform" "uniforms" ;
  spline_N = mkN "spline" "splines" ;
  volatile_AP = mkAP volatile_A ;
  laptop_N = mkN "laptop" "laptops" ;
  child_N = mkN "child" "children" ;
  analytical_AP = mkAP analytical_A ;
  transaction_N = mkN "transaction" "transactions" ;
  utility_N = mkN "utility" "utilities" ;
  path_N = mkN "path" "paths" ;
  initiative_N = mkN "initiative" "initiatives" ;
  interconnection_N = mkN "interconnection" "interconnections" ;
  acceptance_N = mkN "acceptance" "acceptances" ;
  convention_N = mkN "convention" "conventions" ;
  organic_AP = mkAP organic_A ;
  original_N = mkN "original" "originals" ;
  manufacturer_N = mkN "manufacturer" "manufacturers" ;
  orthogonal_AP = mkAP orthogonal_A ;
  password_N = mkN "password" "passwords" ;
  express_N = mkN "express" "expressions" ;
  instrumentation_N = mkN "instrumentation" "instrumentations" ;
  peer_N = mkN "peer" "peers" ;
  peripheral_N = mkN "peripheral" "peripherals" ;
  interconnect_V2 = mkV2 (mkV "interconnect") ;
  perl_N = mkN "perl" ;
  regular_AP = mkAP regular_A ;
  persistent_AP = mkAP persistent_A ;
  assistant_N = mkN "assistant" "assistants";
  php_N = mkN "php" ;
  microcontroller_N = mkN "microcontroller" "microcontrollers" ;
  pin_N = mkN "pin" "pins" ;
  pixel_N = mkN "pixel" "pixels" ;
  old_AP = mkAP old_A ;
  control_V2 = mkV2 (mkV "control") ;
  list_V2V = list_V2V ;
  time_V2 = mkV2 (mkV "time") ;
  acoustic_AP = mkAP acoustic_A ;
  current_AP = mkAP current_A ;
  liquid_AP = mkAP liquid_A ;
  display_VS = mkVS display_VS ;
  monitor_V2 = mkV2 (mkV "monitor") ;
  page_V2 = mkV2 (mkV "page") ;
  object_V2 = mkV2 (mkV "object") ;
  cache_V2 = mkV2 (mkV "cache") ;
  address_V2 = mkV2 (mkV "address") ;
  space_V2 = mkV2 (mkV "space") ;
  flash_V2 = mkV2 (mkV "flash") ;
  power_V2 = mkV2 (mkV "power") ;
  standard_AP = mkAP standard_A ;
  sound_V2 = mkV2 (mkV "sound") ;
  research_V2 = mkV2 (mkV "research") ;
  project_VS = mkVS project_VS ;
  state_VS = mkVS state_VS ;
  rate_VS = mkVS rate_VS ;
  institute_V2 = mkV2 (mkV "institute") ;
  number_V2 = mkV2 (mkV "number") ;
  escape_VS = mkVS escape_VS ;
  border_V2 = mkV2 (mkV "border") ;
  transfer_V2 = mkV2 (mkV "transfer") ;
  call_V3 = call_V3 ;
  plane_V2 = mkV2 (mkV "plane") ;
  file_V2 = mkV2 (mkV "file") ;
  block_V2 = mkV2 (mkV "block") ;
  map_V2 = mkV2 (mkV "map") ;
  order_VV = order_VV ;
  mark_V3 = mark_V3 ;
  fault_V2 = mkV2 (mkV "fault") ;
  sense_VS = mkVS sense_VS ;
  multiple_AP = mkAP multiple_A ;
  ray_V2 = mkV2 (mkV "ray") ;
  challenge_V2 = mkV2 (mkV "challenge") ;
  chief_AP = mkAP chief_A ;
  command_V2 = mkV2 (mkV "command") ;
  value_V2 = mkV2 (mkV "value") ;
  commercial_AP = mkAP commercial_A ;
  common_AP = mkAP common_A ;
  request_VS = mkVS request_VS ;
  public_AP = mkAP public_A ;
  support_VV = support_VV ;
  function_V = mkV "function" ;
  complex_AP = mkAP complex_A ;
  set_VV = set_VV ;
  component_AP = mkAP component_A ;
  fluid_AP = mkAP fluid_A ;
  free_V2V = free_V2V ;
  update_V2 = mkV2 (mkV "update") ;
  check_V2 = mkV2 (mkV "check") ;
  attack_V2 = mkV2 (mkV "attack") ;
  act_VA = mkVA act_VA ;
  document_V2 = mkV2 (mkV "document") ;
  double_V2 = mkV2 (mkV "double") ;
  double_Adv = mkAdv (mkA "double") ;
  drop_V2 = mkV2 (mkV "drop") ;
  game_V2 = mkV2 (mkV "game") ;
  exchange_V2 = mkV2 (mkV "exchange") ;
  learn_VV = learn_VV ;
  interchange_V2 = mkV2 (mkV "interchange") ;
  mail_V2 = mkV2 (mkV "mail") ;
  curve_V2 = mkV2 (mkV "curve") ;
  end_VA = mkVA end_VA ;
  license_V2 = mkV2 (mkV "license") ;
  interior_AP = mkAP interior_A ;
  hint_VS = mkVS hint_VS ;
  exterior_AP = mkAP exterior_A ;
  extract_V2 = mkV2 (mkV "extract") ;
  load_V2 = mkV2 (mkV "load") ;
  doubt_VS = mkVS doubt_VS ;
  partition_V2 = mkV2 (mkV "partition") ;
  hard_Adv = mkAdv (mkA "hard") ;
  monochrome_AP = mkAP monochrome_A ;
  report_VS = mkVS report_VS ;
  chat_V2 = mkV2 (mkV "chat") ;
  storm_V2 = mkV2 (mkV "storm") ;
  native_AP = mkAP native_A ;
  job_V2 = mkV2 (mkV "job") ;
  scale_V2 = mkV2 (mkV "scale") ;
  scratch_V2 = mkV2 (mkV "scratch") ;
  master_V2 = mkV2 (mkV "master") ;
  label_V3 = label_V3 ;
  uniform_AP = mkAP uniform_A ;
  original_AP = mkAP original_A ;
  express_V2 = mkV2 (mkV "express") ;
  express_Adv = mkAdv (mkA "express") ;
  peer_V = mkV "peer" ;
  peripheral_AP = mkAP peripheral_A ;
  course_N = mkN "course" "courses" ;
  prerequisite_N = mkN "prerequisite" "prerequisites" ;
  design_N = mkN "design" "designs" ;
  principle_N = mkN "principle" "principles" ;
  aim_N = mkN "aim" ;
  component_N = mkN "component" "components" ;
  technical_AP = mkAP technical_A ;
  functional_AP = mkAP functional_A ;
  fast_Adv = mkAdv (mkA "fast") ;
  fast_AP = mkAP fast_A ;
  efficient_AP = mkAP efficient_A ;
  progress_N = mkN "progress" "processes";
  engineering_N = mkN "engineering" ;
  convert_V2 = mkV2 (mkV "convert") ;
  raw_N = mkN "raw" ;
  software_N = mkN "software" "softwares" ;
  structure_N = mkN "structure" "structures" ;
  parallelism_N = mkN "parallelism" "parallelisms" ;
  high_AP = mkAP high_A ;
  outcome_N = mkN "outcome" "outcomes" ;
  concept_N = mkN "concept" "concepts" ;
  modern_AP = mkAP modern_A ;
  advance_N = mkN "advance" "advances" ;
  field_N = mkN "field" "fields" ;
  advance_V2 = mkV2 (mkV "advance") ;
  technique_N = mkN "technique" "techniques";
  parallel_N = mkN "parallel" ;
  parallel_AP = mkAP parallel_A ;
  establish_V2 = mkV2 (mkV "establish") ;
  assess_V2 = mkV2 (mkV "assess") ;
  proficiency_N = mkN "proficiency" "proficiencies";
  quantitative_AP = mkAP quantitative_A ;
  impact_N = mkN "impact" "impacts";
  architectural_AP = mkAP architectural_A ;
  simulation_N = mkN "simulation" "simulations" ;
  tool_N = mkN "tool" "tools" ;
  content_N = mkN "content" "contents" ;
  essential_N = mkN "essential" "essentials" ;
  essential_AP = mkAP essential_A ;
  achieve_V2 = mkV2 (mkV "achieve") ;
  analysis_N = mkN "analysis" ;
  assessment_N = mkN "assessment" "assessments" ;
  consumption_N = mkN "consumption" "consumptions" ;
  part_N = mkN "part" "parts" ;
  affect_V2 = mkV2 (mkV "affect") ;
  evolution_N = mkN "evolution" "evolutions";
  include_VV = include_VV ;
  law_N = mkN "law" "laws";
  execution_N = mkN "execution" "executions" ;
  fundamental_N = mkN "fundamental" "fundamentals" ;
  locality_N = mkN "locality" "localities" ;
  evaluate_V2 = mkV2 (mkV "evaluate") ;
  level_N = mkN "level" "levels";
  define_V2 = mkV2 (mkV "define") ;
  limit_N = mkN "limit" "limits" ;
  category_N = mkN "category" "categorys" ;
  dynamic_N = mkN "dynamic" "dynamics" ;
  static_AP = mkAP static_A ;
  algorithm_N = mkN "algorithm" "algorithms" ;
  branch_N = mkN "branch" "branches" ;
  prediction_N = mkN "prediction" "predictions" ;
  speculation_N = mkN "speculation" "speculations" ;
  different_AP = mkAP different_A ;
  bottleneck_N = mkN "bottleneck" "bottlenecks";
  reduce_V2 = mkV2 (mkV "reduce") ;
  miss_N = mkN "miss" "misses" ;
  penalty_N = mkN "penalty" "penalties" ;
  hit_N = mkN "hit" "hits" ;
  example_N = mkN "example" "examples" ;
  free_N = mkN "free" ;
  address_V2 = mkV2 (mkV "address") ;
  linear_AP = mkAP linear_A ;
  algebra_N = mkN "algebra" ;
  probability_N = mkN "probability" "probabilities" ;
  theory_N = mkN "theory" "theories" ;
  program_V2V = program_V2V ;
  desirable_AP = mkAP desirable_A ;
  image_N = mkN "image" "images" ;
  overview_N = mkN "overview" "overviews" ;
  practical_AP = mkAP practical_A ;
  measurement_N = mkN "measurement" "measurements";
  develop_V2 = mkV2 (mkV "develop") ;
  solve_V2 = mkV2 (mkV "solve") ;
  problem_N = mkN "problem" "problems";
  derive_V2 = mkV2 (mkV "derive") ;
  geometry_N = mkN "geometry" "geometries" ;
  optimization_N = mkN "optimization" "optimizations" ;
  statistics_N = mkN "statistics" ;
  grade_V2 = mkV2 (mkV "grade") ;
  camera_N = mkN "camera" "cameras" ;
  modelling_N = mkN "modelling" "modellings" ;
  stereo_N = mkN "stereo" "stereos" ;
  mathematical_AP = mkAP mathematical_A ;
  central_N = mkN "central" "centrals" ;
  square_N = mkN "square" "squares" ;
  apply_VV = apply_VV ;
  terminology_N = mkN "terminology" "terminologies" ;
  structure_V2 = mkV2 (mkV "structure") ;
  solution_N = mkN "solution" "solutions" ;
  geometric_AP = mkAP geometric_A ;
  exercise_N = mkN "exercise" "exercises" ;
  session_N = mkN "session" "sessions" ;
  pair_N = mkN "pair" "pairs" ;
  submission_N = mkN "submission" "submissions" ;
  result_N = mkN "result" "results" ;
  lecture_N = mkN "lecture" "lectures" ;
  article_N = mkN "article" "articles" ;
  university_N = mkN "university" "universities" ;
  element_N = mkN "element" "elements" ;
  programming_N = mkN "programming" ;
  model_N = mkN "model" "models" ;
  chip_N = mkN "chip" "chips" ;
  share_V2 = mkV2 (mkV "share") ;
  thread_N = mkN "thread" "threads";
  scientific_AP = mkAP scientific_A ;
  literature_N = mkN "literature" "literatures" ;
  sequence_N = mkN "sequence" "sequences" ;
  lab_N = mkN "lab" "labs" ;
  methodology_N = mkN "methodology" "methodologies" ;
  systematically_Adv = mkAdv (mkA "systematically") ;
  assembly_N = mkN "assembly" "assemblies" ;
  sustainability_N = mkN "sustainability" "sustainabilities" ;
  compute_V2 = mkV2 (mkV "compute") ;
  sustainable_AP = mkAP sustainable_A ;
  electrical_AP = mkAP electrical_A ;
  mechanism_N = mkN "mechanism" "mechanisms" ;
  storage_N = mkN "storage" "storages" ;
  energy_N = mkN "energy" "energies" ;
  operate_V2 = mkV2 (mkV "operate") ;
  optimize_V2 = mkV2 (mkV "optimize") ;
  interpret_V2 = mkV2 (mkV "interpret") ;
  requirement_N = mkN "requirement" "requirements" ;
  measure_V2 = mkV2 (mkV "measure") ;
  estimate_VS = mkVS estimate_VS ;
  save_V2 = mkV2 (mkV "save") ;
  practice_N = mkN "practice" "practices" ;
  discrete_AP = mkAP discrete_A ;
  complexity_N = mkN "complexity" "complexities" ;
  kind_N = mkN "kind" "kinds" ;
  context_N = mkN "context" "contexts" ;
  transportation_N = mkN "transportation" "transportations" ;
  physics_N = mkN "physics" ;
  numerical_AP = mkAP numerical_A ;
  modeling_N = mkN "modeling" "modelings" ;
  equation_N = mkN "equation" "equations" ;
  molecular_AP = mkAP molecular_A ;
  integration_N = mkN "integration" "integrations" ;
  planning_N = mkN "planning" "plannings" ;
  hardware_N = mkN "hardware" "hardwares" ;
  property_N = mkN "property" "properties" ;
  optimal_AP = mkAP optimal_A ;
  formulate_V2 = mkV2 (mkV "formulate") ;
  model_V2 = mkV2 (mkV "model") ;
  manageable_AP = mkAP manageable_A ;
  relate_V2 = mkV2 (mkV "relate") ;
  generic_AP = mkAP generic_A ;
  additional_AP = mkAP additional_A ;
  heuristic_N = mkN "heuristic" "heuristics" ;
  dual_AP = mkAP dual_A ;
  obtain_V2 = mkV2 (mkV "obtain") ;
  integer_N = mkN "integer" "integers" ;
  special_AP = mkAP special_A ;
  separate_V2 = mkV2 (mkV "separate") ;
  stack_N = mkN "stack" "stacks";
  distribute_V2 = mkV2 (mkV "distribute") ;
  summarize_V2 = mkV2 (mkV "summarize") ;
  introduce_V2 = mkV2 (mkV "introduce") ;
  development_N = mkN "development" "developments" ;
  setting_N = mkN "setting" "settings" ;
  link_N = mkN "link" "links" ;
  limit_V2V = limit_V2V ;
  scalability_N = mkN "scalability" "scalabilities" ;
  imperative_AP = mkAP imperative_A ;
  vector_N = mkN "vector" "vectors" ;
  dimension_N = mkN "dimension" "dimensions" ;
  implement_V2 = mkV2 (mkV "implement") ;
  process_N = mkN "process" "processes" ;
  functionality_N = mkN "functionality" "functionalities" ;
  strict_AP = mkAP strict_A ;
  bachelor_N = mkN "bachelor" "bachelors" ;
  dimensional_AP = mkAP dimensional_A ;
  rendering_N = mkN "rendering" "renderings" ;
  shadow_N = mkN "shadow" "shadows" ;
  mathematics_N = mkN "mathematics" ;
  design_V2V = design_V2V ;
  mechanical_AP = mkAP mechanical_A ;
  safety_N = mkN "safety" ;
  multimedia_N = mkN "multimedia" "multimedias" ;
  abstraction_N = mkN "abstraction" "abstractions" ;
  implement_N = mkN "implement" "implements" ;
  synchronization_N = mkN "synchronization" "synchronizations" ;
  node_N = mkN "node" "nodes" ;
  topology_N = mkN "topology" "topologies" ;
  embed_V2 = mkV2 (mkV "embed") ;
  perform_V2 = mkV2 (mkV "perform") ;
  behavior_N = mkN "behavior" "behaviors";
  run_VS = mkVS run_VS ;
  verify_V2 = mkV2 (mkV "verify") ;
  good_AP = mkAP good_A ;
  during_Prep = mkPrep "during" ;
  task_N = mkN "task" "tasks" ;
  decompose_V2 = mkV2 (mkV "decompose") ;
  general_AP = mkAP general_A ;
  capacity_N = mkN "capacity" "capacities" ;
  access_N = mkN "access" ;
  response_N = mkN "response" "responses" ;
  conjunction_N = mkN "conjunction" "conjunctions" ;
  account_N = mkN "account" "accounts" ;
  maximum_N = mkN "maximum" ;
  low_Adv = mkAdv (mkA "low") ;
  delay_N = mkN "delay" "delays" ;
  correctness_N = mkN "correctness" ;
  philosophy_N = mkN "philosophy" "philosophies" ;
  complex_AP = mkAP complex_A ;
  maintain_VS = mkVS maintain_VS ;
  semaphore_N = mkN "semaphore" "semaphores" ;
  semantics_N = mkN "semantics" ;
  induction_N = mkN "induction" "inductions" ;
  proof_N = mkN "proof" "proofs" ;
  formal_AP = mkAP formal_A ;
  algebraic_AP = mkAP algebraic_A ;
  monad_N = mkN "monad" "monads" ;
  transformer_N = mkN "transformer" "transformers" ;
  property_N = mkN "property" "properties" ;
  construction_N = mkN "construction" "constructions" ;
  construct_V2 = mkV2 (mkV "construct") ;
  quick_AP = mkAP quick_A ;
  exception_N = mkN "exception" "exceptions" ;
  implementation_N = mkN "implementation" "implementations" ;
  vulnerability_N = mkN "vulnerability" "vulnerabilities" ;
  permutation_N = mkN "permutation" "permutations" ;
  artificial_intelligence_CN = makeCN artificial_A intelligence_N ;
  cipher_N = mkN "cipher" "ciphers" ;
  cryptanalysis_N = mkN "cryptanalysis" ;
  symmetric_AP = mkAP symmetric_A ;
  computer_science_CN = makeCN computer_N science_N ;
  software_development_CN = makeCN software_N development_N ;
  application_software_CN = makeCN application_N software_N ;
  data_structure_CN = makeCN data_N structure_N ;
  automata_theory_CN = makeCN (mkA "automata") theory_N ;
  binary_search_algorithm_CN = makeCN binary_A search_N algorithm_N ;
  bit_rate_CN = makeCN bit_N rate_N ;
  cloud_computing_CN = makeCN cloud_N (mkN "computing") ;
  library_CN = makeCN library_N ;
  cognitive_science_CN = makeCN cognitive_A science_N ;
  computability_theory_CN = makeCN (mkN "computability") theory_N ;
  computational_biology_CN = makeCN computational_A biology_N ;
  computational_chemistry_CN = makeCN computational_A chemistry_N ;
  computational_physics_CN = makeCN computational_A physics_N ;
  computer_architecture_CN = makeCN computer_N architecture_N ;
  computer_data_storage_CN = makeCN computer_N data_N storage_N ;
  computer_graphics_CN = makeCN computer_N graphics_N ;
  computer_network_CN = makeCN computer_N network_N ;
  computer_scientist_CN = makeCN computer_N scientist_N ;
  computer_security_CN = makeCN computer_N security_N ;
  concurrency_N = mkN "concurrency" "concurrencies" ;
  control_flow_CN = makeCN control_N flow_N ;
  cyberbullying_N = mkN "cyberbullying" ;
  cyberspace_N = mkN "cyberspace" "cyberspaces" ;
  data_center_CN = makeCN data_N (mkN "center") ;
  data_mining_CN = makeCN data_N mining_N ;
  data_type_CN = makeCN data_N type_N ;
  signal_processing_CN = makeCN signal_N processing_N ;
  domain_name_system_CN = makeCN domain_N name_N system_N ;
  download_N = mkN "download" "downloads" ;
  event_N = mkN "event" "events" ;
  executable_AP = mkAP (mkA "executable") ;
  file_N = mkN "file" "files" ;
  exception_handling_CN = makeCN exception_N handling_N ;
  feasibility_study_CN = makeCN feasibility_N study_N ;
  filename_extension_CN = makeCN filename_N extension_N ;
  verification_N = mkN "verification" "verifications" ;
  game_theory_CN = makeCN game_N theory_N ;
  graph_theory_CN = makeCN graph_N theory_N ;
  hash_function_CN = makeCN hash_N function_N ;
  hash_table_CN = makeCN hash_N table_N ;
  heapsort_N = mkN "heapsort" ;
  human_computer_interation_CN = makeCN (mkN "human-computer") (mkN "interation") ;
  integrated_development_environment_CN = makeCN (mkA "integrated") development_N environment_N ;
  imperative_programming_CN = makeCN imperative_A programming_N ;
  inheritance_N = mkN "inheritance" "inheritances" ;
  insertion_sort_CN = makeCN insertion_N sort_N ;
  array_N = mkN "array" "arrays" ;
  binary_tree_CN = makeCN binary_A tree_N ;
  bioinformatics_N = mkN "bioinformatics" ;
  boolean_data_type_CN = makeCN (mkA "boolean") data_N type_N ;
  crypto_N = mkN "crypto" ;
  computer_vision_CN = makeCN computer_N vision_N ;
  concatenation_N = mkN "concatenation" ;
  agent_N = mkN "agent" ;
  invariant_AP = mkAP invariant_A ;
  iteration_N = mkN "iteration" "iterations" ;
  Java_N = mkN "Java" ;
  programming_language_CN = makeCN programming_N language_N ;
  linear_search_CN = makeCN linear_A search_N ;
  linked_list_CN = makeCN (mkA "linked") list_N ;
  logic_programming_CN = makeCN logic_N programming_N ;
  machine_learning_CN = makeCN machine_N learning_N ;
  number_theory_CN = makeCN number_N theory_N ;
  numerical_analysis_CN = makeCN numerical_A analysis_N ;
  operating_system_CN = makeCN (mkA "operating") system_N ;
  optical_fiber_CN = makeCN optical_A (mkN "fiber" "fibers") ;
  pair_programming_CN = makeCN pair_N programming_N ;
  priority_queue_CN = makeCN priority_N queue_N ;
  quantum_computer_CN = makeCN quantum_N computer_N ;
  queue_N = mkN "queue" "queues" ;
  recursion_N = mkN "recursion" ;
  relational_database_CN = makeCN relational_A database_N ;
  requirements_analysis_CN = makeCN (mkN "requirements") analysis_N ;
  routing_table_CN = makeCN (mkN "routing") table_N ;
  selection_sort_CN = makeCN selection_N sort_N ;
  sequence_N = mkN "sequence" "sequences" ;
  software_deployment_CN = makeCN software_N deployment_N ;
  sorting_algorithm_CN = makeCN sorting_N algorithm_N ;
  source_code_CN = makeCN source_N code_N ;
  string_N = mkN "string" "strings" ;
  user_agent_CN = makeCN user_N agent_N ;
  user_interface_CN = makeCN user_N interface_N ;
  waterfall_model_CN = makeCN waterfall_N model_N ;
  Wi_Fi_N = mkN "Wi-Fi" ;
  XHTML_N = mkN "XHTML" ;
  mathematical_model_CN = makeCN mathematical_A model_N ;
  generalization_N = mkN "generalization" "generalizations" ;
  concept_N = mkN "concept" "concepts" ;
  blueprint_N = mkN "blueprint" "blueprints" ;
  customer_N = mkN "customer" "customers" ;
  end_user_CN = makeCN end_N user_N ;
  calculation_N = mkN "calculation" "calculations" ;
  productivity_N = mkN "productivity" ;
  dynamic_programming_CN = makeCN dynamic_A programming_N ;
  computer_interaction_CN = makeCN computer_N interaction_N ;
  development_environment_CN = makeCN development_N environment_N ;
  computer_program_CN = makeCN computer_N program_N ;
  programmer_N = mkN "programmer" "programmers" ;
  word_processor_CN = makeCN word_N processor_N ;
  spreadsheet_N = mkN "spreadsheet" "spreadsheets" ;
  accounting_software_CN = makeCN accounting_N software_N ;
  web_browser_CN = makeCN web_N browser_N ;
  media_player_CN = makeCN media_N player_N ;
  flight_simulator_CN = makeCN flight_N simulator_N ;
  use_case_CN = makeCN use_N case_N ;
  class_diagram_CN = makeCN class_N diagram_N ;
  theoretical_AP = mkAP theoretical_A ;
  discreet_AP = mkAP discreet_A ;
  mathematics_N = mkN "mathematics" ;
  discrete_mathematics_CN = makeCN discrete_A mathematics_N ;
  probability_distribution_CN = makeCN probability_N distribution_N ;
  time_complexity_CN = makeCN time_N complexity_N ;
  set_theory_CN = makeCN set_N theory_N ;
  empty_set_CN = makeCN empty_A set_N ;
  software_tool_CN = makeCN software_N tool_N ;
  biology_N = mkN "biology" ;
  telecommunications_N = mkN "telecommunications" ;
  access_control_CN = makeCN access_N control_N ;
  domain_name_CN = makeCN domain_N name_N ;
  ip_adress_N = mkN "ip-adress" ;
  whitelist_N = mkN "whitelist" "whitelists" ;
  graphics_card_CN = makeCN (mkA "graphics") card_N ;
  truth_value_CN = makeCN truth_N value_N ;
  variable_N = mkN "variable" "variables" ;
  disjunction_N = mkN "disjunction" "disjunctions" ;
  negation_N = mkN "negation" "negations" ;
  hard_drive_CN = makeCN hard_A drive_N ;
  control_unit_CN = makeCN control_N unit_N ;
  code_N = mkN "code" "codes" ;
  information_theory_CN = makeCN information_N theory_N ;
  linguistics_N = mkN "linguistics" ;
  table_N = mkN "table" "tables" ;
  file_format_CN = makeCN file_N format_N ;
  computer_engineering_CN = makeCN computer_N engineering_N ;
  engineering_N = mkN "engineering" ;
  information_system_CN = makeCN information_N system_N ;
  digital_signal_processor_CN = makeCN digital_A signal_N processor_N ;
  web_server_CN = makeCN web_N server_N ;
  programming_paradigm_CN = makeCN programming_N paradigm_N ;
  sensor_N = mkN "sensor" "sensors" ;
  graphic_AP = mkAP graphic_A ;
  web_application_CN = makeCN web_N application_N ;
  device_driver_CN = makeCN device_N driver_N ;
  instruction_set_architecture_CN = makeCN instruction_N set_N architecture_N ;
  parser_N = mkN "parser" "parsers";
  interruption_N = mkN "interruption" "interruptions";
  inter_process_communication_CN = makeCN (mkA "inter-process") communication_N ;
  operator_N = mkN "operator" "operators";
  file_name_CN = makeCN file_N name_N ;
  command_line_interpreter_CN = makeCN (mkN "command-line") interpreter_N ;
  unique_key_CN = makeCN unique_A key_N ;
  debugger_N = mkN "debugger" ;
  touchscreen_N = mkN "touchscreen" ;
  scripting_language_CN = makeCN (mkN "scripting") language_N ;
  bug_N = mkN "bug" "bugs";
  LED_N = mkN "LED" "LEDs";
  speech_recognition_CN = makeCN speech_N recognition_N ;
  memory_address_CN = makeCN memory_N address_N ;
  computer_engineering_CN = makeCN computer_N engineering_N ;
  operation_N = mkN "operation" "operations" ;
  unit_N = mkN "unit" "units" ;
  symbol_N = mkN "symbol" "symbols" ;
  personal_computer_CN = makeCN personal_A computer_N ;
  bot_N = mkN "bot" "bots" ;
  wireless_AP = mkAP wireless_A ;
  web_page_CN = makeCN web_N page_N ;
  scanner_N = mkN "scanner" "scanners" ;
  abstract_AP = mkAP abstract_A ;
  concrete_AP = mkAP concrete_A ;
  accumulator_N = mkN "accumulator" "accumulators" ;
  accuracy_N = mkN "accuracy" ;
  precision_N = mkN "precision" "precisions" ;
  selection_N = mkN "selection" "selections" ;
  activation_N = mkN "activation" "activations" ;
  inference_N = mkN "inference" "inferences" ;
  argument_N = mkN "argument" "arguments" ;
  associative_AP = mkAP associative_A ;
  automated_AP = mkAP (mkA "automated") ;
  reasoning_N = mkN "reasoning" "reasonings" ;
  automaton_N = mkN "automaton" "automatons" ;
  robot_N = mkN "robot" "robots" ;
  robotics_N = mkN "robotics" ;
  benchmark_N = mkN "benchmark" "benchmarks" ;
  branch_V = mkV "branch" ;
  answer_N = mkN "answer" "answers" ;
  nested_AP = mkAP (mkA "nested") ;
  statement_N = mkN "statement" "statements" ;
  parameter_N = mkN "parameter" "parameters" ;
  comment_N = mkN "comment" "comments" ;
  framework_N = mkN "framework" "frameworks" ;
  if_loop_N = mkN "if-loop" "if-loops" ;
  if_statement_N = mkN "if-statement" "if-statements" ;
  while_loop_N = mkN "while-loop" "while-loops" ;
  while_statement_N = mkN "while-statement" "while-statements" ;
  allocation_N = mkN "allocation" "allocations" ;
  search_V2 = mkV2 (mkV "search") ;
  build_V2 = mkV2 (mkV "build") ;
  engine_N = mkN "engine" "engines" ;
  capsule_N = mkN "capsule" "capsules" ;
  categorical_AP = mkAP categorical_A ;
  classifier_N = mkN "classifier" "classifiers" ;
  clock_V2 = mkV2 (mkV "clock") ;
  column_N = mkN "column" "columns" ;
  sort_V2 = mkV2 (mkV "sort") ;
  computable_AP = mkAP computable_A ;
  console_N = mkN "console" "consoles" ;
  constant_N = mkN "constant" "constants" ;
  constrain_V2 = mkV2 (mkV "constrain") ;
  conditional_AP = mkAP conditional_A ;
  constraint_N = mkN "constraint" "constraints";
  container_N = mkN "container" "containers" ;
  redundant_AP = mkAP redundant_A ;
  condition_N = mkN "condition" "conditions";
  block_N = mkN "block" "blocks";
  boolean_AP = mkAP (mkA "boolean") ;
  program_N = mkN "program" "programs";
  sequential_AP = mkAP sequential_A ;
  declaration_N = mkN "declaration" "declarations" ;
  declare_V = mkV "declare" ;
  initialization_N = mkN "initialization" ;
  initialize_V = mkV "initialize" ;
  index_N = mkN "index" "indexes" ;
  runtime_N = mkN "runtime" ;
  error_N = mkN "error" "errors";
  runtime_error_CN = makeCN runtime_N error_N ;
  accelerator_N = mkN "accelerator" "accelerators" ;
  cooling_N = mkN "cooling" ;
  asymptotic_AP = mkAP asymptotic_A ;
  optical_AP = mkAP optical_A ;
  variance_N = mkN "variance" "variances" ;
  pattern_N = mkN "pattern" "patterns" ;
  blacklist_N = mkN "blacklist" "blacklists" ;
  automation_N = mkN "automation" "automations" ;
  coherency_N = mkN "coherency" "coherencies" ;
  closure_N = mkN "closure" "closures" ;
  histogram_N = mkN "histogram" "histograms" ;
  combinatorial_AP = mkAP combinatorial_A ;
  comparison_N = mkN "comparison" "comparisons" ;
  compile_V2 = mkV2 (mkV "compile") ;
  cybernetics_N = mkN "cybernetics" ;
  conceptual_AP = mkAP conceptual_A ;
  conceptualization_N = mkN "conceptualization" "conceptualizations" ;
  consistent_AP = mkAP consistent_A ;
  satisfaction_N = mkN "satisfaction" ;
  continual_AP = mkAP continual_A ;
  improvement_N = mkN "improvement" ;
  continuation_N = mkN "continuation" ;
  style_N = mkN "style" ;
  cooperative_AP = mkAP cooperative_A ;
  processing_N = mkN "processing" "processings" ;
  stream_N = mkN "stream" "streams" ;
  boundary_N = mkN "boundary" "boundarys" ;
  default_N = mkN "default" "defaults" ;
  dependency_N = mkN "dependency" "dependencies" ;
  differentiable_AP = mkAP differentiable_A ;
  reduction_N = mkN "reduction" "reductions" ;
  disk_N = mkN "disk" "disks" ;
  divide_V2 = mkV2 (mkV "divide") ;
  conquer_V2 = mkV2 (mkV "conquer") ;
  point_N = mkN "point" "points" ;
  creativity_N = mkN "creativity" ;
  effective_AP = mkAP effective_A ;
  descriptive_AP = mkAP descriptive_A ;
  cable_N = mkN "cable" "cables" ;
  interference_N = mkN "interference" "interferences" ;
  switch_N = mkN "switch" "switches" ;
  extract_V2 = mkV2 (mkV "extract") ;
  transform_V2 = mkV2 (mkV "transform") ;
  false_AP = mkAP false_A ;
  feature_N = mkN "feature" "features" ;
  extraction_N = mkN "extraction" "extractions" ;
  formula_N = mkN "formula" "formulas" ;
  frame_N = mkN "frame" "frames" ;
  open_AP = mkAP open_A ;
  generative_AP = mkAP generative_A ;
  genetic_AP = mkAP genetic_A ;
  human_N = mkN "human" "humans";
  segmentation_N = mkN "segmentation" "segmentations";
  immutable_AP = mkAP immutable_A ;
  incremental_AP = mkAP incremental_A ;
  indicator_N = mkN "indicator" "indicators";
  hide_V2 = mkV2 (mkV "hide") ;
  query_N = mkN "query" "queries";
  visualization_N = mkN "visualization" ;
  cycle_N = mkN "cycle" "cycles";
  test_V2 = mkV2 (mkV "test") ;
  internal_AP = mkAP internal_A ;
  public_AP = mkAP public_A ;
  interpretation_N = mkN "interpretation" "interpretations";
  irregular_AP = mkAP irregular_A ;
  issue_N = mkN "issue" "issues" ;
  iterative_AP = mkAP iterative_A ;
  primitive_AP = mkAP primitive_A ;
  lazy_AP = mkAP lazy_A ;
  merger_N = mkN "merger" "mergers" ;
  loader_N = mkN "loader" "loaders" ;
  implication_N = mkN "implication" "implications" ;
  random_AP = mkAP random_A ;
  motion_N = mkN "motion" "motions";
  nondeterministic_AP = mkAP (mkA "nondeterministic") ;
  monotonic_AP = mkAP monotonic_A ;
  transformation_N = mkN "transformation" "transformations" ;
  precondition_N = mkN "precondition" "preconditions" ;
  key_feature_CN = makeCN key_N feature_N ;
  garbage_collection_CN = makeCN garbage_N collection_N ;
  global_variable_CN = makeCN global_A variable_N ;
  virus_N = mkN "virus" "viruses";
  motion_sensor_CN = makeCN motion_N sensor_N ;
  player_N = mkN "player" "players";
  recursive_AP = mkAP recursive_A ;
  register_V2 = mkV2 (mkV "register") ;
  scope_N = mkN "scope" "scopes";
  semiconductor_N = mkN "semiconductor" "semiconductors" ;
  simulate_V2 = mkV2 (mkV "simulate") ;
  spam_N = mkN "spam" ;
  singleton_N = mkN "singleton" "singletons" ;
  maintenance_N = mkN "maintenance" "maintenances" ;
  validation_N = mkN "validation" "validations" ;
  editor_N = mkN "editor" "editors" ;
  subset_N = mkN "subset" "subsets" ;
  technological_AP = mkAP technological_A ;
  translator_N = mkN "translator" "translators" ;
  true_N = mkN "true" "trues" ;
  user_N = mkN "user" "users" ;
  programmable_AP = mkAP (mkA "programmable") ;
  text_editor_CN = makeCN text_N editor_N ;
  register_N = mkN "register" "registers" ;
  hardware_acceleration_CN = makeCN hardware_N acceleration_N ;
  address_space_CN = makeCN address_N space_N ;
  card_reader_CN = makeCN card_N reader_N ;
  CD_ROM_N = mkN "CD-ROM" "CD-ROMs" ;
  computer_case_CN = makeCN computer_N case_N ;
  form_factor_CN = makeCN form_N factor_N ;
  core_memory_CN = makeCN core_N memory_N ;
  expansion_bus_CN = makeCN expansion_N bus_N ;
  firewall_N = mkN "firewall" "firewalls" ;
  firmware_N = mkN "firmware" "firmwares" ;
  flash_memory_CN = makeCN (mkA "flash") memory_N ;
  floppy_disk_CN = makeCN floppy_A disk_N ;
  graphics_processing_unit_CN = makeCN (mkA "graphics") processing_N unit_N ;
  hard_disk_drive_CN = makeCN hard_A disk_N drive_N ;
  instruction_N = mkN "instruction" "instructions" ;
  integrated_circuit_CN = makeCN (mkA "integrated") circuit_N ;
  mainframe_computer_CN = makeCN mainframe_N computer_N ;
  memory_card_CN = makeCN memory_N card_N ;
  microcode_N = mkN "microcode" ;
  motherboard_N = mkN "motherboard" ;
  network_interface_controller_CN = makeCN network_N interface_N controller_N ;
  power_supply_CN = makeCN power_N supply_N ;
  printer_N = mkN "printer" ;
  sound_card_CN = makeCN sound_N card_N ;
  tape_drive_CN = makeCN tape_N drive_N ;
  computer_terminal_CN = makeCN computer_N terminal_N ;
  trackpad_N = mkN "trackpad" ;
  video_card_CN = makeCN video_N card_N ;
  webcam_N = mkN "webcam" ;
  fan_N = mkN "fan" ;
  screen_N = mkN "screen" "screens";
  LED_display_CN = makeCN LED_N display_N ;
  data_storage_device_CN = makeCN data_N storage_N device_N ;
  communications_protocol_CN = makeCN communications_N protocol_N ;
  printed_circuit_board_CN = makeCN (mkA "printed") circuit_N board_N ;
  parallel_computing_CN = makeCN parallel_A (mkN "computing") ;
  graphical_AP = mkAP graphical_A ;
  desktop_computer_CN = makeCN desktop_N computer_N ;
  laser_N = mkN "laser" "lasers";
  electromagnetic_AP = mkAP electromagnetic_A ;
  computer_mouse_CN = makeCN computer_N mouse_N ;
  static_random_access_memory_CN = makeCN static_A (mkA "random-access") memory_N ;
  electromagnetic_wave_CN = makeCN electromagnetic_A wave_N ;
  optical_disc_CN = makeCN optical_A disc_N ;
  computer_security_model_CN = makeCN computer_N security_N model_N ;
  information_technology_CN = makeCN information_N technology_N ;
  programming_language_CN = makeCN programming_N language_N ;
  unauthorized_access_CN = makeCN unauthorized_A access_N ;
  confidential_information_CN = makeCN confidential_A information_N ;
  holistic_approach_CN = makeCN holistic_A approach_N ;
  ethical_aspect_CN = makeCN ethical_A aspect_N ;
  design_pattern_CN = makeCN design_N pattern_N ;
  mathematical_modelling_CN = makeCN mathematical_A modelling_N ;
  functional_programming_CN = makeCN functional_A programming_N ;
  business_information_system_CN = makeCN business_N information_N system_N ;
  database_administator_CN = makeCN database_N (mkN "administator") ;
  recursive_data_type_CN = makeCN recursive_A data_N type_N ;
  graphical_user_interface_CN = makeCN graphical_A user_N interface_N ;
  two_factor_authentication_CN = makeCN (mkA "two-factor") authentication_N ;
  mandatory_access_control_CN = makeCN mandatory_A access_N control_N ;
  system_specification_CN = makeCN system_N specification_N ;
  multi_core_processor_CN = makeCN (mkA "multi-core") processor_N ;
  domain_specific_language_CN = makeCN (mkA "domain-specific") language_N ;
  data_management_CN = makeCN data_N management_N ;
  object_oriented_program_CN = makeCN (mkA "object-oriented") program_N ;
  machine_code_CN = makeCN machine_N code_N ;
  computer_system_CN = makeCN computer_N system_N ;
  software_engineer_CN = makeCN software_N engineer_N ;
  software_system_CN = makeCN software_N system_N ;
  game_engine_CN = makeCN game_N engine_N ;
  compiler_construction_CN = makeCN compiler_N construction_N ;
  regular_expression_CN = makeCN regular_A expression_N ;
  code_generator_CN = makeCN code_N generator_N ;
  formal_verification_CN = makeCN formal_A verification_N ;
  differential_equation_CN = makeCN differential_A equation_N ;
  artificial_intelligence_CN = makeCN artificial_A intelligence_N ;
  algorithm_design_CN = makeCN algorithm_N design_N ;
  network_security_CN = makeCN network_N security_N ;
  distributed_systems_CN = makeCN (mkA "distributed") (mkN "systems") ;
  applied_data_science_CN = makeCN (mkA "applied") data_N science_N ;
  abstract_data_type_CN = makeCN abstract_A data_N type_N ;
  abstract_method_CN = makeCN abstract_A method_N ;
  agile_software_development_CN = makeCN agile_A software_N development_N ;
  big_data_CN = makeCN big_A data_N ;
  binary_number_CN = makeCN binary_A number_N ;
  binary_search_tree_CN = makeCN binary_A search_N tree_N ;
  security_protocol_CN = makeCN security_N protocol_N ;
  virtual_private_network_CN = makeCN virtual_A private_A network_N ;
  floating_point_number_CN = makeCN (mkA "floating") point_N number_N ;
  attack_model_CN = makeCN (mkA "attack") model_N ;
  data_communication_CN = makeCN data_N communication_N ;
  domain_name_system_CN = makeCN domain_N name_N system_N ;
  routing_protocol_CN = makeCN (mkN "routing") protocol_N ;
  congestion_control_CN = makeCN congestion_N control_N ;
  text_editor_CN = makeCN text_N editor_N ;
  associate_V = mkV "associate" ;
  static_memory_CN = makeCN static_A memory_N ;
  topic_N = mkN "topic" "topics" ;
  screensaver_N = mkN "screensaver" "screensavers" ;
  quantitative_AP = mkAP quantitative_A ;
  prerequisite_N = mkN "prerequisite" "prerequisites" ;
  solid_N = mkN "solid" "solids" ;
  product_N = mkN "product" "products" ;
  specify_VS = mkVS specify_VS ;
  program_registration_CN = makeCN program_N registration_N ;
  analyse_V2 = mkV2 (mkV "analyse") ;
  subroutine_N = mkN "subroutine" "subroutines" ;
  external_N = mkN "external" "externals" ;
  complexity_analysis_CN = makeCN complexity_N analysis_N ;
  expansion_N = mkN "expansion" "expansions" ;
  computer_system_architecture_CN = makeCN computer_N system_N architecture_N ;
  computer_science_CN = makeCN computer_N science_N ;
  assignment_N = mkN "assignment" "assignments" ;
  construct_V = mkV "construct" ;
  computer_security_CN = makeCN computer_N security_N ;
  prototype_N = mkN "prototype" "prototypes" ;
  verification_N = mkN "verification" "verifications" ;
  unification_N = mkN "unification" "unifications" ;
  concurrent_AP = mkAP concurrent_A ;
  compiler_techniques_CN = makeCN compiler_N (mkN "techniques") ;
  processor_base_CN = makeCN processor_N base_N ;
  program_code_CN = makeCN program_N code_N ;
  covariance_N = mkN "covariance" "covariances" ;
  fundamental_AP = mkAP fundamental_A ;
  comprehend_VV = mkVV (mkV "comprehend") ;
  resource_requirement_search_CN = makeCN resource_N requirement_N (mkN "search") ;
  terminal_AP = mkAP terminal_A ;
  bridge_N = mkN "bridge" "bridges" ;
  skill_N = mkN "skill" "skills" ;
  software_development_CN = makeCN software_N development_N ;
  compose_V2 = mkV2 (mkV "compose") ;
  username_V3 = mkV3 (mkV "username") ;
  image_V2 = mkV2 (mkV "image") ;
  change_V2 = mkV2 (mkV "change") ;
  teach_V2V = teach_V2V ;
  write_VV = write_VV ;
  assembly_programming_CN = makeCN assembly_N programming_N ;
  evaluation_N = mkN "evaluation" "evaluations" ;
  website_N = mkN "website" "websites" ;
  complement_V2 = mkV2 (mkV "complement") ;
  output_N = mkN "output" "outputs" ;
  constructor_N = mkN "constructor" "constructors" ;
  decide_VV = decide_VV ;
  template_N = mkN "template" "templates" ;
  program_plan_CN = makeCN program_N plan_N ;
  airflow_N = mkN "airflow" "airflows" ;
  hint_VS = mkVS hint_VS ;
  software_development_CN = makeCN software_N development_N ;
  driver_N = mkN "driver" "drivers" ;
  document_V = mkV "document" ;
  spectrum_N = mkN "spectrum" "spectrums" ;
  argue_VS = mkVS argue_VS ;
  vehicle_N = mkN "vehicle" "vehicles" ;
  contravariance_N = mkN "contravariance" "contravariances" ;
  background_N = mkN "background" "backgrounds" ;
  microarchitecture_level_CN = makeCN (mkN "microarchitecture" "microarchitectres") level_N ;
  copy_V2 = mkV2 (mkV "copy") ;
  associate_V2 = mkV2 (mkV "associate") ;
  error_N = mkN "error" "errors" ;
  indirect_AP = mkAP indirect_A ;
  user_experience_CN = makeCN user_N experience_N ;
  tape_V2 = mkV2 (mkV "tape") ;
  prerequisite_N = mkN "prerequisite" "prerequisites" ;
  supercomputer_N = mkN "supercomputer" "supercomputers" ;
  unit_V2V = unit_V2V ;
  compulsory_AP = mkAP compulsory_A ;
  pseudo_AP = mkAP pseudo_A ;
  software_development_CN = makeCN software_N development_N ;
  neural_network_CN = makeCN neural_A network_N ;
  comparable_AP = mkAP comparable_A ;
  synchronization_error_CN = makeCN synchronization_N error_N ;
  data_dependencies_CN = makeCN data_N (mkN "dependencies") ;
  constant_AP = mkAP constant_A ;
  assume_VS = mkVS assume_VS ;
  enable_VS = mkVS enable_VS ;
  finance_V2 = mkV2 (mkV "finance") ;
  generalize_V2 = mkV2 (mkV "generalize") ;
  reinforce_V2 = mkV2 (mkV "reinforce") ;
  batch_N = mkN "batch" "batches" ;
  abstract_N = mkN "abstract" "abstracts" ;
  work_N = mkN "work" "works" ;
  educational_programme_CN = makeCN educational_A programme_N ;
  os_N = mkN "os" ;
  modify_V2 = mkV2 (mkV "modify") ;
  distribution_N = mkN "distribution" "distributions" ;
  computer_science_CN = makeCN computer_N science_N ;
  motherboard_V2 = mkV2 (mkV "motherboard") ;
  study_V2 = mkV2 (mkV "study") ;
  relation_N = mkN "relation" "relations" ;
  examination_N = mkN "examination" "examinations" ;
  hardware_system_CN = makeCN hardware_N system_N ;
  program_verification_CN = makeCN program_N verification_N ;
  question_V2 = mkV2 (mkV "question") ;
  programming_skill_CN = makeCN programming_N skill_N ;
  aim_VV = aim_VV ;
  select_VV = select_VV ;
  antecedent_AP = mkAP antecedent_A ;
  user_group_CN = makeCN user_N group_N ;
  system_verification_CN = makeCN system_N verification_N ;
  modelling_language_CN = makeCN modelling_N language_N ;
  book_V2 = mkV2 (mkV "book") ;
  automaton_N = mkN "automaton" "automatons" ;
  multiprocessing_N = mkN "multiprocessing" "multiprocessings" ;
  performance_optimization_CN = makeCN performance_N optimization_N ;
  examination_hall_exam_CN = makeCN examination_N hall_N exam_N ;
  implementation_problem_CN = makeCN implementation_N problem_N ;
  accompany_V2 = mkV2 (mkV "accompany") ;
  primary_AP = mkAP primary_A ;
  storage_techniques_CN = makeCN storage_N (mkN "techniques") ;
  introduction_N = mkN "introduction" "introductions" ;
  user_test_CN = makeCN user_N test_N ;
  type_V2 = mkV2 (mkV "type") ;
  ethics_N = mkN "ethics" ;
  individual_N = mkN "individual" "individuals" ;
  individual_AP = mkAP individual_A ;
  authore_V2 = mkV2 (mkV "authore");
  performance_analysis_CN = makeCN performance_N analysis_N ;
  routine_N = mkN "routine" "routines" ;
  version_control_system_CN = makeCN version_N control_N system_N ;
  standard_class_CN = makeCN standard_N class_N ;
  language_extension_CN = makeCN language_N extension_N ;
  thesis_N = mkN "thesis" "thesiss" ;
  electricity_N = mkN "electricity" "electricitys" ;
  distribute_V = mkV "distribute" ;
  programming_course_CN = makeCN programming_N course_N ;
  assembly_code_CN = makeCN assembly_N code_N ;
  polymorphism_N = mkN "polymorphism" "polymorphisms" ;
  standard_algorithm_CN = makeCN standard_A algorithm_N ;
  menu_N = mkN "menu" "menus" ;
  power_consumption_CN = makeCN power_N consumption_N ;
  approximate_V2 = mkV2 (mkV "approximate") ;
  data_collection_CN = makeCN data_N collection_N ;
  extend_V2 = mkV2 (mkV "extend") ;
  shareware_N = mkN "shareware" "sharewares" ;
  antibiotic_N = mkN "antibiotic" "antibiotics" ;
  unify_V2 = mkV2 (mkV "unify") ;
  data_communication_CN = makeCN data_N communication_N ;
  simulation_method_CN = makeCN simulation_N method_N ;
  strategy_N = mkN "strategy" "strategys" ;
  memory_hierarchy_CN = makeCN memory_N hierarchy_N ;
  give_V3 = give_V3 ;
  domain_specific_CN = makeCN domain_N (mkAP (mkA "specific")) ;
  monitor_N = mkN "monitor" "monitors" ;
  fan_V2 = mkV2 (mkV "fan") ;
  systematic_AP = mkAP systematic_A ;
  calculus_N = mkN "calculus" "calculuss" ;
  ai_N = mkN "ai" "ais" ;
  multiprocessor_N = mkN "multiprocessor" "multiprocessors" ;
  modular_AP = mkAP modular_A ;
  computing_capacity_CN = makeCN (mkN "computing") capacity_N ;
  secure_V2 = mkV2 (mkV "secure") ;
  taskbar_N = mkN "taskbar" "taskbars" ;
  programming_problem_CN = makeCN programming_N problem_N ;
  complete_V2 = mkV2 (mkV "complete") ;
  basic_N = mkN "basic" "basics" ;
  start_V2 = mkV2 (mkV "start") ;
  optimization_N = mkN "optimization" "optimizations" ;
  purpose_N = mkN "purpose" "purposes" ;
  system_requirement_CN = makeCN system_N requirement_N ;
  attribute_N = mkN "attribute" "attributes" ;
  learning_outcome_CN = makeCN learning_N outcome_N ;
  sample_V2 = mkV2 (mkV "sample") ;
  determine_VV = determine_VV ;
  cryptology_N = mkN "cryptology" "cryptologys" ;
  computer_science_CN = makeCN computer_N science_N ;
  parallellization_N = mkN "parallellization" "parallellizations" ;
  empirical_AP = mkAP empirical_A ;
  partition_V2 = mkV2 (mkV "partition") ;
  predict_VS = mkVS predict_VS ;
  performance_bottleneck_CN = makeCN performance_N bottleneck_N ;
  code_development_tool_CN = makeCN code_N development_N tool_N ;
  reality_N = mkN "reality" "realitys" ;
  admission_requirement_CN = makeCN admission_N requirement_N ;
  normal_form_CN = makeCN normal_N form_N ;
  look_VV = look_VV ;
  architect_N = mkN "architect" "architects" ;
  mutable_AP = mkAP mutable_A ;
  reliable_AP = mkAP reliable_A ;
  token_N = mkN "token" "tokens" ;
  data_abstraction_CN = makeCN data_N abstraction_N ;
  require_VV = require_VV ;
  acoustic_N = mkN "acoustic" "acoustics" ;
  light_N = mkN "light" "lights" ;
  parse_V2 = mkV2 (mkV "parse") ;
  version_control_CN = makeCN version_N control_N ;
  output_N = mkN "output" "outputs" ;
  cyber_security_CN = makeCN (mkN "cyber") security_N ;
  vary_V2 = mkV2 (mkV "vary") ;
  photo_realistic_CN = makeCN photo_N (mkAP (mkA "realistic")) ;
  admission_requirement_CN = makeCN admission_N requirement_N ;
  establish_V = mkV "establish" ;
  course_specific_CN = makeCN course_N (mkAP (mkA "specific")) ;
  extract_V = mkV "extract" ;
  group_N = mkN "group" "groups" ;
  programming_assignment_CN = makeCN programming_N assignment_N ;
  cluster_N = mkN "cluster" "clusters" ;
  grammars_N = mkN "grammars" "grammarss" ;
  bug_N = mkN "bug" "bugs" ;
  subclass_N = mkN "subclass" "subclasss" ;
  software_development_project_CN = makeCN software_N development_N project_N ;
  binary_AP = mkAP binary_A ;
  pointer_N = mkN "pointer" "pointers" ;
  therefore_Adv = mkAdv (mkA "therefore") ;
  similar_AP = mkAP similar_A ;
  implementation_problems_CN = makeCN implementation_N (mkN "problems") ;
  objective_N = mkN "objective" "objectives" ;
  reader_N = mkN "reader" "readers" ;
  logo_N = mkN "logo" "logos" ;
  object_oriented_CN = makeCN object_N (mkN "oriented") ;
  litterature_study_CN = makeCN (mkN "litterature" "litteratures") (mkN "study" "studies") ;
  device_N = mkN "device" "devices" ;
  hotkey_N = mkN "hotkey" "hotkeys" ;
  overcome_V2 = mkV2 (mkV "overcome") ;
  subjunctive_N = mkN "subjunctive" "subjunctives" ;
  accept_VV = mkVV (mkV "accept") ;
  interface_design_CN = makeCN interface_N design_N ;
  multiplication_N = mkN "multiplication" "multiplications" ;
  syntax_analysis_CN = makeCN syntax_N analysis_N ;
  characteristic_AP = mkAP characteristic_A ;
  flash_V2 = mkV2 (mkV "flash") ;
  course_plan_CN = makeCN course_N plan_N ;
  network_protocol_CN = makeCN network_N protocol_N ;
  communication_system_CN = makeCN communication_N system_N ;
  computer_based_CN = makeCN computer_N (mkAP (mkA "based")) ;
  basic_principle_CN = makeCN basic_A principle_N ;
  approximation_N = mkN "approximation" "approximations" ;
  exemplify_V2 = mkV2 (mkV "exemplify") ;
  begin_V2 = mkV2 (mkV "begin") ;
  development_process_CN = makeCN development_N process_N ;
  mouse_N = mkN "mouse" "mice" ;
  program_component_CN = makeCN program_N component_N ;
  polymorph_AP = mkAP (mkA "polymorph") ;
  name_V3 = name_V3 ;
  entry_requirements_CN = makeCN entry_N (mkN "requirements") ;
  recoverable_AP = mkAP recoverable_A ;
  machine_oriented_CN = makeCN machine_N (mkAP (mkA "oriented")) ;
  implement_V = mkV "implement" ;
  autonomous_AP = mkAP autonomous_A ;
  interdisciplinary_AP = mkAP interdisciplinary_A ;
  apply_VV = apply_VV ;
  paradigm_N = mkN "paradigm" "paradigms" ;
  cache_memory_CN = makeCN cache_N memory_N ;
  explore_VS = mkVS explore_VS ;
  memory_hierarchy_level_CN = makeCN memory_N hierarchy_N level_N ;
  better_V2 = mkV2 (mkV "better") ;
  boot_V2 = mkV2 (mkV "boot") ;
  interface_N = mkN "interface" "interfaces" ;
  underlying_AP = mkAP underlying_A ;
  section_N = mkN "section" "sections" ;
  contents_N = mkN "contents" "contentss" ;
  word_V2 = mkV2 (mkV "word") ;
  use_VV = use_VV ;
  develop_V = mkV "develop" ;
  discuss_VS = mkVS discuss_VS ;
  common_N = mkN "common" "commons" ;
  bound_V2V = bound_V2V ;
  reflection_N = mkN "reflection" "reflections" ;
  algorithm_design_techniques_CN = makeCN algorithm_N design_N (mkN "techniques") ;
  terabyte_N = mkN "terabyte" "terabytes" ;
  inference_N = mkN "inference" "inferences" ;
  switch_V2 = mkV2 (mkV "switch") ;
  mode_N = mkN "mode" "modes" ;
  connect_V2 = mkV2 (mkV "connect") ;
  degree_N = mkN "degree" "degrees" ;
  software_technology_CN = makeCN software_N technology_N ;
  data_processing_CN = makeCN data_N processing_N ;
  pseudocode_V2 = mkV2 (mkV "pseudocode") ;
  statistical_AP = mkAP statistical_A ;
  state_N = mkN "state" "states" ;
  bus_V2 = mkV2 (mkV "bus") ;
  encapsulation_N = mkN "encapsulation" "encapsulations" ;
  detect_V2 = mkV2 (mkV "detect") ;
  circuit_structure_CN = makeCN circuit_N structure_N ;
  parsing_N = mkN "parsing" "parsings" ;
  hardware_unit_CN = makeCN hardware_N unit_N ;
  click_V = mkV "click" ;
  menu_bar_CN = makeCN menu_N bar_N ;
  root_V2 = mkV2 (mkV "root") ;
  drive_N = mkN "drive" "drives" ;
  injection_N = mkN "injection" "injections" ;
  superclass_N = mkN "superclass" "superclasss" ;
  lisp_V2 = mkV2 (mkV "lisp") ;
  well_grounded_AP = mkAP (mkA "well-grounded") ;
  supervision_N = mkN "supervision" "supervisions" ;
  software_development_assignment_CN = makeCN software_N development_N assignment_N ;
  chrome_N = mkN "chrome" "chromes" ;
  processor_architecture_CN = makeCN processor_N architecture_N ;
  design_process_CN = makeCN design_N process_N ;
  cassette_N = mkN "cassette" "cassettes" ;
  processor_core_CN = makeCN processor_N core_N ;
  improve_V2 = mkV2 (mkV "improve") ;
  head_V2 = mkV2 (mkV "head") ;
  agile_AP = mkAP agile_A ;
  educational_program_CN = makeCN (mkN "educational") program_N ;
  bar_N = mkN "bar" "bars" ;
  back_N = mkN "back" "backs" ;
  context_free_CN = makeCN context_N free_N ;
  articulate_V2 = mkV2 (mkV "articulate") ;
  predicate_logic_CN = makeCN "predicate" logic_N ;
  set_N = mkN "set" "sets" ;
  responsibility_N = mkN "responsibility" "responsibilitys" ;
  capture_V2 = mkV2 (mkV "capture") ;
  standard_library_CN = makeCN standard_N library_N ;
  acceleration_N = mkN "acceleration" "accelerations" ;
  algorithm_analysis_CN = makeCN algorithm_N analysis_N ;
  android_N = mkN "android" "androids" ;
  logarithm_N = mkN "logarithm" "logarithms" ;
  composition_N = mkN "composition" "compositions" ;
  behaviour_N = mkN "behaviour" "behaviours" ;
  display_N = mkN "display" "displays" ;
  software_architecture_CN = makeCN software_N architecture_N ;
  tag_N = mkN "tag" "tags" ;
  data_set_CN = makeCN data_N set_N ;
  appropriate_V2 = mkV2 (mkV "appropriate") ;
  replacement_N = mkN "replacement" "replacements" ;
  effect_V2 = mkV2 (mkV "effect") ;
  act_VV = mkVV (mkV "act") ;
  student_N = mkN "student" "students" ;
  control_system_CN = makeCN control_N system_N ;
  evaluation_N = mkN "evaluation" "evaluations" ;
  education_N = mkN "education" "educations" ;
  computer_system_component_CN = makeCN computer_N system_N component_N ;
  prepare_VV = prepare_VV ;
  factory_N = mkN "factory" "factories" ;
  loading_N = mkN "loading" "loadings" ;
  register_N = mkN "register" "registers" ;
  theorem_N = mkN "theorem" "theorems" ;
  propositional_logic_CN = makeCN (mkA "propositional") logic_N ;
  software_development_process_CN = makeCN software_N development_N process_N ;
  experience_V2 = mkV2 (mkV "experience") ;
  rate_VS = mkVS rate_VS ;
  computer_construction_CN = makeCN computer_N construction_N ;
  unreliable_AP = mkAP unreliable_A ;
  execute_V = mkV "execute" ;
  alpha_N = mkN "alpha" "alphas" ;
  interested_AP = mkAP interested_A ;
  focus_V2 = mkV2 (mkV "focus") ;
  dot_V2 = mkV2 (mkV "dot") ;
  experiment_V2 = mkV2 (mkV "experiment") ;
  modifier_N = mkN "modifier" "modifiers" ;
  laboratory_task_CN = makeCN laboratory_N task_N ;
  cartridge_N = mkN "cartridge" "cartridges" ;
  presentation_N = mkN "presentation" "presentations" ;
  problem_solving_CN = makeCN problem_N (mkN "solving") ;
  analog_N = mkN "analog" ;
  completion_N = mkN "completion" ;
  expression_N = mkN "expression" ;
  kit_N = mkN "kit" ;
  clock_N = mkN "clock" ;
}
