--# -path=.:alltenses:morphodict

concrete TermsEng of Terms = 
  open
    MakeTermEng, ParadigmsEng, SyntaxEng, MorphoDictEng, (I=IrregEng), (R = ResEng)

in {

lincat
  Term = Utt ;
  CNCSE = CN ;
  NCSE = N ;
  APCSE = AP ;
  VCSE = V ;
  AdvCSE = Adv ;

lin
  CNSgTerm cn = mkUtt cn | mkUtt (mkNP aPl_Det cn) ;
  CNPlTerm cn = mkUtt (mkNP aPl_Det cn) ;
  APTerm ap = mkUtt ap ;
  VFinTerm v = lin Utt {s = v.s ! R.VInf} | lin Utt {s = v.s ! R.VPres} ;
  VInfTerm v = lin Utt {s = v.s ! R.VInf} | lin Utt {s = v.s ! R.VPres} ;
  AdvTerm adv = mkUtt adv ;

  N2CN n = mkCN n ;

-- example lexicon
lin
  goal_CNCSE = mkCN (mkN "goal" "goals") ;
  generation_NCSE = mkN "generation" "generations" ;
  partnership_NCSE = mkN "partnership" ;
  project_NCSE = mkN "project" "projects" ;
  semantic_APCSE = mkAP semantic_A ;
  encode_VCSE  = (mkV "encode") ;
  bitrate_NCSE = mkN "bitrate" ;
  protocol_NCSE = mkN "protocol" "protocols" ;
  coding_theory_CNCSE = makeCN (mkN "coding") theory_N ;
  data_NCSE = mkN "data" ;
  type_NCSE = mkN "type" "types";
  graph_NCSE = mkN "graph" "graphs";
  syntax_NCSE = mkN "syntax" "syntaxes";
  notation_NCSE = mkN "notation" "notations";
  tree_NCSE = mkN "tree" "trees";
  window_NCSE = mkN "window" "windows";
  toolbox_NCSE = mkN "toolbox" "toolboxes";
  accelerate_VCSE  = (mkV "accelerate" "accelerates") ;
  graphic_NCSE = mkN "graphic" "graphics" ;
  port_NCSE = mkN "port" "ports";
  access_NCSE = mkN "access" ;
  control_NCSE = mkN "control" "controls";
  list_NCSE = mkN "list" "lists";
  method_NCSE = mkN "method" "methods";
  time_NCSE = mkN "time" "times";
  poison_NCSE = mkN "poison" "poisons" ;
  acknowledge_VCSE  = (mkV "acknowledge" "acknowledgement") ;
  character_NCSE = mkN "character" "characters" ;
  acoustic_NCSE = mkN "acoustic" "acoustics";
  coupler_NCSE = mkN "coupler" "couplers" ;
  acronym_NCSE = mkN "acronym" "acronyms" ;
  letters_NCSE = mkN "letters" ;
  active_APCSE = mkAP active_A ;
  current_NCSE = mkN "current" "currents";
  loop_NCSE = mkN "loop" "loops";
  directory_NCSE = mkN "directory" "directories";
  hub_NCSE = mkN "hub" "hubs";
  matrix_NCSE = mkN "matrix" "matricies";
  liquid_NCSE = mkN "liquid" "liquids" ;
  crystal_NCSE = mkN "crystal" "crystals" ;
  display_NCSE = mkN "display" "displays" ;
  monitor_NCSE = mkN "monitor" "monitors" ;
  server_NCSE = mkN "server" "servers" ;
  page_NCSE = mkN "page" "pages" ;
  terminator_NCSE = mkN "terminator" "terminators" ;
  object_NCSE = mkN "object" "objects" ;
  actor_NCSE = mkN "actor" "actors" ;
  base_VCSE  = (mkV "base" "bases") ;
  concurrent_APCSE = mkAP concurrent_A ;
  language_NCSE = mkN "language" "languages";
  adaptive_APCSE = mkAP adaptive_A ;
  equalizer_NCSE = mkN "equalizer" "equalizers";
  replacement_NCSE = mkN "replacement" "replacements";
  cache_NCSE = mkN "cache" "caches" ;
  address_NCSE = mkN "address" "addresses";
  resolution_NCSE = mkN "resolution" "resolutions";
  space_NCSE = mkN "space" "spaces" ;
  layout_NCSE = mkN "layout" "layouts" ;
  randomization_NCSE = mkN "randomization" "randomizations" ;
  administrative_APCSE = mkAP administrative_A ;
  domain_NCSE = mkN "domain" "domains" ;
  adobe_NCSE = mkN "adobe" ;
  flash_NCSE = mkN "flash" "flashes" ;
  audio_NCSE = mkN "audio" ;
  code_VCSE  = (mkV "code") ;
  environment_NCSE = mkN "environment" "environments" ;
  configuration_NCSE = mkN "configuration" "configurations" ;
  power_NCSE = mkN "power" "powers" ;
  interface_NCSE = mkN "interface" "interfaces" ;
  communication_NCSE = mkN "communication" "communications" ;
  procedure_NCSE = mkN "procedure" "procedures" ;
  encryption_NCSE = mkN "encryption" "encryptions" ;
  standard_NCSE = mkN "standard" "standards" ;
  linux_NCSE = mkN "linux" ;
  sound_NCSE = mkN "sound" "sounds" ;
  architecture_NCSE = mkN "architecture" "architectures" ;
  message_NCSE = mkN "message" "messages" ;
  queue_VCSE  = mkV "queue" ;
  micro_APCSE = mkAP micro_A ;
  device_NCSE = mkN "device" "devices";
  interrupt_VCSE  = (mkV "interrupt") ;
  controller_NCSE = mkN "controller" "controllers" ;
  research_NCSE = mkN "research" ;
  agency_NCSE = mkN "agency" "agencys" ;
  technology_NCSE = mkN "technology" "technologies" ;
  attachment_NCSE = mkN "attachment" "attachments" ;
  algorithmic_APCSE = mkAP algorithmic_A ;
  state_NCSE = mkN "state" "states";
  machine_NCSE = mkN "machine" "machines" ;
  allow_VCSE  = allow_V  ;
  cell_NCSE = mkN "cell" "cells" ;
  rate_NCSE = mkN "rate" "rates" ;
  alternate_VCSE  = (mkV "alternate") ;
  national_APCSE = mkAP national_A ;
  institute_NCSE = mkN "institute" "institutes" ;
  for_Prep = mkPrep "for" ;
  internet_NCSE = mkN "internet" ;
  number_NCSE = mkN "number" "numbers" ;
  amoled_NCSE = mkN "amoled" ;
  amplitude_NCSE = mkN "amplitude" "amplitudes" ;
  compiler_NCSE = mkN "compiler" "compilers" ;
  digital_APCSE = mkAP digital_A ;
  converter_NCSE = mkN "converter" "converters";
  anisotropic_APCSE = mkAP anisotropic_A ;
  filter_VCSE  = (mkV "filter") ;
  escape_NCSE = mkN "escape" "escapes" ;
  antivirus_NCSE = mkN "antivirus" ;
  apache_NCSE = mkN "apache" ;
  ant_NCSE = mkN "ant" "ants" ;
  portable_APCSE = mkAP portable_A ;
  apple_NCSE = mkN "apple" "apples" ;
  desktop_NCSE = mkN "desktop" "desktops" ;
  bus_NCSE = mkN "bus" "buses" ;
  connector_NCSE = mkN "connector" "connectors" ;
  filing_NCSE = mkN "filing" "filings" ;
  lossless_APCSE = mkAP lossless_A ;
  worldwide_APCSE = mkAP worldwide_A ;
  developer_NCSE = mkN "developer" "developers" ;
  conference_NCSE = mkN "conference" "conferences" ;
  application_NCSE = mkN "application" "applications" ;
  binary_APCSE = mkAP binary_A ;
  layer_NCSE = mkN "layer" "layers" ;
  service_NCSE = mkN "service" "services" ;
  provider_NCSE = mkN "provider" "providers" ;
  specific_APCSE = mkAP specific_A ;
  integrate_VCSE  = (mkV "integrate") ;
  circuit_NCSE = mkN "circuit" "circuits" ;
  border_NCSE = mkN "border" "borders" ;
  router_NCSE = mkN "router" "routers" ;
  arithmetic_NCSE = mkN "arithmetic" "arithmetics" ;
  logic_NCSE = mkN "logic" "logics" ;
  holding_NCSE = mkN "holding" "holdings" ;
  operate_VCSE  = (mkV "operate") ;
  system_NCSE = mkN "system" "systems" ;
  artificial_APCSE = mkAP artificial_A ;
  intelligence_NCSE = mkN "intelligence" ;
  neural_APCSE = mkAP neural_A ;
  network_NCSE = mkN "network" "networks" ;
  ascii_NCSE = mkN "ascii" ;
  aspect_NCSE = mkN "aspect" "aspects" ;
  orient_VCSE  = (mkV "orient") ;
  association_NCSE = mkN "association" "associations" ;
  machinery_NCSE = mkN "machinery" "machineries" ;
  asymmetric_APCSE = mkAP asymmetric_A ;
  subscriber_NCSE = mkN "subscriber" "subscribers" ;
  asynchronous_APCSE = mkAP asynchronous_A ;
  balance_VCSE  = (mkV "balance") ;
  mode_NCSE = mkN "mode" "modes" ;
  transfer_NCSE = mkN "transfer" "transfers" ;
  ethernet_NCSE = mkN "ethernet" ;
  adaptation_NCSE = mkN "adaptation" "adaptations" ;
  attenuation_NCSE = mkN "attenuation" "attenuations" ;
  crosstalk_NCSE = mkN "crosstalk" "crosstalks" ;
  ratio_NCSE = mkN "ratio" "ratios" ;
  modem_NCSE = mkN "modem" "modems" ;
  video_NCSE = mkN "video" "videos" ;
  interleave_VCSE  = (mkV "interleave") ;
  accessibility_NCSE = mkN "accessibility" "accessibilities" ;
  guideline_NCSE = mkN "guideline" "guidelines" ;
  automate_VCSE  = (mkV "automate") ;
  classification_NCSE = mkN "classification" "classifications" ;
  entity_NCSE = mkN "entity" "entities" ;
  security_NCSE = mkN "security" "securities" ;
  enhancement_NCSE = mkN "enhancement" "enhancements" ;
  baud_NCSE = mkN "baud" "bauds" ;
  detection_NCSE = mkN "detection" "detections" ;
  call_NCSE = mkN "call" "calls" ;
  distributor_NCSE = mkN "distributor" "distributors" ;
  available_APCSE = mkAP available_A ;
  bit_NCSE = mkN "bit" "bits" ;
  average_NCSE = mkN "average" "averages" ;
  average_APCSE = mkAP (mkA "average") ;
  bandwidth_NCSE = mkN "bandwidth" ;
  processor_NCSE = mkN "processor" "processors" ;
  basic_APCSE = mkAP basic_A ;
  multilingual_APCSE = mkAP multilingual_A ;
  plane_NCSE = mkN "plane" "planes" ;
  telecommunication_NCSE = mkN "telecommunication" "telecommunications" ;
  infrastructure_NCSE = mkN "infrastructure" "infrastructures" ;
  distribution_NCSE = mkN "distribution" "distributions" ;
  bidirectional_APCSE = mkAP bidirectional_A ;
  forwarding_NCSE = mkN "forwarding" ;
  directional_APCSE = mkAP directional_A ;
  text_NCSE = mkN "text" ;
  decimal_NCSE = mkN "decimal" "decimals" ;
  library_NCSE = mkN "library" "libraries" ;
  large_APCSE = mkAP large_A ;
  bind_VCSE  = (mkV "bind") ;
  bios_NCSE = mkN "bios" ;
  bipolar_APCSE = mkAP bipolar_A ;
  junction_NCSE = mkN "junction" "junctions" ;
  transistor_NCSE = mkN "transistor" "transistors" ;
  error_NCSE = mkN "error" "errors" ;
  block_NCSE = mkN "block" "blocks" ;
  availability_NCSE = mkN "availability" "availabilities" ;
  map_NCSE = mkN "map" "maps" ;
  screen_NCSE = mkN "screen" "screens" ;
  death_NCSE = mkN "death" "deaths" ;
  bluetooth_NCSE = mkN "bluetooth" ;
  boot_VCSE  = (mkV "boot") ;
  gateway_NCSE = mkN "gateway" "gateways";
  normal_APCSE = mkAP normal_A ;
  form_NCSE = mkN "form" "forms" ;
  breadth_NCSE = mkN "breadth" ;
  device_NCSE = mkN "device" "devices" ;
  bulletin_NCSE = mkN "bulletin" "bulletins" ;
  business_NCSE = mkN "business" "businesses" ;
  continuity_NCSE = mkN "continuity" "continuities" ;
  execution_NCSE = mkN "execution" "executions" ;
  management_NCSE = mkN "management" "managements" ;
  readiness_NCSE = mkN "readiness" ;
  reference_NCSE = mkN "reference" "references" ;
  rule_NCSE = mkN "rule" "rules" ;
  alliance_NCSE = mkN "alliance" "alliances" ;
  consumer_NCSE = mkN "consumer" "consumers" ;
  employee_NCSE = mkN "employee" "employees" ;
  byte_NCSE = mkN "byte" "bytes" ;
  order_NCSE = mkN "order" "orders" ;
  mark_NCSE = mkN "mark" "marks" ;
  fault_NCSE = mkN "fault" "faults" ;
  tolerance_NCSE = mkN "tolerance" "tolerances" ;
  capability_NCSE = mkN "capability" "capabilities" ;
  maturity_NCSE = mkN "maturity" "maturities" ;
  integration_NCSE = mkN "integration" "integrations" ;
  captcha_NCSE = mkN "captcha" "captchas" ;
  theorem_NCSE = mkN "theorem" "theorems" ;
  carriage_NCSE = mkN "carriage" "carriages" ;
  carrier_NCSE = mkN "carrier" "carriers" ;
  sense_NCSE = mkN "sense" "senses" ;
  multiple_NCSE = mkN "multiple" "multiples" ;
  collision_NCSE = mkN "collision" "collisions" ;
  sheet_NCSE = mkN "sheet" "sheets" ;
  cathode_NCSE = mkN "cathode" "cathodes" ;
  ray_NCSE = mkN "ray" "rays" ;
  tube_NCSE = mkN "tube" "tubes" ;
  cd_NCSE = mkN "cd" "cds" ;
  challenge_NCSE = mkN "challenge" "challenges" ;
  handshake_NCSE = mkN "handshake" "handshakes" ;
  authentication_NCSE = mkN "authentication" "authentications" ;
  chief_NCSE = mkN "chief" "chiefs" ;
  information_NCSE = mkN "information" "informations" ;
  officer_NCSE = mkN "officer" "officers" ;
  cisco_NCSE = mkN "cisco" ;
  discovery_NCSE = mkN "discovery" "discoveries" ;
  classless_APCSE = mkAP classless_A ;
  inter_VCSE  = (mkV "inter") ;
  client_NCSE = mkN "client" "clients";
  close_VCSE  = close_V  ;
  source_NCSE = mkN "source" "sources" ;
  metal_NCSE = mkN "metal" "metals" ;
  cloud_NCSE = mkN "cloud" "clouds" ;
  division_NCSE = mkN "division" "divisions" ;
  colour_NCSE = mkN "colour" "colours" ;
  adapter_NCSE = mkN "adapter" "adapters" ;
  command_NCSE = mkN "command" "commands" ;
  line_NCSE = mkN "line" "lines" ;
  comma_NCSE = mkN "comma" "commas" ;
  separate_VCSE  = (mkV "separate") ;
  value_NCSE = mkN "value" "values" ;
  commercial_NCSE = mkN "commercial" "commercials" ;
  shelf_NCSE = mkN "shelf" "shelfs" ;
  common_NCSE = mkN "common" "commons" ;
  request_NCSE = mkN "request" "requests" ;
  broker_NCSE = mkN "broker" "brokers" ;
  public_NCSE = mkN "public" "publics" ;
  radio_NCSE = mkN "radio" "radios" ;
  communicate_VCSE  = (mkV "communicate") ;
  sequential_APCSE = mkAP sequential_A ;
  disc_NCSE = mkN "disc" "discs" ;
  compatibility_NCSE = mkN "compatibility" "compatibilities" ;
  support_NCSE = mkN "support" "supports" ;
  module_NCSE = mkN "module" "modules" ;
  compatible_APCSE = mkAP compatible_A ;
  sharing_NCSE = mkN "sharing" "sharings";
  compile_VCSE  = (mkV "compile") ;
  function_NCSE = mkN "function" "functions" ;
  complex_NCSE = mkN "complex" ;
  instruction_NCSE = mkN "instruction" "instructions" ;
  set_NCSE = mkN "set" "sets" ;
  computer_NCSE = mkN "computer" "computers" ;
  computational_APCSE = mkAP computational_A ;
  fluid_NCSE = mkN "fluid" "fluids";
  dynamics_NCSE = mkN "dynamics" ;
  independent_APCSE = mkAP independent_A ;
  computation_NCSE = mkN "computation" "computations" ;
  compute_VCSE  = (mkV "compute") ;
  axial_APCSE = mkAP axial_A ;
  aid_VCSE  = (mkV "aid") ;
  industrial_APCSE = mkAP industrial_A ;
  manufacture_VCSE  = (mkV "manufacture") ;
  quality_NCSE = mkN "quality" "qualities";
  assist_VCSE  = (mkV "assist") ;
  translation_NCSE = mkN "translation" "translations" ;
  emergency_NCSE = mkN "emergency" "emergencys" ;
  response_NCSE = mkN "response" "responses" ;
  team_NCSE = mkN "team" "teams" ;
  generate_VCSE  = (mkV "generate") ;
  imagery_NCSE = mkN "imagery" "imageries" ;
  memory_NCSE = mkN "memory" "memories" ;
  reservation_NCSE = mkN "reservation" "reservations" ;
  science_NCSE = mkN "science" "sciences" ;
  telephony_NCSE = mkN "telephony" "telephonies" ;
  terminal_NCSE = mkN "terminal" "terminals" ;
  version_NCSE = mkN "version" "versions" ;
  database_NCSE = mkN "database" "databases" ;
  electronics_NCSE = mkN "electronics" "electronics" ;
  delivery_NCSE = mkN "delivery" "deliveries" ;
  scramble_VCSE  = mkV "scramble" ;
  free_APCSE = mkAP free_A ;
  grammar_NCSE = mkN "grammar" "grammars";
  continuous_APCSE = mkAP continuous_A ;
  protection_NCSE = mkN "protection" "protections" ;
  flow_NCSE = mkN "flow" "flows" ;
  coordinate_VCSE  = (mkV "coordinate") ;
  universal_APCSE = mkAP universal_A ;
  create_VCSE  = mkV "create" ;
  read_VCSE  = read_V  ;
  update_NCSE = mkN "update" "updates" ;
  delete_VCSE  = (mkV "delete") ;
  cross_NCSE = mkN "cross" "crosses" ;
  platform_NCSE = mkN "platform" "platforms" ;
  site_NCSE = mkN "site" "sites" ;
  forgery_NCSE = mkN "forgery" "forgeries" ;
  cryptography_NCSE = mkN "cryptography" "cryptographies" ;
  operation_NCSE = mkN "operation" "operations" ;
  relationship_NCSE = mkN "relationship" "relationships" ;
  cyclic_APCSE = mkAP cyclic_A ;
  redundancy_NCSE = mkN "redundancy" "redundancies" ;
  check_NCSE = mkN "check" "checks" ;
  cylinder_NCSE = mkN "cylinder" "cylinders" ;
  head_NCSE = mkN "head" "heads" ;
  sector_NCSE = mkN "sector" "sectors" ;
  daemon_NCSE = mkN "daemon" "daemons" ;
  definition_NCSE = mkN "definition" "definitions" ;
  diagram_NCSE = mkN "diagram" "diagrams" ;
  congestion_NCSE = mkN "congestion" "congestions" ;
  integrity_NCSE = mkN "integrity" "integrities" ;
  field_NCSE = mkN "field" "fields" ;
  loss_NCSE = mkN "loss" "losses" ;
  manipulation_NCSE = mkN "manipulation" "manipulations" ;
  equipment_NCSE = mkN "equipment" "equipments" ;
  warehouse_NCSE = mkN "warehouse" "warehouses" ;
  arrival_NCSE = mkN "arrival" "arrivals" ;
  packet_NCSE = mkN "packet" "packets" ;
  inspection_NCSE = mkN "inspection" "inspections" ;
  procedure_NCSE = mkN "procedure" "procedures" ;
  definitive_APCSE = mkAP definitive_A ;
  media_NCSE = mkN "media" "medias" ;
  denial_NCSE = mkN "denial" "denials" ;
  attack_NCSE = mkN "attack" "attacks" ;
  depth_NCSE = mkN "depth" "depths" ;
  publish_VCSE  = (mkV "publish") ;
  deterministic_APCSE = mkAP deterministic_A ;
  finite_APCSE = mkAP finite_A ;
  automaton_NCSE = mkN "automaton" "automatons" ;
  corporation_NCSE = mkN "corporation" "corporations" ;
  millennium_NCSE = mkN "millennium" "millenniums" ;
  copyright_NCSE = mkN "copyright" "copyrights" ;
  act_NCSE = mkN "act" "acts" ;
  signature_NCSE = mkN "signature" "signatures" ;
  recorder_NCSE = mkN "recorder" "recorders" ;
  visual_APCSE = mkAP visual_A ;
  recovery_NCSE = mkN "recovery" "recoveries" ;
  storage_NCSE = mkN "storage" "storages" ;
  rendering_NCSE = mkN "rendering" "renderings" ;
  manager_NCSE = mkN "manager" "managers" ;
  disaster_NCSE = mkN "disaster" "disasters" ;
  discretionary_APCSE = mkAP discretionary_A ;
  distribute_VCSE  = (mkV "distribute") ;
  document_NCSE = mkN "document" "documents" ;
  specification_NCSE = mkN "specification" "specifications" ;
  identify_VCSE  = (mkV "identify") ;
  dot_NCSE = mkN "dot" "dots" ;
  pitch_NCSE = mkN "pitch" "pitches" ;
  double_NCSE = mkN "double" "doubles" ;
  density_NCSE = mkN "density" "densities" ;
  download_VCSE  = (mkV "download") ;
  drag_VCSE  = (mkV "drag") ;
  drop_NCSE = mkN "drop" "drops" ;
  package_NCSE = mkN "package" "packages" ;
  core_NCSE = mkN "core" "cores" ;
  region_NCSE = mkN "region" "regions" ;
  game_NCSE = mkN "game" "games" ;
  dynamic_APCSE = mkAP dynamic_A ;
  exchange_NCSE = mkN "exchange" "exchanges" ;
  host_NCSE = mkN "host" "hosts" ;
  link_VCSE  = (mkV "link") ;
  random_APCSE = mkAP random_A ;
  international_APCSE = mkAP international_A ;
  learning_NCSE = mkN "learning" "learnings";
  electronically_AdvCSE  = mkAdv (mkA "electronically") ;
  store_VCSE  = (mkV "store") ;
  electronic_APCSE = mkAP electronic_A ;
  interchange_NCSE = mkN "interchange" "interchanges" ;
  delay_NCSE = mkN "delay" "delays" ;
  calculator_NCSE = mkN "calculator" "calculators" ;
  frontier_NCSE = mkN "frontier" "frontiers" ;
  foundation_NCSE = mkN "foundation" "foundations" ;
  identity_NCSE = mkN "identity" "identities" ;
  card_NCSE = mkN "card" "cards" ;
  mail_NCSE = mkN "mail" "mails" ;
  elliptic_APCSE = mkAP elliptic_A ;
  curve_NCSE = mkN "curve" "curves" ;
  elm_NCSE = mkN "elm" "elms" ;
  encrypt_VCSE  = (mkV "encrypt") ;
  end_NCSE = mkN "end" "ends" ;
  day_NCSE = mkN "day" "days" ;
  licence_NCSE = mkN "licence" "licences" ;
  agreement_NCSE = mkN "agreement" "agreements" ;
  enhance_VCSE  = (mkV "enhance") ;
  evolution_NCSE = mkN "evolution" "evolutions" ;
  interior_NCSE = mkN "interior" "interiors" ;
  resource_NCSE = mkN "resource" "resources" ;
  estimate_VCSE  = estimate_V  ;
  event_NCSE = mkN "event" "events" ;
  trace_VCSE  = (mkV "trace") ;
  format_NCSE = mkN "format" "formats" ;
  expand_VCSE = mkV "expand" ;
  expense_NCSE = mkN "expense" "expenses" ;
  cost_NCSE = mkN "cost" "costs" ;
  explicit_APCSE = mkAP explicit_A ;
  notification_NCSE = mkN "notification" "notifications" ;
  industry_NCSE = mkN "industry" "industries" ;
  triton_NCSE = mkN "triton" "tritons" ;
  hint_NCSE = mkN "hint" "hints" ;
  markup_NCSE = mkN "markup" "markups" ;
  meta_NCSE = mkN "meta" "metas" ;
  presence_NCSE = mkN "presence" "presences" ;
  tag_NCSE = mkN "tag" "tags" ;
  framework_NCSE = mkN "framework" "frameworks" ;
  exterior_NCSE = mkN "exterior" "exteriors" ;
  external_APCSE = mkAP external_A ;
  sata_NCSE = mkN "sata" "satas" ;
  extract_NCSE = mkN "extract" "extracts" ;
  transform_VCSE  = (mkV "transform") ;
  load_NCSE = mkN "load" "loads" ;
  extreme_APCSE = mkAP extreme_A ;
  low_AdvCSE  = mkAdv (mkA "low") ;
  frequency_NCSE = mkN "frequency" "frequencys" ;
  fear_NCSE = mkN "fear" "fears" ;
  uncertainty_NCSE = mkN "uncertainty" "uncertainties" ;
  doubt_NCSE = mkN "doubt" "doubts" ;
  fedora_NCSE = mkN "fedora" ;
  antenna_NCSE = mkN "antenna" "antennas" ;
  effect_NCSE = mkN "effect" "effects" ;
  gate_NCSE = mkN "gate" "gates" ;
  effect_VCSE  = (mkV "effect") ;
  replaceable_APCSE = mkAP replaceable_A ;
  allocation_NCSE = mkN "allocation" "allocations" ;
  hierarchy_NCSE = mkN "hierarchy" "hierarchies" ;
  convergence_NCSE = mkN "convergence" "convergences" ;
  output_NCSE = mkN "output" "outputs" ;
  instance_NCSE = mkN "instance" "instances" ;
  assembly_NCSE = mkN "assembly" "assemblies" ;
  correction_NCSE = mkN "correction" "corrections" ;
  dictionary_NCSE = mkN "dictionary" "dictionaries" ;
  front_NCSE = mkN "front" "fronts" ;
  side_NCSE = mkN "side" "sides" ;
  ssh_NCSE = mkN "ssh" ;
  full_APCSE = mkAP full_A ;
  future_APCSE = mkAP future_A ;
  garbage_NCSE = mkN "garbage" ;
  geographic_APCSE = mkAP geographic_A ;
  geography_NCSE = mkN "geography" "geographys" ;
  gigabit_NCSE = mkN "gigabit" "gigabits" ;
  gigabyte_NCSE = mkN "gigabyte" "gigabytes" ;
  globalization_NCSE = mkN "globalization" "globalizations" ;
  global_APCSE = mkAP global_A ;
  unique_APCSE = mkAP unique_A ;
  identifier_NCSE = mkN "identifier" "identifiers" ;
  collection_NCSE = mkN "collection" "collections" ;
  documentation_NCSE = mkN "documentation" "documentations" ;
  privacy_NCSE = mkN "privacy" "privacies" ;
  guard_NCSE = mkN "guard" "guards" ;
  group_NCSE = mkN "group" "groups" ;
  recording_NCSE = mkN "recording" "recordings" ;
  partition_NCSE = mkN "partition" "partitions" ;
  hard_APCSE = mkAP hard_A ;
  description_NCSE = mkN "description" "descriptions" ;
  hertz_NCSE = mkN "hertz" ;
  hierarchical_APCSE = mkAP hierarchical_A ;
  temporal_APCSE = mkAP temporal_A ;
  performance_NCSE = mkN "performance" "performances" ;
  speed_NCSE = mkN "speed" "speeds" ;
  throughput_NCSE = mkN "throughput" "throughputs" ;
  versatile_APCSE = mkAP versatile_A ;
  priority_NCSE = mkN "priority" "priorities" ;
  rapid_APCSE = mkAP rapid_A ;
  stream_VCSE  = mkV "stream" ;
  interaction_NCSE = mkN "interaction" "interactions" ;
  hybrid_NCSE = mkN "hybrid" "hybrids" ;
  hyperlink_NCSE = mkN "hyperlink" "hyperlinks" ;
  hypertext_NCSE = mkN "hypertext" "hypertexts" ;
  monochrome_NCSE = mkN "monochrome" "monochromes" ;
  input_NCSE = mkN "input" "inputs" ;
  editor_NCSE = mkN "editor" "editors" ;
  facility_NCSE = mkN "facility" "facilities" ;
  intellectual_APCSE = mkAP intellectual_A ;
  intelligent_APCSE = mkAP intelligent_A ;
  interactive_APCSE = mkAP interactive_A ;
  virtual_APCSE = mkAP virtual_A ;
  classroom_NCSE = mkN "classroom" "classrooms" ;
  voice_NCSE = mkN "voice" "voices" ;
  intermediate_APCSE = mkAP intermediate_A ;
  commission_NCSE = mkN "commission" "commissions" ;
  internationalization_NCSE = mkN "internationalization" "internationalizations" ;
  localization_NCSE = mkN "localization" "localizations" ;
  internationalize_VCSE  = (mkV "internationalize") ;
  organization_NCSE = mkN "organization" "organizations" ;
  union_NCSE = mkN "union" "unions" ;
  assign_VCSE = mkV "assign" ;
  authority_NCSE = mkN "authority" "authoritys" ;
  connection_NCSE = mkN "connection" "connections" ;
  report_NCSE = mkN "report" "reports" ;
  suite_NCSE = mkN "suite" "suites" ;
  relay_NCSE = mkN "relay" "relays" ;
  chat_NCSE = mkN "chat" "chats" ;
  storm_NCSE = mkN "storm" "storms" ;
  handler_NCSE = mkN "handler" "handlers" ;
  interval_NCSE = mkN "interval" "intervals" ;
  intrusion_NCSE = mkN "intrusion" "intrusions" ;
  countermeasure_NCSE = mkN "countermeasure" "countermeasures" ;
  prevention_NCSE = mkN "prevention" "preventions" ;
  panel_NCSE = mkN "panel" "panels" ;
  community_NCSE = mkN "community" "communities" ;
  extension_NCSE = mkN "extension" "extensions" ;
  class_NCSE = mkN "class" "classs" ;
  native_NCSE = mkN "native" "natives" ;
  edition_NCSE = mkN "edition" "editions" ;
  remote_APCSE = mkAP remote_A ;
  invocation_NCSE = mkN "invocation" "invocations" ;
  job_NCSE = mkN "job" "jobs" ;
  entry_NCSE = mkN "entry" "entries" ;
  subsystem_NCSE = mkN "subsystem" "subsystems" ;
  test_NCSE = mkN "test" "tests" ;
  action_NCSE = mkN "action" "actions" ;
  compilation_NCSE = mkN "compilation" "compilations" ;
  keyboard_NCSE = mkN "keyboard" "keyboards" ;
  kibibyte_NCSE = mkN "kibibyte" "kibibytes" ;
  kilobit_NCSE = mkN "kilobit" "kilobits" ;
  kilobyte_NCSE = mkN "kilobyte" "kilobytes" ;
  kilohertz_NCSE = mkN "kilohertz" ;
  knowledge_NCSE = mkN "knowledge" "knowledges" ;
  grid_NCSE = mkN "grid" "grids" ;
  scale_NCSE = mkN "scale" "scales" ;
  recent_APCSE = mkAP recent_A ;
  significant_APCSE = mkAP significant_A ;
  diode_NCSE = mkN "diode" "diodes" ;
  lightweight_APCSE = mkAP lightweight_A ;
  feed_NCSE = mkN "feed" "feeds" ;
  aggregation_NCSE = mkN "aggregation" "aggregations" ;
  scratch_NCSE = mkN "scratch" "scratches" ;
  kernel_NCSE = mkN "kernel" "kernels" ;
  professional_APCSE = mkAP professional_A ;
  silicon_NCSE = mkN "silicon" ;
  local_APCSE = mkAP local_A ;
  logical_APCSE = mkAP logical_A ;
  volume_NCSE = mkN "volume" "volumes" ;
  term_NCSE = mkN "term" "terms" ;
  insertion_NCSE = mkN "insertion" "insertions" ;
  voltage_NCSE = mkN "voltage" "voltages" ;
  magnetic_APCSE = mkAP magnetic_A ;
  recognition_NCSE = mkN "recognition" "recognitions" ;
  main_APCSE = mkAP main_A ;
  mandatory_APCSE = mkAP mandatory_A ;
  role_NCSE = mkN "role" "roles" ;
  master_NCSE = mkN "master" "masters" ;
  maximum_APCSE = mkAP maximum_A ;
  transmission_NCSE = mkN "transmission" "transmissions" ;
  medium_NCSE = mkN "medium" "mediums" ;
  megabit_NCSE = mkN "megabit" "megabits" ;
  megabyte_NCSE = mkN "megabyte" "megabytes" ;
  megahertz_NCSE = mkN "megahertz" ;
  channel_NCSE = mkN "channel" "channels" ;
  microprocessor_NCSE = mkN "microprocessor" "microprocessors" ;
  million_NCSE = mkN "million" "millions" ;
  minimum_NCSE = mkN "minimum" "minimums" ;
  ad_NCSE = mkN "ad" "ads" ;
  world_NCSE = mkN "world" "worlds" ;
  congress_NCSE = mkN "congress" "congresses" ;
  mortality_NCSE = mkN "mortality" "mortalities" ;
  medical_APCSE = mkAP medical_A ;
  picture_NCSE = mkN "picture" "pictures" ;
  expert_NCSE = mkN "expert" "experts" ;
  factor_NCSE = mkN "factor" "factors" ;
  image_NCSE = mkN "image" "images" ;
  label_NCSE = mkN "label" "labels" ;
  instrument_NCSE = mkN "instrument" "instruments" ;
  negative_APCSE = mkAP negative_A ;
  news_NCSE = mkN "news" ;
  appliance_NCSE = mkN "appliance" "appliances" ;
  internal_APCSE = mkAP internal_A ;
  uniform_NCSE = mkN "uniform" "uniforms" ;
  spline_NCSE = mkN "spline" "splines" ;
  volatile_APCSE = mkAP volatile_A ;
  laptop_NCSE = mkN "laptop" "laptops" ;
  child_NCSE = mkN "child" "children" ;
  analytical_APCSE = mkAP analytical_A ;
  transaction_NCSE = mkN "transaction" "transactions" ;
  utility_NCSE = mkN "utility" "utilities" ;
  path_NCSE = mkN "path" "paths" ;
  initiative_NCSE = mkN "initiative" "initiatives" ;
  interconnection_NCSE = mkN "interconnection" "interconnections" ;
  acceptance_NCSE = mkN "acceptance" "acceptances" ;
  convention_NCSE = mkN "convention" "conventions" ;
  organic_APCSE = mkAP organic_A ;
  original_NCSE = mkN "original" "originals" ;
  manufacturer_NCSE = mkN "manufacturer" "manufacturers" ;
  orthogonal_APCSE = mkAP orthogonal_A ;
  password_NCSE = mkN "password" "passwords" ;
  express_NCSE = mkN "express" "expressions" ;
  instrumentation_NCSE = mkN "instrumentation" "instrumentations" ;
  peer_NCSE = mkN "peer" "peers" ;
  peripheral_NCSE = mkN "peripheral" "peripherals" ;
  interconnect_VCSE  = (mkV "interconnect") ;
  perl_NCSE = mkN "perl" ;
  regular_APCSE = mkAP regular_A ;
  persistent_APCSE = mkAP persistent_A ;
  assistant_NCSE = mkN "assistant" "assistants";
  php_NCSE = mkN "php" ;
  microcontroller_NCSE = mkN "microcontroller" "microcontrollers" ;
  pin_NCSE = mkN "pin" "pins" ;
  pixel_NCSE = mkN "pixel" "pixels" ;
  old_APCSE = mkAP old_A ;
  control_VCSE  = (mkV "control") ;
  list_VCSE = mkV "list" ;
  time_VCSE  = (mkV "time") ;
  acoustic_APCSE = mkAP acoustic_A ;
  current_APCSE = mkAP current_A ;
  liquid_APCSE = mkAP liquid_A ;
  display_VCSE  = mkV "display"  ;
  monitor_VCSE  = (mkV "monitor") ;
  page_VCSE  = (mkV "page") ;
  object_VCSE  = (mkV "object") ;
  cache_VCSE  = (mkV "cache") ;
  address_VCSE  = (mkV "address") ;
  space_VCSE  = (mkV "space") ;
  flash_VCSE  = (mkV "flash") ;
  power_VCSE  = (mkV "power") ;
  standard_APCSE = mkAP standard_A ;
  sound_VCSE  = (mkV "sound") ;
  research_VCSE  = (mkV "research") ;
  project_VCSE  = project_V  ;
  state_VCSE  = mkV "state"  ;
  rate_VCSE  = rate_V  ;
  institute_VCSE  = (mkV "institute") ;
  number_VCSE  = (mkV "number") ;
  escape_VCSE  = escape_V  ;
  border_VCSE  = (mkV "border") ;
  transfer_VCSE  = (mkV "transfer") ;
  call_VCSE = call_V ;
  plane_VCSE  = (mkV "plane") ;
  file_VCSE  = (mkV "file") ;
  block_VCSE  = (mkV "block") ;
  map_VCSE  = (mkV "map") ;
  order_VCSE  = mkV "order" ;
  mark_VCSE = mark_V ;
  fault_VCSE  = (mkV "fault") ;
  sense_VCSE  = mkV "sense"  ;
  multiple_APCSE = mkAP multiple_A ;
  ray_VCSE  = (mkV "ray") ;
  challenge_VCSE  = (mkV "challenge") ;
  chief_APCSE = mkAP chief_A ;
  command_VCSE  = (mkV "command") ;
  value_VCSE  = (mkV "value") ;
  commercial_APCSE = mkAP commercial_A ;
  common_APCSE = mkAP common_1_A ;
  request_VCSE  = mkV "request"  ;
  public_APCSE = mkAP public_A ;
  support_VCSE  = mkV "support" ;
  function_VCSE  = mkV "function" ;
  complex_APCSE = mkAP complex_A ;
  set_VCSE  = I.set_V ;
  component_APCSE = mkAP component_A ;
  fluid_APCSE = mkAP fluid_A ;
  free_VCSE = mkV "free" ;
  update_VCSE  = (mkV "update") ;
  check_VCSE  = (mkV "check") ;
  attack_VCSE  = (mkV "attack") ;
  document_VCSE  = (mkV "document") ;
  double_VCSE  = (mkV "double") ;
  double_AdvCSE  = mkAdv (mkA "double") ;
  drop_VCSE  = (mkV "drop") ;
  game_VCSE  = (mkV "game") ;
  exchange_VCSE  = (mkV "exchange") ;
  learn_VCSE  = I.learn_V ;
  interchange_VCSE  = (mkV "interchange") ;
  mail_VCSE  = (mkV "mail") ;
  curve_VCSE  = (mkV "curve") ;
  end_VCSE = end_V ;
  license_VCSE  = (mkV "license") ;
  interior_APCSE = mkAP interior_A ;
  hint_VCSE  = hint_V  ;
  exterior_APCSE = mkAP exterior_A ;
  extract_VCSE  = (mkV "extract") ;
  load_VCSE  = (mkV "load") ;
  doubt_VCSE  = mkV "doubt"  ;
  partition_VCSE  = (mkV "partition") ;
  hard_AdvCSE  = mkAdv (mkA "hard") ;
  monochrome_APCSE = mkAP monochrome_A ;
  report_VCSE  = report_V  ;
  chat_VCSE  = (mkV "chat") ;
  storm_VCSE  = (mkV "storm") ;
  native_APCSE = mkAP native_A ;
  job_VCSE  = (mkV "job") ;
  scale_VCSE  = (mkV "scale") ;
  scratch_VCSE  = (mkV "scratch") ;
  master_VCSE  = (mkV "master") ;
  label_VCSE = label_1_V | label_2_V ; --- labeled | labelled
  uniform_APCSE = mkAP uniform_A ;
  original_APCSE = mkAP original_A ;
  express_VCSE  = (mkV "express") ;
  express_AdvCSE  = mkAdv (mkA "express") ;
  peer_VCSE  = mkV "peer" ;
  peripheral_APCSE = mkAP peripheral_A ;
  course_NCSE = mkN "course" "courses" ;
  prerequisite_NCSE = mkN "prerequisite" "prerequisites" ;
  design_NCSE = mkN "design" "designs" ;
  principle_NCSE = mkN "principle" "principles" ;
  aim_NCSE = mkN "aim" ;
  component_NCSE = mkN "component" "components" ;
  technical_APCSE = mkAP technical_A ;
  functional_APCSE = mkAP functional_A ;
  fast_AdvCSE  = mkAdv (mkA "fast") ;
  fast_APCSE = mkAP fast_A ;
  efficient_APCSE = mkAP efficient_A ;
  progress_NCSE = mkN "progress" "processes";
  engineering_NCSE = mkN "engineering" ;
  convert_VCSE  = (mkV "convert") ;
  raw_NCSE = mkN "raw" ;
  software_NCSE = mkN "software" "softwares" ;
  structure_NCSE = mkN "structure" "structures" ;
  parallelism_NCSE = mkN "parallelism" "parallelisms" ;
  high_APCSE = mkAP high_A ;
  outcome_NCSE = mkN "outcome" "outcomes" ;
  concept_NCSE = mkN "concept" "concepts" ;
  modern_APCSE = mkAP modern_A ;
  advance_NCSE = mkN "advance" "advances" ;
  field_NCSE = mkN "field" "fields" ;
  advance_VCSE  = (mkV "advance") ;
  technique_NCSE = mkN "technique" "techniques";
  parallel_NCSE = mkN "parallel" ;
  parallel_APCSE = mkAP parallel_A ;
  establish_VCSE  = (mkV "establish") ;
  assess_VCSE  = (mkV "assess") ;
  proficiency_NCSE = mkN "proficiency" "proficiencies";
  quantitative_APCSE = mkAP quantitative_A ;
  impact_NCSE = mkN "impact" "impacts";
  architectural_APCSE = mkAP architectural_A ;
  simulation_NCSE = mkN "simulation" "simulations" ;
  tool_NCSE = mkN "tool" "tools" ;
  content_NCSE = mkN "content" "contents" ;
  essential_NCSE = mkN "essential" "essentials" ;
  essential_APCSE = mkAP essential_A ;
  achieve_VCSE  = (mkV "achieve") ;
  analysis_NCSE = mkN "analysis" ;
  assessment_NCSE = mkN "assessment" "assessments" ;
  consumption_NCSE = mkN "consumption" "consumptions" ;
  part_NCSE = mkN "part" "parts" ;
  affect_VCSE  = (mkV "affect") ;
  evolution_NCSE = mkN "evolution" "evolutions";
  include_VCSE  = mkV "include" ;
  law_NCSE = mkN "law" "laws";
  execution_NCSE = mkN "execution" "executions" ;
  fundamental_NCSE = mkN "fundamental" "fundamentals" ;
  locality_NCSE = mkN "locality" "localities" ;
  evaluate_VCSE  = (mkV "evaluate") ;
  level_NCSE = mkN "level" "levels";
  define_VCSE  = (mkV "define") ;
  limit_NCSE = mkN "limit" "limits" ;
  category_NCSE = mkN "category" "categorys" ;
  dynamic_NCSE = mkN "dynamic" "dynamics" ;
  static_APCSE = mkAP static_A ;
  algorithm_NCSE = mkN "algorithm" "algorithms" ;
  branch_NCSE = mkN "branch" "branches" ;
  prediction_NCSE = mkN "prediction" "predictions" ;
  speculation_NCSE = mkN "speculation" "speculations" ;
  different_APCSE = mkAP different_A ;
  bottleneck_NCSE = mkN "bottleneck" "bottlenecks";
  reduce_VCSE  = (mkV "reduce") ;
  miss_NCSE = mkN "miss" "misses" ;
  penalty_NCSE = mkN "penalty" "penalties" ;
  hit_NCSE = mkN "hit" "hits" ;
  example_NCSE = mkN "example" "examples" ;
  free_NCSE = mkN "free" ;
  address_VCSE  = (mkV "address") ;
  linear_APCSE = mkAP linear_A ;
  algebra_NCSE = mkN "algebra" ;
  probability_NCSE = mkN "probability" "probabilities" ;
  theory_NCSE = mkN "theory" "theories" ;
  program_VCSE = mkV "program" ;
  desirable_APCSE = mkAP desirable_A ;
  image_NCSE = mkN "image" "images" ;
  overview_NCSE = mkN "overview" "overviews" ;
  practical_APCSE = mkAP practical_A ;
  measurement_NCSE = mkN "measurement" "measurements";
  develop_VCSE  = (mkV "develop") ;
  solve_VCSE  = (mkV "solve") ;
  problem_NCSE = mkN "problem" "problems";
  derive_VCSE  = (mkV "derive") ;
  geometry_NCSE = mkN "geometry" "geometries" ;
  optimization_NCSE = mkN "optimization" "optimizations" ;
  statistics_NCSE = mkN "statistics" ;
  grade_VCSE  = (mkV "grade") ;
  camera_NCSE = mkN "camera" "cameras" ;
  modelling_NCSE = mkN "modelling" "modellings" ;
  stereo_NCSE = mkN "stereo" "stereos" ;
  mathematical_APCSE = mkAP mathematical_A ;
  central_NCSE = mkN "central" "centrals" ;
  square_NCSE = mkN "square" "squares" ;
  apply_VCSE  = mkV "apply" ;
  terminology_NCSE = mkN "terminology" "terminologies" ;
  structure_VCSE  = (mkV "structure") ;
  solution_NCSE = mkN "solution" "solutions" ;
  geometric_APCSE = mkAP geometric_A ;
  exercise_NCSE = mkN "exercise" "exercises" ;
  session_NCSE = mkN "session" "sessions" ;
  pair_NCSE = mkN "pair" "pairs" ;
  submission_NCSE = mkN "submission" "submissions" ;
  result_NCSE = mkN "result" "results" ;
  lecture_NCSE = mkN "lecture" "lectures" ;
  article_NCSE = mkN "article" "articles" ;
  university_NCSE = mkN "university" "universities" ;
  element_NCSE = mkN "element" "elements" ;
  programming_NCSE = mkN "programming" ;
  model_NCSE = mkN "model" "models" ;
  chip_NCSE = mkN "chip" "chips" ;
  share_VCSE  = (mkV "share") ;
  thread_NCSE = mkN "thread" "threads";
  scientific_APCSE = mkAP scientific_A ;
  literature_NCSE = mkN "literature" "literatures" ;
  sequence_NCSE = mkN "sequence" "sequences" ;
  lab_NCSE = mkN "lab" "labs" ;
  methodology_NCSE = mkN "methodology" "methodologies" ;
  systematically_AdvCSE  = mkAdv (mkA "systematically") ;
  assembly_NCSE = mkN "assembly" "assemblies" ;
  sustainability_NCSE = mkN "sustainability" "sustainabilities" ;
  compute_VCSE  = (mkV "compute") ;
  sustainable_APCSE = mkAP sustainable_A ;
  electrical_APCSE = mkAP electrical_A ;
  mechanism_NCSE = mkN "mechanism" "mechanisms" ;
  storage_NCSE = mkN "storage" "storages" ;
  energy_NCSE = mkN "energy" "energies" ;
  operate_VCSE  = (mkV "operate") ;
  optimize_VCSE  = (mkV "optimize") ;
  interpret_VCSE  = (mkV "interpret") ;
  requirement_NCSE = mkN "requirement" "requirements" ;
  measure_VCSE  = (mkV "measure") ;
  estimate_VCSE  = estimate_V  ;
  save_VCSE  = (mkV "save") ;
  practice_NCSE = mkN "practice" "practices" ;
  discrete_APCSE = mkAP discrete_A ;
  complexity_NCSE = mkN "complexity" "complexities" ;
  kind_NCSE = mkN "kind" "kinds" ;
  context_NCSE = mkN "context" "contexts" ;
  transportation_NCSE = mkN "transportation" "transportations" ;
  physics_NCSE = mkN "physics" ;
  numerical_APCSE = mkAP numerical_A ;
  modeling_NCSE = mkN "modeling" "modelings" ;
  equation_NCSE = mkN "equation" "equations" ;
  molecular_APCSE = mkAP molecular_A ;
  integration_NCSE = mkN "integration" "integrations" ;
  planning_NCSE = mkN "planning" "plannings" ;
  hardware_NCSE = mkN "hardware" "hardwares" ;
  property_NCSE = mkN "property" "properties" ;
  optimal_APCSE = mkAP optimal_A ;
  formulate_VCSE  = (mkV "formulate") ;
  model_VCSE  = (mkV "model") ;
  manageable_APCSE = mkAP manageable_A ;
  relate_VCSE  = (mkV "relate") ;
  generic_APCSE = mkAP generic_A ;
  additional_APCSE = mkAP additional_A ;
  heuristic_NCSE = mkN "heuristic" "heuristics" ;
  dual_APCSE = mkAP dual_A ;
  obtain_VCSE  = (mkV "obtain") ;
  integer_NCSE = mkN "integer" "integers" ;
  special_APCSE = mkAP special_A ;
  separate_VCSE  = (mkV "separate") ;
  stack_NCSE = mkN "stack" "stacks";
  distribute_VCSE  = (mkV "distribute") ;
  summarize_VCSE  = (mkV "summarize") ;
  introduce_VCSE  = (mkV "introduce") ;
  development_NCSE = mkN "development" "developments" ;
  setting_NCSE = mkN "setting" "settings" ;
  link_NCSE = mkN "link" "links" ;
  limit_VCSE = mkV "limit" ;
  scalability_NCSE = mkN "scalability" "scalabilities" ;
  imperative_APCSE = mkAP imperative_A ;
  vector_NCSE = mkN "vector" "vectors" ;
  dimension_NCSE = mkN "dimension" "dimensions" ;
  implement_VCSE  = (mkV "implement") ;
  process_NCSE = mkN "process" "processes" ;
  functionality_NCSE = mkN "functionality" "functionalities" ;
  strict_APCSE = mkAP strict_A ;
  bachelor_NCSE = mkN "bachelor" "bachelors" ;
  dimensional_APCSE = mkAP dimensional_A ;
  rendering_NCSE = mkN "rendering" "renderings" ;
  shadow_NCSE = mkN "shadow" "shadows" ;
  mathematics_NCSE = mkN "mathematics" ;
  design_VCSE = mkV "design" ;
  mechanical_APCSE = mkAP mechanical_A ;
  safety_NCSE = mkN "safety" ;
  multimedia_NCSE = mkN "multimedia" "multimedias" ;
  abstraction_NCSE = mkN "abstraction" "abstractions" ;
  implement_NCSE = mkN "implement" "implements" ;
  synchronization_NCSE = mkN "synchronization" "synchronizations" ;
  node_NCSE = mkN "node" "nodes" ;
  topology_NCSE = mkN "topology" "topologies" ;
  embed_VCSE  = (mkV "embed") ;
  perform_VCSE  = (mkV "perform") ;
  behavior_NCSE = mkN "behavior" "behaviors";
  run_VCSE  = run_1_V  ;
  verify_VCSE  = (mkV "verify") ;
  good_APCSE = mkAP good_A ;
  during_Prep = mkPrep "during" ;
  task_NCSE = mkN "task" "tasks" ;
  decompose_VCSE  = (mkV "decompose") ;
  general_APCSE = mkAP general_A ;
  capacity_NCSE = mkN "capacity" "capacities" ;
  access_NCSE = mkN "access" ;
  response_NCSE = mkN "response" "responses" ;
  conjunction_NCSE = mkN "conjunction" "conjunctions" ;
  account_NCSE = mkN "account" "accounts" ;
  maximum_NCSE = mkN "maximum" ;
  low_AdvCSE  = mkAdv (mkA "low") ;
  delay_NCSE = mkN "delay" "delays" ;
  correctness_NCSE = mkN "correctness" ;
  philosophy_NCSE = mkN "philosophy" "philosophies" ;
  complex_APCSE = mkAP complex_A ;
  maintain_VCSE  = maintain_V  ;
  semaphore_NCSE = mkN "semaphore" "semaphores" ;
  semantics_NCSE = mkN "semantics" ;
  induction_NCSE = mkN "induction" "inductions" ;
  proof_NCSE = mkN "proof" "proofs" ;
  formal_APCSE = mkAP formal_A ;
  algebraic_APCSE = mkAP algebraic_A ;
  monad_NCSE = mkN "monad" "monads" ;
  transformer_NCSE = mkN "transformer" "transformers" ;
  property_NCSE = mkN "property" "properties" ;
  construction_NCSE = mkN "construction" "constructions" ;
  construct_VCSE  = (mkV "construct") ;
  quick_APCSE = mkAP quick_A ;
  exception_NCSE = mkN "exception" "exceptions" ;
  implementation_NCSE = mkN "implementation" "implementations" ;
  vulnerability_NCSE = mkN "vulnerability" "vulnerabilities" ;
  permutation_NCSE = mkN "permutation" "permutations" ;
  cipher_NCSE = mkN "cipher" "ciphers" ;
  cryptanalysis_NCSE = mkN "cryptanalysis" ;
  symmetric_APCSE = mkAP symmetric_A ;
  computer_science_CNCSE = makeCN computer_N science_N ;
  software_development_CNCSE = makeCN software_N development_N ;
  application_software_CNCSE = makeCN application_N software_N ;
  data_structure_CNCSE = makeCN data_N structure_N ;
  automata_theory_CNCSE = makeCN (mkA "automata") theory_N ;
  binary_search_algorithm_CNCSE = makeCN binary_A search_N algorithm_N ;
  bit_rate_CNCSE = makeCN bit_N rate_N ;
  cloud_computing_CNCSE = makeCN cloud_N (mkN "computing") ;
  library_CNCSE = makeCN library_N ;
  cognitive_science_CNCSE = makeCN cognitive_A science_N ;
  computability_theory_CNCSE = makeCN (mkN "computability") theory_N ;
  computational_biology_CNCSE = makeCN computational_A biology_N ;
  computational_chemistry_CNCSE = makeCN computational_A chemistry_N ;
  computational_physics_CNCSE = makeCN computational_A physics_N ;
  computer_architecture_CNCSE = makeCN computer_N architecture_N ;
  computer_data_storage_CNCSE = makeCN computer_N data_N storage_N ;
  computer_graphics_CNCSE = makeCN computer_N graphics_N ;
  computer_network_CNCSE = makeCN computer_N network_N ;
  computer_scientist_CNCSE = makeCN computer_N scientist_N ;
  computer_security_CNCSE = makeCN computer_N security_N ;
  concurrency_NCSE = mkN "concurrency" "concurrencies" ;
  control_flow_CNCSE = makeCN control_N flow_N ;
  cyberbullying_NCSE = mkN "cyberbullying" ;
  cyberspace_NCSE = mkN "cyberspace" "cyberspaces" ;
  data_center_CNCSE = makeCN data_N (mkN "center") ;
  data_mining_CNCSE = makeCN data_N mining_N ;
  data_type_CNCSE = makeCN data_N type_N ;
  signal_processing_CNCSE = makeCN signal_N processing_N ;
  domain_name_system_CNCSE = makeCN domain_N name_N system_N ;
  download_NCSE = mkN "download" "downloads" ;
  event_NCSE = mkN "event" "events" ;
  executable_APCSE = mkAP (mkA "executable") ;
  file_NCSE = mkN "file" "files" ;
  exception_handling_CNCSE = makeCN exception_N handling_N ;
  feasibility_study_CNCSE = makeCN feasibility_N study_N ;
  filename_extension_CNCSE = makeCN filename_N extension_N ;
  verification_NCSE = mkN "verification" "verifications" ;
  game_theory_CNCSE = makeCN game_N theory_N ;
  graph_theory_CNCSE = makeCN graph_N theory_N ;
  hash_function_CNCSE = makeCN hash_N function_N ;
  hash_table_CNCSE = makeCN hash_N table_N ;
  heapsort_NCSE = mkN "heapsort" ;
  human_computer_interation_CNCSE = makeCN (mkN "human-computer") (mkN "interation") ;
  integrated_development_environment_CNCSE = makeCN (mkA "integrated") development_N environment_N ;
  imperative_programming_CNCSE = makeCN imperative_A programming_N ;
  inheritance_NCSE = mkN "inheritance" "inheritances" ;
  insertion_sort_CNCSE = makeCN insertion_N sort_N ;
  array_NCSE = mkN "array" "arrays" ;
  binary_tree_CNCSE = makeCN binary_A tree_N ;
  bioinformatics_NCSE = mkN "bioinformatics" ;
  boolean_data_type_CNCSE = makeCN (mkA "boolean") data_N type_N ;
  crypto_NCSE = mkN "crypto" ;
  computer_vision_CNCSE = makeCN computer_N vision_N ;
  concatenation_NCSE = mkN "concatenation" ;
  agent_NCSE = mkN "agent" ;
  invariant_APCSE = mkAP invariant_A ;
  iteration_NCSE = mkN "iteration" "iterations" ;
  Java_NCSE = mkN "Java" ;
  programming_language_CNCSE = makeCN programming_N language_N ;
  linear_search_CNCSE = makeCN linear_A search_N ;
  linked_list_CNCSE = makeCN (mkA "linked") list_N ;
  logic_programming_CNCSE = makeCN logic_N programming_N ;
  machine_learning_CNCSE = makeCN machine_N learning_N ;
  number_theory_CNCSE = makeCN number_N theory_N ;
  numerical_analysis_CNCSE = makeCN numerical_A analysis_N ;
  operating_system_CNCSE = makeCN (mkA "operating") system_N ;
  optical_fiber_CNCSE = makeCN optical_A (mkN "fiber" "fibers") ;
  pair_programming_CNCSE = makeCN pair_N programming_N ;
  priority_queue_CNCSE = makeCN priority_N queue_N ;
  quantum_computer_CNCSE = makeCN quantum_N computer_N ;
  queue_NCSE = mkN "queue" "queues" ;
  recursion_NCSE = mkN "recursion" ;
  relational_database_CNCSE = makeCN relational_A database_N ;
  requirements_analysis_CNCSE = makeCN (mkN "requirements") analysis_N ;
  routing_table_CNCSE = makeCN (mkN "routing") table_N ;
  selection_sort_CNCSE = makeCN selection_N sort_N ;
  sequence_NCSE = mkN "sequence" "sequences" ;
  software_deployment_CNCSE = makeCN software_N deployment_N ;
  sorting_algorithm_CNCSE = makeCN sorting_N algorithm_N ;
  source_code_CNCSE = makeCN source_N code_N ;
  string_NCSE = mkN "string" "strings" ;
  user_agent_CNCSE = makeCN user_NCSE agent_NCSE ;
  user_interface_CNCSE = makeCN user_NCSE interface_N ;
  waterfall_model_CNCSE = makeCN waterfall_N model_N ;
  Wi_Fi_NCSE = mkN "Wi-Fi" ;
  XHTML_NCSE = mkN "XHTML" ;
  mathematical_model_CNCSE = makeCN mathematical_A model_N ;
  generalization_NCSE = mkN "generalization" "generalizations" ;
  concept_NCSE = mkN "concept" "concepts" ;
  blueprint_NCSE = mkN "blueprint" "blueprints" ;
  customer_NCSE = mkN "customer" "customers" ;
  end_user_CNCSE = makeCN end_N user_NCSE ;
  calculation_NCSE = mkN "calculation" "calculations" ;
  productivity_NCSE = mkN "productivity" ;
  dynamic_programming_CNCSE = makeCN dynamic_A programming_N ;
  computer_interaction_CNCSE = makeCN computer_N interaction_N ;
  development_environment_CNCSE = makeCN development_N environment_N ;
  computer_program_CNCSE = makeCN computer_N program_N ;
  programmer_NCSE = mkN "programmer" "programmers" ;
  word_processor_CNCSE = makeCN word_N processor_N ;
  spreadsheet_NCSE = mkN "spreadsheet" "spreadsheets" ;
  accounting_software_CNCSE = makeCN accounting_N software_N ;
  web_browser_CNCSE = makeCN web_N browser_N ;
  media_player_CNCSE = makeCN media_N player_N ;
  flight_simulator_CNCSE = makeCN flight_N simulator_N ;
  use_case_CNCSE = makeCN use_N case_N ;
  class_diagram_CNCSE = makeCN class_N diagram_N ;
  theoretical_APCSE = mkAP theoretical_A ;
  discreet_APCSE = mkAP discreet_A ;
  mathematics_NCSE = mkN "mathematics" ;
  discrete_mathematics_CNCSE = makeCN discrete_A mathematics_N ;
  probability_distribution_CNCSE = makeCN probability_N distribution_N ;
  time_complexity_CNCSE = makeCN time_N complexity_N ;
  set_theory_CNCSE = makeCN set_N theory_N ;
  empty_set_CNCSE = makeCN empty_A set_N ;
  software_tool_CNCSE = makeCN software_N tool_N ;
  biology_NCSE = mkN "biology" ;
  telecommunications_NCSE = mkN "telecommunications" ;
  access_control_CNCSE = makeCN access_N control_N ;
  domain_name_CNCSE = makeCN domain_N name_N ;
  ip_adress_NCSE = mkN "ip-adress" ;
  whitelist_NCSE = mkN "whitelist" "whitelists" ;
  graphics_card_CNCSE = makeCN (mkA "graphics") card_N ;
  truth_value_CNCSE = makeCN truth_N value_N ;
  variable_NCSE = mkN "variable" "variables" ;
  disjunction_NCSE = mkN "disjunction" "disjunctions" ;
  negation_NCSE = mkN "negation" "negations" ;
  hard_drive_CNCSE = makeCN hard_A drive_N ;
  control_unit_CNCSE = makeCN control_N unit_NCSE ;
  code_NCSE = mkN "code" "codes" ;
  information_theory_CNCSE = makeCN information_N theory_N ;
  linguistics_NCSE = mkN "linguistics" ;
  table_NCSE = mkN "table" "tables" ;
  file_format_CNCSE = makeCN file_N format_N ;
  computer_engineering_CNCSE = makeCN computer_N engineering_N ;
  engineering_NCSE = mkN "engineering" ;
  information_system_CNCSE = makeCN information_N system_N ;
  digital_signal_processor_CNCSE = makeCN digital_A signal_N processor_N ;
  web_server_CNCSE = makeCN web_N server_N ;
  programming_paradigm_CNCSE = makeCN programming_N paradigm_N ;
  sensor_NCSE = mkN "sensor" "sensors" ;
  graphic_APCSE = mkAP graphic_A ;
  web_application_CNCSE = makeCN web_N application_N ;
  device_driver_CNCSE = makeCN device_N driver_N ;
  instruction_set_architecture_CNCSE = makeCN instruction_N set_N architecture_N ;
  parser_NCSE = mkN "parser" "parsers";
  interruption_NCSE = mkN "interruption" "interruptions";
  inter_process_communication_CNCSE = makeCN (mkA "inter-process") communication_N ;
  operator_NCSE = mkN "operator" "operators";
  file_name_CNCSE = makeCN file_N name_N ;
  command_line_interpreter_CNCSE = makeCN (mkN "command-line") interpreter_N ;
  unique_key_CNCSE = makeCN unique_A key_N ;
  debugger_NCSE = mkN "debugger" ;
  touchscreen_NCSE = mkN "touchscreen" ;
  scripting_language_CNCSE = makeCN (mkN "scripting") language_N ;
  bug_NCSE = mkN "bug" "bugs";
  LED_NCSE = mkN "LED" "LEDs";
  speech_recognition_CNCSE = makeCN speech_N recognition_N ;
  memory_address_CNCSE = makeCN memory_N address_N ;
  computer_engineering_CNCSE = makeCN computer_N engineering_N ;
  operation_NCSE = mkN "operation" "operations" ;
  unit_NCSE = mkN "unit" "units" ;
  symbol_NCSE = mkN "symbol" "symbols" ;
  personal_computer_CNCSE = makeCN personal_A computer_N ;
  bot_NCSE = mkN "bot" "bots" ;
  wireless_APCSE = mkAP wireless_A ;
  web_page_CNCSE = makeCN web_N page_N ;
  scanner_NCSE = mkN "scanner" "scanners" ;
  abstract_APCSE = mkAP abstract_A ;
  concrete_APCSE = mkAP concrete_A ;
  accumulator_NCSE = mkN "accumulator" "accumulators" ;
  accuracy_NCSE = mkN "accuracy" ;
  precision_NCSE = mkN "precision" "precisions" ;
  selection_NCSE = mkN "selection" "selections" ;
  activation_NCSE = mkN "activation" "activations" ;
  inference_NCSE = mkN "inference" "inferences" ;
  argument_NCSE = mkN "argument" "arguments" ;
  associative_APCSE = mkAP associative_A ;
  automated_APCSE = mkAP (mkA "automated") ;
  reasoning_NCSE = mkN "reasoning" "reasonings" ;
  automaton_NCSE = mkN "automaton" "automatons" ;
  robot_NCSE = mkN "robot" "robots" ;
  robotics_NCSE = mkN "robotics" ;
  benchmark_NCSE = mkN "benchmark" "benchmarks" ;
  branch_VCSE  = mkV "branch" ;
  answer_NCSE = mkN "answer" "answers" ;
  nested_APCSE = mkAP (mkA "nested") ;
  statement_NCSE = mkN "statement" "statements" ;
  parameter_NCSE = mkN "parameter" "parameters" ;
  comment_NCSE = mkN "comment" "comments" ;
  framework_NCSE = mkN "framework" "frameworks" ;
  if_loop_NCSE = mkN "if-loop" "if-loops" ;
  if_statement_NCSE = mkN "if-statement" "if-statements" ;
  while_loop_NCSE = mkN "while-loop" "while-loops" ;
  while_statement_NCSE = mkN "while-statement" "while-statements" ;
  allocation_NCSE = mkN "allocation" "allocations" ;
  search_VCSE  = (mkV "search") ;
  build_VCSE  = (mkV "build") ;
  engine_NCSE = mkN "engine" "engines" ;
  capsule_NCSE = mkN "capsule" "capsules" ;
  categorical_APCSE = mkAP categorical_A ;
  classifier_NCSE = mkN "classifier" "classifiers" ;
  clock_VCSE  = (mkV "clock") ;
  column_NCSE = mkN "column" "columns" ;
  sort_VCSE  = (mkV "sort") ;
  computable_APCSE = mkAP computable_A ;
  console_NCSE = mkN "console" "consoles" ;
  constant_NCSE = mkN "constant" "constants" ;
  constrain_VCSE  = (mkV "constrain") ;
  conditional_APCSE = mkAP conditional_A ;
  constraint_NCSE = mkN "constraint" "constraints";
  container_NCSE = mkN "container" "containers" ;
  redundant_APCSE = mkAP redundant_A ;
  condition_NCSE = mkN "condition" "conditions";
  block_NCSE = mkN "block" "blocks";
  boolean_APCSE = mkAP (mkA "boolean") ;
  program_NCSE = mkN "program" "programs";
  sequential_APCSE = mkAP sequential_A ;
  declaration_NCSE = mkN "declaration" "declarations" ;
  declare_VCSE  = mkV "declare" ;
  initialization_NCSE = mkN "initialization" ;
  initialize_VCSE  = mkV "initialize" ;
  index_NCSE = mkN "index" "indexes" ;
  runtime_NCSE = mkN "runtime" ;
  error_NCSE = mkN "error" "errors";
  runtime_error_CNCSE = makeCN runtime_NCSE error_N ;
  accelerator_NCSE = mkN "accelerator" "accelerators" ;
  cooling_NCSE = mkN "cooling" ;
  asymptotic_APCSE = mkAP asymptotic_A ;
  optical_APCSE = mkAP optical_A ;
  variance_NCSE = mkN "variance" "variances" ;
  pattern_NCSE = mkN "pattern" "patterns" ;
  blacklist_NCSE = mkN "blacklist" "blacklists" ;
  automation_NCSE = mkN "automation" "automations" ;
  coherency_NCSE = mkN "coherency" "coherencies" ;
  closure_NCSE = mkN "closure" "closures" ;
  histogram_NCSE = mkN "histogram" "histograms" ;
  combinatorial_APCSE = mkAP combinatorial_A ;
  comparison_NCSE = mkN "comparison" "comparisons" ;
  compile_VCSE  = (mkV "compile") ;
  cybernetics_NCSE = mkN "cybernetics" ;
  conceptual_APCSE = mkAP conceptual_A ;
  conceptualization_NCSE = mkN "conceptualization" "conceptualizations" ;
  consistent_APCSE = mkAP consistent_A ;
  satisfaction_NCSE = mkN "satisfaction" ;
  continual_APCSE = mkAP continual_A ;
  improvement_NCSE = mkN "improvement" ;
  continuation_NCSE = mkN "continuation" ;
  style_NCSE = mkN "style" ;
  cooperative_APCSE = mkAP cooperative_A ;
  processing_NCSE = mkN "processing" "processings" ;
  stream_NCSE = mkN "stream" "streams" ;
  boundary_NCSE = mkN "boundary" "boundarys" ;
  default_NCSE = mkN "default" "defaults" ;
  dependency_NCSE = mkN "dependency" "dependencies" ;
  differentiable_APCSE = mkAP differentiable_A ;
  reduction_NCSE = mkN "reduction" "reductions" ;
  disk_NCSE = mkN "disk" "disks" ;
  divide_VCSE  = (mkV "divide") ;
  conquer_VCSE  = (mkV "conquer") ;
  point_NCSE = mkN "point" "points" ;
  creativity_NCSE = mkN "creativity" ;
  effective_APCSE = mkAP effective_A ;
  descriptive_APCSE = mkAP descriptive_A ;
  cable_NCSE = mkN "cable" "cables" ;
  interference_NCSE = mkN "interference" "interferences" ;
  switch_NCSE = mkN "switch" "switches" ;
  extract_VCSE  = (mkV "extract") ;
  transform_VCSE  = (mkV "transform") ;
  false_APCSE = mkAP false_A ;
  feature_NCSE = mkN "feature" "features" ;
  extraction_NCSE = mkN "extraction" "extractions" ;
  formula_NCSE = mkN "formula" "formulas" ;
  frame_NCSE = mkN "frame" "frames" ;
  open_APCSE = mkAP open_A ;
  generative_APCSE = mkAP generative_A ;
  genetic_APCSE = mkAP genetic_A ;
  human_NCSE = mkN "human" "humans";
  segmentation_NCSE = mkN "segmentation" "segmentations";
  immutable_APCSE = mkAP immutable_A ;
  incremental_APCSE = mkAP incremental_A ;
  indicator_NCSE = mkN "indicator" "indicators";
  hide_VCSE  = (mkV "hide") ;
  query_NCSE = mkN "query" "queries";
  visualization_NCSE = mkN "visualization" ;
  cycle_NCSE = mkN "cycle" "cycles";
  test_VCSE  = (mkV "test") ;
  internal_APCSE = mkAP internal_A ;
  public_APCSE = mkAP public_A ;
  interpretation_NCSE = mkN "interpretation" "interpretations";
  irregular_APCSE = mkAP irregular_A ;
  issue_NCSE = mkN "issue" "issues" ;
  iterative_APCSE = mkAP iterative_A ;
  primitive_APCSE = mkAP primitive_A ;
  lazy_APCSE = mkAP lazy_A ;
  merger_NCSE = mkN "merger" "mergers" ;
  loader_NCSE = mkN "loader" "loaders" ;
  implication_NCSE = mkN "implication" "implications" ;
  random_APCSE = mkAP random_A ;
  motion_NCSE = mkN "motion" "motions";
  nondeterministic_APCSE = mkAP (mkA "nondeterministic") ;
  monotonic_APCSE = mkAP monotonic_A ;
  transformation_NCSE = mkN "transformation" "transformations" ;
  precondition_NCSE = mkN "precondition" "preconditions" ;
  key_feature_CNCSE = makeCN key_N feature_N ;
  garbage_collection_CNCSE = makeCN garbage_N collection_N ;
  global_variable_CNCSE = makeCN global_A variable_N ;
  virus_NCSE = mkN "virus" "viruses";
  motion_sensor_CNCSE = makeCN motion_N sensor_NCSE ;
  player_NCSE = mkN "player" "players";
  recursive_APCSE = mkAP recursive_A ;
  register_VCSE  = (mkV "register") ;
  scope_NCSE = mkN "scope" "scopes";
  semiconductor_NCSE = mkN "semiconductor" "semiconductors" ;
  simulate_VCSE  = (mkV "simulate") ;
  spam_NCSE = mkN "spam" ;
  singleton_NCSE = mkN "singleton" "singletons" ;
  maintenance_NCSE = mkN "maintenance" "maintenances" ;
  validation_NCSE = mkN "validation" "validations" ;
  editor_NCSE = mkN "editor" "editors" ;
  subset_NCSE = mkN "subset" "subsets" ;
  technological_APCSE = mkAP technological_A ;
  translator_NCSE = mkN "translator" "translators" ;
  true_NCSE = mkN "true" "trues" ;
  user_NCSE = mkN "user" "users" ;
  programmable_APCSE = mkAP (mkA "programmable") ;
  text_editor_CNCSE = makeCN text_N editor_N ;
  register_NCSE = mkN "register" "registers" ;
  hardware_acceleration_CNCSE = makeCN hardware_N acceleration_N ;
  address_space_CNCSE = makeCN address_N space_N ;
  card_reader_CNCSE = makeCN card_N reader_N ;
  CD_ROM_NCSE = mkN "CD-ROM" "CD-ROMs" ;
  computer_case_CNCSE = makeCN computer_N case_N ;
  form_factor_CNCSE = makeCN form_N factor_N ;
  core_memory_CNCSE = makeCN core_N memory_N ;
  expansion_bus_CNCSE = makeCN expansion_N bus_N ;
  firewall_NCSE = mkN "firewall" "firewalls" ;
  firmware_NCSE = mkN "firmware" "firmwares" ;
  flash_memory_CNCSE = makeCN (mkA "flash") memory_N ;
  floppy_disk_CNCSE = makeCN floppy_A disk_N ;
  graphics_processing_unit_CNCSE = makeCN (mkA "graphics") processing_N unit_NCSE ;
  hard_disk_drive_CNCSE = makeCN hard_A disk_N drive_N ;
  instruction_NCSE = mkN "instruction" "instructions" ;
  integrated_circuit_CNCSE = makeCN (mkA "integrated") circuit_N ;
  mainframe_computer_CNCSE = makeCN mainframe_N computer_N ;
  memory_card_CNCSE = makeCN memory_N card_N ;
  microcode_NCSE = mkN "microcode" ;
  motherboard_NCSE = mkN "motherboard" ;
  network_interface_controller_CNCSE = makeCN network_N interface_N controller_N ;
  power_supply_CNCSE = makeCN power_N supply_N ;
  printer_NCSE = mkN "printer" ;
  sound_card_CNCSE = makeCN sound_N card_N ;
  tape_drive_CNCSE = makeCN tape_N drive_N ;
  computer_terminal_CNCSE = makeCN computer_N terminal_N ;
  trackpad_NCSE = mkN "trackpad" ;
  video_card_CNCSE = makeCN video_N card_N ;
  webcam_NCSE = mkN "webcam" ;
  fan_NCSE = mkN "fan" ;
  screen_NCSE = mkN "screen" "screens";
  LED_display_CNCSE = makeCN LED_NCSE display_N ;
  data_storage_device_CNCSE = makeCN data_N storage_N device_N ;
  communications_protocol_CNCSE = makeCN communications_N protocol_N ;
  printed_circuit_board_CNCSE = makeCN (mkA "printed") circuit_N board_N ;
  parallel_computing_CNCSE = makeCN parallel_A (mkN "computing") ;
  graphical_APCSE = mkAP graphical_A ;
  desktop_computer_CNCSE = makeCN desktop_N computer_N ;
  laser_NCSE = mkN "laser" "lasers";
  electromagnetic_APCSE = mkAP electromagnetic_A ;
  computer_mouse_CNCSE = makeCN computer_N mouse_N ;
  static_random_access_memory_CNCSE = makeCN static_A (mkA "random-access") memory_N ;
  electromagnetic_wave_CNCSE = makeCN electromagnetic_A wave_N ;
  optical_disc_CNCSE = makeCN optical_A disc_N ;
  computer_security_model_CNCSE = makeCN computer_N security_N model_N ;
  information_technology_CNCSE = makeCN information_N technology_N ;
  programming_language_CNCSE = makeCN programming_N language_N ;
  unauthorized_access_CNCSE = makeCN unauthorized_A access_N ;
  confidential_information_CNCSE = makeCN confidential_A information_N ;
  holistic_approach_CNCSE = makeCN holistic_A approach_N ;
  ethical_aspect_CNCSE = makeCN ethical_A aspect_N ;
  design_pattern_CNCSE = makeCN design_N pattern_N ;
  mathematical_modelling_CNCSE = makeCN mathematical_A modelling_N ;
  functional_programming_CNCSE = makeCN functional_A programming_N ;
  business_information_system_CNCSE = makeCN business_N information_N system_N ;
  database_administator_CNCSE = makeCN database_N (mkN "administator") ;
  recursive_data_type_CNCSE = makeCN recursive_A data_N type_N ;
  graphical_user_interface_CNCSE = makeCN graphical_A user_NCSE interface_N ;
  two_factor_authentication_CNCSE = makeCN (mkA "two-factor") authentication_N ;
  mandatory_access_control_CNCSE = makeCN mandatory_A access_N control_N ;
  system_specification_CNCSE = makeCN system_N specification_N ;
  multi_core_processor_CNCSE = makeCN (mkA "multi-core") processor_N ;
  domain_specific_language_CNCSE = makeCN (mkA "domain-specific") language_N ;
  data_management_CNCSE = makeCN data_N management_N ;
  object_oriented_program_CNCSE = makeCN (mkA "object-oriented") program_N ;
  machine_code_CNCSE = makeCN machine_N code_N ;
  computer_system_CNCSE = makeCN computer_N system_N ;
  software_engineer_CNCSE = makeCN software_N engineer_N ;
  software_system_CNCSE = makeCN software_N system_N ;
  game_engine_CNCSE = makeCN game_N engine_N ;
  compiler_construction_CNCSE = makeCN compiler_N construction_N ;
  regular_expression_CNCSE = makeCN regular_A expression_N ;
  code_generator_CNCSE = makeCN code_N generator_N ;
  formal_verification_CNCSE = makeCN formal_A verification_N ;
  differential_equation_CNCSE = makeCN differential_A equation_N ;
  artificial_intelligence_CNCSE = makeCN artificial_A intelligence_NCSE ;
  algorithm_design_CNCSE = makeCN algorithm_N design_N ;
  network_security_CNCSE = makeCN network_N security_N ;
  distributed_systems_CNCSE = makeCN (mkA "distributed") (mkN "systems") ;
  applied_data_science_CNCSE = makeCN (mkA "applied") data_N science_N ;
  abstract_data_type_CNCSE = makeCN abstract_A data_N type_N ;
  abstract_method_CNCSE = makeCN abstract_A method_N ;
  agile_software_development_CNCSE = makeCN agile_A software_N development_N ;
  big_data_CNCSE = makeCN big_A data_N ;
  binary_number_CNCSE = makeCN binary_A number_N ;
  binary_search_tree_CNCSE = makeCN binary_A search_N tree_N ;
  security_protocol_CNCSE = makeCN security_N protocol_N ;
  virtual_private_network_CNCSE = makeCN virtual_A private_A network_N ;
  floating_point_number_CNCSE = makeCN (mkA "floating") point_N number_N ;
  attack_model_CNCSE = makeCN (mkA "attack") model_N ;
  data_communication_CNCSE = makeCN data_N communication_N ;
  domain_name_system_CNCSE = makeCN domain_N name_N system_N ;
  routing_protocol_CNCSE = makeCN (mkN "routing") protocol_N ;
  congestion_control_CNCSE = makeCN congestion_N control_N ;
  text_editor_CNCSE = makeCN text_N editor_N ;
  associate_VCSE  = mkV "associate" ;
  static_memory_CNCSE = makeCN static_A memory_N ;
  topic_NCSE = mkN "topic" "topics" ;
  screensaver_NCSE = mkN "screensaver" "screensavers" ;
  quantitative_APCSE = mkAP quantitative_A ;
  prerequisite_NCSE = mkN "prerequisite" "prerequisites" ;
  solid_NCSE = mkN "solid" "solids" ;
  product_NCSE = mkN "product" "products" ;
  specify_VCSE  = specify_V  ;
  program_registration_CNCSE = makeCN program_N registration_N ;
  analyse_VCSE  = (mkV "analyse") ;
  subroutine_NCSE = mkN "subroutine" "subroutines" ;
  external_NCSE = mkN "external" "externals" ;
  complexity_analysis_CNCSE = makeCN complexity_N analysis_N ;
  expansion_NCSE = mkN "expansion" "expansions" ;
  computer_system_architecture_CNCSE = makeCN computer_N system_N architecture_N ;
  computer_science_CNCSE = makeCN computer_N science_N ;
  assignment_NCSE = mkN "assignment" "assignments" ;
  construct_VCSE  = mkV "construct" ;
  computer_security_CNCSE = makeCN computer_N security_N ;
  prototype_NCSE = mkN "prototype" "prototypes" ;
  verification_NCSE = mkN "verification" "verifications" ;
  unification_NCSE = mkN "unification" "unifications" ;
  concurrent_APCSE = mkAP concurrent_A ;
  compiler_techniques_CNCSE = makeCN compiler_N (mkN "techniques") ;
  processor_base_CNCSE = makeCN processor_N base_N ;
  program_code_CNCSE = makeCN program_N code_N ;
  covariance_NCSE = mkN "covariance" "covariances" ;
  fundamental_APCSE = mkAP fundamental_A ;
  comprehend_VCSE  = (mkV "comprehend") ;
  resource_requirement_search_CNCSE = makeCN resource_N requirement_N (mkN "search") ;
  terminal_APCSE = mkAP terminal_A ;
  bridge_NCSE = mkN "bridge" "bridges" ;
  skill_NCSE = mkN "skill" "skills" ;
  software_development_CNCSE = makeCN software_N development_N ;
  compose_VCSE  = (mkV "compose") ;
  username_VCSE = (mkV "username") ;
  image_VCSE  = (mkV "image") ;
  change_VCSE  = (mkV "change") ;
  teach_VCSE = I.teach_V ;
  write_VCSE  = I.write_V ;
  assembly_programming_CNCSE = makeCN assembly_N programming_N ;
  evaluation_NCSE = mkN "evaluation" "evaluations" ;
  website_NCSE = mkN "website" "websites" ;
  complement_VCSE  = (mkV "complement") ;
  output_NCSE = mkN "output" "outputs" ;
  constructor_NCSE = mkN "constructor" "constructors" ;
  decide_VCSE  = mkV "decide" ;
  template_NCSE = mkN "template" "templates" ;
  program_plan_CNCSE = makeCN program_N plan_N ;
  airflow_NCSE = mkN "airflow" "airflows" ;
  hint_VCSE  = hint_V  ;
  software_development_CNCSE = makeCN software_N development_N ;
  driver_NCSE = mkN "driver" "drivers" ;
  document_VCSE  = mkV "document" ;
  spectrum_NCSE = mkN "spectrum" "spectrums" ;
  argue_VCSE  = argue_V  ;
  vehicle_NCSE = mkN "vehicle" "vehicles" ;
  contravariance_NCSE = mkN "contravariance" "contravariances" ;
  background_NCSE = mkN "background" "backgrounds" ;
  microarchitecture_level_CNCSE = makeCN (mkN "microarchitecture" "microarchitectres") level_N ;
  copy_VCSE  = (mkV "copy") ;
  associate_VCSE  = (mkV "associate") ;
  error_NCSE = mkN "error" "errors" ;
  indirect_APCSE = mkAP indirect_A ;
  user_experience_CNCSE = makeCN user_NCSE experience_N ;
  tape_VCSE  = (mkV "tape") ;
  prerequisite_NCSE = mkN "prerequisite" "prerequisites" ;
  supercomputer_NCSE = mkN "supercomputer" "supercomputers" ;
  unit_VCSE = mkV "unit" ;
  compulsory_APCSE = mkAP compulsory_A ;
  pseudo_APCSE = mkAP pseudo_A ;
  software_development_CNCSE = makeCN software_N development_N ;
  neural_network_CNCSE = makeCN neural_A network_N ;
  comparable_APCSE = mkAP comparable_A ;
  synchronization_error_CNCSE = makeCN synchronization_N error_N ;
  data_dependencies_CNCSE = makeCN data_N (mkN "dependencies") ;
  constant_APCSE = mkAP constant_A ;
  assume_VCSE  = assume_V  ;
  enable_VCSE  = mkV "enable"  ;
  finance_VCSE  = (mkV "finance") ;
  generalize_VCSE  = (mkV "generalize") ;
  reinforce_VCSE  = (mkV "reinforce") ;
  batch_NCSE = mkN "batch" "batches" ;
  abstract_NCSE = mkN "abstract" "abstracts" ;
  work_NCSE = mkN "work" "works" ;
  educational_programme_CNCSE = makeCN educational_A programme_N ;
  os_NCSE = mkN "os" ;
  modify_VCSE  = (mkV "modify") ;
  distribution_NCSE = mkN "distribution" "distributions" ;
  computer_science_CNCSE = makeCN computer_N science_N ;
  motherboard_VCSE  = (mkV "motherboard") ;
  study_VCSE  = (mkV "study") ;
  relation_NCSE = mkN "relation" "relations" ;
  examination_NCSE = mkN "examination" "examinations" ;
  hardware_system_CNCSE = makeCN hardware_N system_N ;
  program_verification_CNCSE = makeCN program_N verification_N ;
  question_VCSE  = (mkV "question") ;
  programming_skill_CNCSE = makeCN programming_N skill_N ;
  aim_VCSE  = mkV "aim" ;
  select_VCSE  = mkV "select" ;
  antecedent_APCSE = mkAP antecedent_A ;
  user_group_CNCSE = makeCN user_NCSE group_N ;
  system_verification_CNCSE = makeCN system_N verification_N ;
  modelling_language_CNCSE = makeCN modelling_N language_N ;
  book_VCSE  = (mkV "book") ;
  automaton_NCSE = mkN "automaton" "automatons" ;
  multiprocessing_NCSE = mkN "multiprocessing" "multiprocessings" ;
  performance_optimization_CNCSE = makeCN performance_N optimization_N ;
  examination_hall_exam_CNCSE = makeCN examination_N hall_N exam_N ;
  implementation_problem_CNCSE = makeCN implementation_N problem_N ;
  accompany_VCSE  = (mkV "accompany") ;
  primary_APCSE = mkAP primary_A ;
  storage_techniques_CNCSE = makeCN storage_N (mkN "techniques") ;
  introduction_NCSE = mkN "introduction" "introductions" ;
  user_test_CNCSE = makeCN user_NCSE test_N ;
  type_VCSE  = (mkV "type") ;
  ethics_NCSE = mkN "ethics" ;
  individual_NCSE = mkN "individual" "individuals" ;
  individual_APCSE = mkAP individual_A ;
  authore_VCSE  = (mkV "authore");
  performance_analysis_CNCSE = makeCN performance_N analysis_N ;
  routine_NCSE = mkN "routine" "routines" ;
  version_control_system_CNCSE = makeCN version_N control_N system_N ;
  standard_class_CNCSE = makeCN standard_N class_N ;
  language_extension_CNCSE = makeCN language_N extension_N ;
  thesis_NCSE = mkN "thesis" "thesiss" ;
  electricity_NCSE = mkN "electricity" "electricitys" ;
  distribute_VCSE  = mkV "distribute" ;
  programming_course_CNCSE = makeCN programming_N course_N ;
  assembly_code_CNCSE = makeCN assembly_N code_N ;
  polymorphism_NCSE = mkN "polymorphism" "polymorphisms" ;
  standard_algorithm_CNCSE = makeCN standard_A algorithm_N ;
  menu_NCSE = mkN "menu" "menus" ;
  power_consumption_CNCSE = makeCN power_N consumption_N ;
  approximate_VCSE  = (mkV "approximate") ;
  data_collection_CNCSE = makeCN data_N collection_N ;
  extend_VCSE  = (mkV "extend") ;
  shareware_NCSE = mkN "shareware" "sharewares" ;
  antibiotic_NCSE = mkN "antibiotic" "antibiotics" ;
  unify_VCSE  = (mkV "unify") ;
  data_communication_CNCSE = makeCN data_N communication_N ;
  simulation_method_CNCSE = makeCN simulation_N method_N ;
  strategy_NCSE = mkN "strategy" "strategys" ;
  memory_hierarchy_CNCSE = makeCN memory_N hierarchy_N ;
  give_VCSE = give_1_V ;
  domain_specific_CNCSE = makeCN domain_N (mkAP (mkA "specific")) ;
  monitor_NCSE = mkN "monitor" "monitors" ;
  fan_VCSE  = (mkV "fan") ;
  systematic_APCSE = mkAP systematic_A ;
  calculus_NCSE = mkN "calculus" "calculuss" ;
  ai_NCSE = mkN "ai" "ais" ;
  multiprocessor_NCSE = mkN "multiprocessor" "multiprocessors" ;
  modular_APCSE = mkAP modular_A ;
  computing_capacity_CNCSE = makeCN (mkN "computing") capacity_N ;
  secure_VCSE  = (mkV "secure") ;
  taskbar_NCSE = mkN "taskbar" "taskbars" ;
  programming_problem_CNCSE = makeCN programming_N problem_N ;
  complete_VCSE  = (mkV "complete") ;
  basic_NCSE = mkN "basic" "basics" ;
  start_VCSE  = (mkV "start") ;
  optimization_NCSE = mkN "optimization" "optimizations" ;
  purpose_NCSE = mkN "purpose" "purposes" ;
  system_requirement_CNCSE = makeCN system_N requirement_N ;
  attribute_NCSE = mkN "attribute" "attributes" ;
  learning_outcome_CNCSE = makeCN learning_N outcome_N ;
  sample_VCSE  = (mkV "sample") ;
  determine_VCSE  = mkV "determine" ;
  cryptology_NCSE = mkN "cryptology" "cryptologys" ;
  computer_science_CNCSE = makeCN computer_N science_N ;
  parallellization_NCSE = mkN "parallellization" "parallellizations" ;
  empirical_APCSE = mkAP empirical_A ;
  partition_VCSE  = (mkV "partition") ;
  predict_VCSE  = mkV "predict"  ;
  performance_bottleneck_CNCSE = makeCN performance_N bottleneck_N ;
  code_development_tool_CNCSE = makeCN code_N development_N tool_N ;
  reality_NCSE = mkN "reality" "realitys" ;
  admission_requirement_CNCSE = makeCN admission_N requirement_N ;
  normal_form_CNCSE = makeCN normal_N form_N ;
  look_VCSE  = mkV "look" ;
  architect_NCSE = mkN "architect" "architects" ;
  mutable_APCSE = mkAP mutable_A ;
  reliable_APCSE = mkAP reliable_A ;
  token_NCSE = mkN "token" "tokens" ;
  data_abstraction_CNCSE = makeCN data_N abstraction_N ;
  require_VCSE  = mkV "require" ;
  acoustic_NCSE = mkN "acoustic" "acoustics" ;
  light_NCSE = mkN "light" "lights" ;
  parse_VCSE  = (mkV "parse") ;
  version_control_CNCSE = makeCN version_N control_N ;
  output_NCSE = mkN "output" "outputs" ;
  cyber_security_CNCSE = makeCN (mkN "cyber") security_N ;
  vary_VCSE  = (mkV "vary") ;
  photo_realistic_CNCSE = makeCN photo_N (mkAP (mkA "realistic")) ;
  admission_requirement_CNCSE = makeCN admission_N requirement_N ;
  establish_VCSE  = mkV "establish" ;
  course_specific_CNCSE = makeCN course_N (mkAP (mkA "specific")) ;
  extract_VCSE  = mkV "extract" ;
  group_NCSE = mkN "group" "groups" ;
  programming_assignment_CNCSE = makeCN programming_N assignment_N ;
  cluster_NCSE = mkN "cluster" "clusters" ;
  grammars_NCSE = mkN "grammars" "grammarss" ;
  bug_NCSE = mkN "bug" "bugs" ;
  subclass_NCSE = mkN "subclass" "subclasss" ;
  software_development_project_CNCSE = makeCN software_N development_N project_N ;
  binary_APCSE = mkAP binary_A ;
  pointer_NCSE = mkN "pointer" "pointers" ;
  therefore_AdvCSE  = mkAdv (mkA "therefore") ;
  similar_APCSE = mkAP similar_A ;
  implementation_problems_CNCSE = makeCN implementation_N (mkN "problems") ;
  objective_NCSE = mkN "objective" "objectives" ;
  reader_NCSE = mkN "reader" "readers" ;
  logo_NCSE = mkN "logo" "logos" ;
  object_oriented_CNCSE = makeCN object_N (mkN "oriented") ;
  litterature_study_CNCSE = makeCN (mkN "litterature" "litteratures") (mkN "study" "studies") ;
  device_NCSE = mkN "device" "devices" ;
  hotkey_NCSE = mkN "hotkey" "hotkeys" ;
  overcome_VCSE  = (mkV "overcome") ;
  subjunctive_NCSE = mkN "subjunctive" "subjunctives" ;
  accept_VCSE  = (mkV "accept") ;
  interface_design_CNCSE = makeCN interface_N design_N ;
  multiplication_NCSE = mkN "multiplication" "multiplications" ;
  syntax_analysis_CNCSE = makeCN syntax_N analysis_N ;
  characteristic_APCSE = mkAP characteristic_A ;
  flash_VCSE  = (mkV "flash") ;
  course_plan_CNCSE = makeCN course_N plan_N ;
  network_protocol_CNCSE = makeCN network_N protocol_N ;
  communication_system_CNCSE = makeCN communication_N system_N ;
  computer_based_CNCSE = makeCN computer_N (mkAP (mkA "based")) ;
  basic_principle_CNCSE = makeCN basic_A principle_N ;
  approximation_NCSE = mkN "approximation" "approximations" ;
  exemplify_VCSE  = (mkV "exemplify") ;
  begin_VCSE  = (mkV "begin") ;
  development_process_CNCSE = makeCN development_N process_N ;
  mouse_NCSE = mkN "mouse" "mice" ;
  program_component_CNCSE = makeCN program_N component_N ;
  polymorph_APCSE = mkAP (mkA "polymorph") ;
  name_VCSE = name_V ;
  entry_requirements_CNCSE = makeCN entry_N (mkN "requirements") ;
  recoverable_APCSE = mkAP recoverable_A ;
  machine_oriented_CNCSE = makeCN machine_N (mkAP (mkA "oriented")) ;
  implement_VCSE  = mkV "implement" ;
  autonomous_APCSE = mkAP autonomous_A ;
  interdisciplinary_APCSE = mkAP interdisciplinary_A ;
  apply_VCSE  = mkV "apply" ;
  paradigm_NCSE = mkN "paradigm" "paradigms" ;
  cache_memory_CNCSE = makeCN cache_N memory_N ;
  explore_VCSE  = mkV "explore"  ;
  memory_hierarchy_level_CNCSE = makeCN memory_N hierarchy_N level_N ;
  better_VCSE  = (mkV "better") ;
  boot_VCSE  = (mkV "boot") ;
  interface_NCSE = mkN "interface" "interfaces" ;
  underlying_APCSE = mkAP underlying_A ;
  section_NCSE = mkN "section" "sections" ;
  contents_NCSE = mkN "contents" "contentss" ;
  word_VCSE  = (mkV "word") ;
  use_VCSE  = mkV "use" ;
  develop_VCSE  = mkV "develop" ;
  discuss_VCSE  = mkV "discuss"  ;
  common_NCSE = mkN "common" "commons" ;
  bound_VCSE = mkV "bound" ;
  reflection_NCSE = mkN "reflection" "reflections" ;
  algorithm_design_techniques_CNCSE = makeCN algorithm_N design_N (mkN "techniques") ;
  terabyte_NCSE = mkN "terabyte" "terabytes" ;
  inference_NCSE = mkN "inference" "inferences" ;
  switch_VCSE  = (mkV "switch") ;
  mode_NCSE = mkN "mode" "modes" ;
  connect_VCSE  = (mkV "connect") ;
  degree_NCSE = mkN "degree" "degrees" ;
  software_technology_CNCSE = makeCN software_N technology_N ;
  data_processing_CNCSE = makeCN data_N processing_N ;
  pseudocode_VCSE  = (mkV "pseudocode") ;
  statistical_APCSE = mkAP statistical_A ;
  state_NCSE = mkN "state" "states" ;
  bus_VCSE  = (mkV "bus") ;
  encapsulation_NCSE = mkN "encapsulation" "encapsulations" ;
  detect_VCSE  = (mkV "detect") ;
  circuit_structure_CNCSE = makeCN circuit_N structure_N ;
  parsing_NCSE = mkN "parsing" "parsings" ;
  hardware_unit_CNCSE = makeCN hardware_N unit_NCSE ;
  click_VCSE  = mkV "click" ;
  menu_bar_CNCSE = makeCN menu_N bar_N ;
  root_VCSE  = (mkV "root") ;
  drive_NCSE = mkN "drive" "drives" ;
  injection_NCSE = mkN "injection" "injections" ;
  superclass_NCSE = mkN "superclass" "superclasss" ;
  lisp_VCSE  = (mkV "lisp") ;
  well_grounded_APCSE = mkAP (mkA "well-grounded") ;
  supervision_NCSE = mkN "supervision" "supervisions" ;
  software_development_assignment_CNCSE = makeCN software_N development_N assignment_N ;
  chrome_NCSE = mkN "chrome" "chromes" ;
  processor_architecture_CNCSE = makeCN processor_N architecture_N ;
  design_process_CNCSE = makeCN design_N process_N ;
  cassette_NCSE = mkN "cassette" "cassettes" ;
  processor_core_CNCSE = makeCN processor_N core_N ;
  improve_VCSE  = (mkV "improve") ;
  head_VCSE  = (mkV "head") ;
  agile_APCSE = mkAP agile_A ;
  educational_program_CNCSE = makeCN (mkN "educational") program_N ;
  bar_NCSE = mkN "bar" "bars" ;
  back_NCSE = mkN "back" "backs" ;
  context_free_CNCSE = makeCN context_N free_N ;
  articulate_VCSE  = (mkV "articulate") ;
  predicate_logic_CNCSE = makeCN "predicate" logic_N ;
  set_NCSE = mkN "set" "sets" ;
  responsibility_NCSE = mkN "responsibility" "responsibilitys" ;
  capture_VCSE  = (mkV "capture") ;
  standard_library_CNCSE = makeCN standard_N library_N ;
  acceleration_NCSE = mkN "acceleration" "accelerations" ;
  algorithm_analysis_CNCSE = makeCN algorithm_N analysis_N ;
  android_NCSE = mkN "android" "androids" ;
  logarithm_NCSE = mkN "logarithm" "logarithms" ;
  composition_NCSE = mkN "composition" "compositions" ;
  behaviour_NCSE = mkN "behaviour" "behaviours" ;
  display_NCSE = mkN "display" "displays" ;
  software_architecture_CNCSE = makeCN software_N architecture_N ;
  tag_NCSE = mkN "tag" "tags" ;
  data_set_CNCSE = makeCN data_N set_N ;
  appropriate_VCSE  = (mkV "appropriate") ;
  replacement_NCSE = mkN "replacement" "replacements" ;
  effect_VCSE  = (mkV "effect") ;
  act_VCSE  = (mkV "act") ;
  student_NCSE = mkN "student" "students" ;
  control_system_CNCSE = makeCN control_N system_N ;
  evaluation_NCSE = mkN "evaluation" "evaluations" ;
  education_NCSE = mkN "education" "educations" ;
  computer_system_component_CNCSE = makeCN computer_N system_N component_N ;
  prepare_VCSE  = mkV "prepare" ;
  factory_NCSE = mkN "factory" "factories" ;
  loading_NCSE = mkN "loading" "loadings" ;
  register_NCSE = mkN "register" "registers" ;
  theorem_NCSE = mkN "theorem" "theorems" ;
  propositional_logic_CNCSE = makeCN (mkA "propositional") logic_N ;
  software_development_process_CNCSE = makeCN software_N development_N process_N ;
  experience_VCSE  = (mkV "experience") ;
  rate_VCSE  = rate_V  ;
  computer_construction_CNCSE = makeCN computer_N construction_N ;
  unreliable_APCSE = mkAP unreliable_A ;
  execute_VCSE = mkV "execute" ;
  alpha_NCSE = mkN "alpha" "alphas" ;
  interested_APCSE = mkAP interested_A ;
  focus_VCSE  = (mkV "focus") ;
  dot_VCSE  = (mkV "dot") ;
  experiment_VCSE  = (mkV "experiment") ;
  modifier_NCSE = mkN "modifier" "modifiers" ;
  laboratory_task_CNCSE = makeCN laboratory_N task_N ;
  cartridge_NCSE = mkN "cartridge" "cartridges" ;
  presentation_NCSE = mkN "presentation" "presentations" ;
  problem_solving_CNCSE = makeCN problem_N (mkN "solving") ;
  analog_NCSE = mkN "analog" ;
  completion_NCSE = mkN "completion" ;
  expression_NCSE = mkN "expression" ;
  kit_NCSE = mkN "kit" ;
  clock_NCSE = mkN "clock" ;
}
