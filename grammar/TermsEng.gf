--# -path=.:alltenses:english

concrete TermsEng of Terms = CatEng **
  open
    MakeTermEng, ParadigmsEng, SyntaxEng

in {

lincat
  Term = Utt ;

lin
  CNSgTerm cn = mkUtt cn ;
  CNPlTerm cn = mkUtt (mkNP aPl_Det cn) ;
  APTerm ap = mkUtt ap ;

-- example lexicon
lin
  course_N = mkN "course" ;
  prerequisite_N = mkN "prerequisite" ;
  computer_N = mkN "computer" ;
  organization_N = mkN "organization" ;
  design_N = mkN "design" ;
  foundation_N = mkN "foundation" ;
  basic_AP = mkAP basic_A ;
  architecture_N = mkN "architecture" ;
  principle_N = mkN "principle" ;
  memory_N = mkN "memory" ;
  aim_N = mkN "aim" ;
  component_N = mkN "component" ;
  technical_AP = mkAP technical_A ;
  system_N = mkN "system" ;
  functional_AP = mkAP functional_A ;
  fast_AP = mkAP fast_A ;
  power_N = mkN "power" ;
  efficient_AP = mkAP efficient_A ;
  performance_N = mkN "performance" ;
  progress_N = mkN "progress" ;
  engineering_N = mkN "engineering" ;
  raw_N = mkN "raw" ;
  speed_N = mkN "speed" ;
  transistor_N = mkN "transistor" ;
  application_N = mkN "application" ;
  software_N = mkN "software" ;
  structure_N = mkN "structure" ;
  parallelism_N = mkN "parallelism" ;
  high_AP = mkAP high_A ;
  outcome_N = mkN "outcome" ;
  completion_N = mkN "completion" ;
  master_N = mkN "master" ;
  concept_N = mkN "concept" ;
  modern_AP = mkAP modern_A ;
  order_N = mkN "order" ;
  research_N = mkN "research" ;
  advance_N = mkN "advance" ;
  field_N = mkN "field" ;
  microprocessor_N = mkN "microprocessor" ;
  technique_N = mkN "technique" ;
  instruction_N = mkN "instruction" ;
  parallel_N = mkN "parallel" ;
  parallel_AP = mkAP parallel_A ;
  hierarchy_N = mkN "hierarchy" ;
  proficiency_N = mkN "proficiency" ;
  quantitative_AP = mkAP quantitative_A ;
  impact_N = mkN "impact" ;
  architectural_AP = mkAP architectural_A ;
  state_N = mkN "state" ;
  simulation_N = mkN "simulation" ;
  tool_N = mkN "tool" ;
  content_N = mkN "content" ;
  essential_N = mkN "essential" ;
  analysis_N = mkN "analysis" ;
  method_N = mkN "method" ;
  assessment_N = mkN "assessment" ;
  consumption_N = mkN "consumption" ;
  part_N = mkN "part" ;
  evolution_N = mkN "evolution" ;
  technology_N = mkN "technology" ;
  law_N = mkN "law" ;
  execution_N = mkN "execution" ;
  time_N = mkN "time" ;
  throughput_N = mkN "throughput" ;
  fundamental_N = mkN "fundamental" ;
  locality_N = mkN "locality" ;
  reference_N = mkN "reference" ;
  level_N = mkN "level" ;
  limit_N = mkN "limit" ;
  category_N = mkN "category" ;
  dynamic_AP = mkAP dynamic_A ;
  dynamic_N = mkN "dynamic" ;
  static_AP = mkAP static_A ;
  algorithm_N = mkN "algorithm" ;
  branch_N = mkN "branch" ;
  prediction_N = mkN "prediction" ;
  speculation_N = mkN "speculation" ;
  loop_N = mkN "loop" ;
  different_AP = mkAP different_A ;
  source_N = mkN "source" ;
  bottleneck_N = mkN "bottleneck" ;
  miss_N = mkN "miss" ;
  penalty_N = mkN "penalty" ;
  hit_N = mkN "hit" ;
  example_N = mkN "example" ;
  free_N = mkN "free" ;
  virtual_AP = mkAP virtual_A ;
  address_N = mkN "address" ;
  knowledge_N = mkN "knowledge" ;
  linear_AP = mkAP linear_A ;
  algebra_N = mkN "algebra" ;
  probability_N = mkN "probability" ;
  theory_N = mkN "theory" ;
  desirable_AP = mkAP desirable_A ;
  image_N = mkN "image" ;
  overview_N = mkN "overview" ;
  practical_AP = mkAP practical_A ;
  application_N = mkN "application" ;
  measurement_N = mkN "measurement" ;
  problem_N = mkN "problem" ;
  science_N = mkN "science" ;
  geometry_N = mkN "geometry" ;
  optimization_N = mkN "optimization" ;
  statistics_N = mkN "statistics" ;
  camera_N = mkN "camera" ;
  modelling_N = mkN "modelling" ;
  stereo_N = mkN "stereo" ;
  structure_N = mkN "structure" ;
  mathematical_AP = mkAP mathematical_A ;
  central_N = mkN "central" ;
  algorithm_N = mkN "algorithm" ;
  square_N = mkN "square" ;
  terminology_N = mkN "terminology" ;
  logic_N = mkN "logic" ;
  solution_N = mkN "solution" ;
  geometric_AP = mkAP geometric_A ;
  camera_N = mkN "camera" ;
  class_N = mkN "class" ;
  exercise_N = mkN "exercise" ;
  session_N = mkN "session" ;
  pair_N = mkN "pair" ;
  project_N = mkN "project" ;
  submission_N = mkN "submission" ;
  report_N = mkN "report" ;
  result_N = mkN "result" ;
  lecture_N = mkN "lecture" ;
  article_N = mkN "article" ;
  university_N = mkN "university" ;
  element_N = mkN "element" ;
  address_N = mkN "address" ;
  programming_N = mkN "programming" ;
  model_N = mkN "model" ;
  processor_N = mkN "processor" ;
  core_N = mkN "core" ;
  chip_N = mkN "chip" ;
  thread_N = mkN "thread" ;
  resource_N = mkN "resource" ;
  project_N = mkN "project" ;
  scientific_AP = mkAP scientific_A ;
  literature_N = mkN "literature" ;
  session_N = mkN "session" ;
  sequence_N = mkN "sequence" ;
  lab_N = mkN "lab" ;
  methodology_N = mkN "methodology" ;
  assembly_N = mkN "assembly" ;
  language_N = mkN "language" ;
  sustainability_N = mkN "sustainability" ;
  level_N = mkN "level" ;
  sustainable_AP = mkAP sustainable_A ;
  electrical_AP = mkAP electrical_A ;
  mechanism_N = mkN "mechanism" ;
  circuit_N = mkN "circuit" ;
  storage_N = mkN "storage" ;
  energy_N = mkN "energy" ;
  device_N = mkN "device" ;
  component_N = mkN "component" ;
  configuration_N = mkN "configuration" ;
  class_N = mkN "class" ;
  requirement_N = mkN "requirement" ;
  electronic_AP = mkAP electronic_A ;
  data_N = mkN "data" ;
  instance_N = mkN "instance" ;
  lecture_N = mkN "lecture" ;
  result_N = mkN "result" ;
  future_AP = mkAP future_A ;
  generation_N = mkN "generation" ;
  optimization_N = mkN "optimization" ;
  theory_N = mkN "theory" ;
  practice_N = mkN "practice" ;
  discrete_AP = mkAP discrete_A ;
  linear_AP = mkAP linear_A ;
  science_N = mkN "science" ;
  complexity_N = mkN "complexity" ;
  kind_N = mkN "kind" ;
  context_N = mkN "context" ;
  transportation_N = mkN "transportation" ;
  telecommunication_N = mkN "telecommunication" ;
  industrial_AP = mkAP industrial_A ;
  linear_AP = mkAP linear_A ;
  algebra_N = mkN "algebra" ;
  probability_N = mkN "probability" ;
  theory_N = mkN "theory" ;
  desirable_AP = mkAP desirable_A ;
  image_N = mkN "image" ;
  overview_N = mkN "overview" ;
  practical_AP = mkAP practical_A ;
  application_N = mkN "application" ;
  measurement_N = mkN "measurement" ;
  problem_N = mkN "problem" ;
  science_N = mkN "science" ;
  geometry_N = mkN "geometry" ;
  optimization_N = mkN "optimization" ;
  statistics_N = mkN "statistics" ;
  camera_N = mkN "camera" ;
  modelling_N = mkN "modelling" ;
  stereo_N = mkN "stereo" ;
  structure_N = mkN "structure" ;
  mathematical_AP = mkAP mathematical_A ;
  central_N = mkN "central" ;
  algorithm_N = mkN "algorithm" ;
  square_N = mkN "square" ;
  terminology_N = mkN "terminology" ;
  logic_N = mkN "logic" ;
  solution_N = mkN "solution" ;
  geometric_AP = mkAP geometric_A ;
  camera_N = mkN "camera" ;
  class_N = mkN "class" ;
  exercise_N = mkN "exercise" ;
  session_N = mkN "session" ;
  pair_N = mkN "pair" ;
  project_N = mkN "project" ;
  submission_N = mkN "submission" ;
  report_N = mkN "report" ;
  result_N = mkN "result" ;
  lecture_N = mkN "lecture" ;
  article_N = mkN "article" ;
  university_N = mkN "university" ;
  element_N = mkN "element" ;
  physics_N = mkN "physics" ;
  numerical_AP = mkAP numerical_A ;
  modeling_N = mkN "modeling" ;
  equation_N = mkN "equation" ;
  molecular_AP = mkAP molecular_A ;
  dynamic_N = mkN "dynamic" ;
  integration_N = mkN "integration" ;
  planning_N = mkN "planning" ;
  hardware_N = mkN "hardware" ;
  property_N = mkN "property" ;
  algorithmic_AP = mkAP algorithmic_A ;
  optimal_AP = mkAP optimal_A ;
  domain_N = mkN "domain" ;
  manageable_AP = mkAP manageable_A ;
  generic_AP = mkAP generic_A ;
  additional_AP = mkAP additional_A ;
  heuristic_N = mkN "heuristic" ;
  dual_AP = mkAP dual_A ;
  integer_N = mkN "integer" ;
  special_AP = mkAP special_A ;
  graph_N = mkN "graph" ;
  list_N = mkN "list" ;
  scale_N = mkN "scale" ;
  network_N = mkN "network" ;
  communication_N = mkN "communication" ;
  protocol_N = mkN "protocol" ;
  stack_N = mkN "stack" ;
  internet_N = mkN "internet" ;
  service_N = mkN "service" ;
  development_N = mkN "development" ;
  setting_N = mkN "setting" ;
  link_N = mkN "link" ;
  bandwidth_N = mkN "bandwidth" ;
  scalability_N = mkN "scalability" ;
  imperative_AP = mkAP imperative_A ;
  vector_N = mkN "vector" ;
  dimension_N = mkN "dimension" ;
  graphic_N = mkN "graphic" ;
  process_N = mkN "process" ;
  functionality_N = mkN "functionality" ;
  strict_AP = mkAP strict_A ;
  matrix_N = mkN "matrix" ;
  bachelor_N = mkN "bachelor" ;
  dimensional_AP = mkAP dimensional_A ;
  hardware_N = mkN "hardware" ;
  image_N = mkN "image" ;
  model_N = mkN "model" ;
  rendering_N = mkN "rendering" ;
  shadow_N = mkN "shadow" ;
  mathematics_N = mkN "mathematics" ;
  function_N = mkN "function" ;
  mechanical_AP = mkAP mechanical_A ;
  safety_N = mkN "safety" ;
  multimedia_N = mkN "multimedia" ;
  abstraction_N = mkN "abstraction" ;
  implement_N = mkN "implement" ;
  synchronization_N = mkN "synchronization" ;
  language_N = mkN "language" ;
  kernel_N = mkN "kernel" ;
  protocol_N = mkN "protocol" ;
  node_N = mkN "node" ;
  topology_N = mkN "topology" ;
  mathematics_N = mkN "mathematics" ;
  course_N = mkN "course" ;
  machine_N = mkN "machine" ;
  function_N = mkN "function" ;
  mechanical_AP = mkAP mechanical_A ;
  safety_N = mkN "safety" ;
  behavior_N = mkN "behavior" ;
  example_N = mkN "example" ;
  game_N = mkN "game" ;
  multimedia_N = mkN "multimedia" ;
  interface_N = mkN "interface" ;
  set_N = mkN "set" ;
  good_AP = mkAP good_A ;
  task_N = mkN "task" ;
  library_N = mkN "library" ;
  synchronization_N = mkN "synchronization" ;
  language_N = mkN "language" ;
  general_AP = mkAP general_A ;
  kernel_N = mkN "kernel" ;
  available_AP = mkAP available_A ;
  capacity_N = mkN "capacity" ;
  cyclic_AP = mkAP cyclic_A ;
  priority_N = mkN "priority" ;
  protocol_N = mkN "protocol" ;
  node_N = mkN "node" ;
  topology_N = mkN "topology" ;
  access_N = mkN "access" ;
  response_N = mkN "response" ;
  conjunction_N = mkN "conjunction" ;
  account_N = mkN "account" ;
  maximum_N = mkN "maximum" ;
  theory_N = mkN "theory" ;
  delay_N = mkN "delay" ;
  correctness_N = mkN "correctness" ;
  abstraction_N = mkN "abstraction" ;
  philosophy_N = mkN "philosophy" ;
  complex_AP = mkAP complex_A ;
  environment_N = mkN "environment" ;
  semaphore_N = mkN "semaphore" ;
  syntax_N = mkN "syntax" ;
  tree_N = mkN "tree" ;
  semantics_N = mkN "semantics" ;
  compiler_N = mkN "compiler" ;
  induction_N = mkN "induction" ;
  proof_N = mkN "proof" ;
  finite_AP = mkAP finite_A ;
  formal_AP = mkAP formal_A ;
  library_N = mkN "library" ;
  type_N = mkN "type" ;
  algebraic_AP = mkAP algebraic_A ;
  monad_N = mkN "monad" ;
  transformer_N = mkN "transformer" ;
  specification_N = mkN "specification" ;
  property_N = mkN "property" ;
  construction_N = mkN "construction" ;
  quick_AP = mkAP quick_A ;
  exception_N = mkN "exception" ;
  cryptography_N = mkN "cryptography" ;
  security_N = mkN "security" ;
  implementation_N = mkN "implementation" ;
  vulnerability_N = mkN "vulnerability" ;
  permutation_N = mkN "permutation" ;
  cipher_N = mkN "cipher" ;
  cryptanalysis_N = mkN "cryptanalysis" ;
  symmetric_AP = mkAP symmetric_A ;
  programming_N = mkN "programming" ;
  function_N = mkN "function" ;
  model_N = mkN "model" ;
  algorithm_N = mkN "algorithm" ;
  artificial_AP = mkAP artificial_A ;
  intelligence_N = mkN "intelligence" ;
  binary_AP = mkAP binary_A ;
  bit_N = mkN "bit" ;
  byte_N = mkN "byte" ;
  class_N = mkN "class" ;
  compiler_N = mkN "compiler" ;
  concurrency_N = mkN "concurrency" ;
  cryptography_N = mkN "cryptography" ;
  cyberspace_N = mkN "cyberspace" ;
  database_N = mkN "database" ;
  digital_AP = mkAP digital_A ;
  download_N = mkN "download" ;
  encryption_N = mkN "encryption" ;
  event_N = mkN "event" ;
  file_N = mkN "file" ;
  formal_AP = mkAP formal_A ;
  method_N = mkN "method" ;
  verification_N = mkN "verification" ;
  functional_AP = mkAP functional_A ;
  gigabyte_N = mkN "gigabyte" ;
  heapsort_N = mkN "heapsort" ;
  inheritance_N = mkN "inheritance" ;
  ascii_N = mkN "ascii" ;
  array_N = mkN "array" ;
  bioinformatics_N = mkN "bioinformatics" ;
  crypto_N = mkN "crypto" ;
  concatenation_N = mkN "concatenation" ;
  intelligent_AP = mkAP intelligent_A ;
  agent_N = mkN "agent" ;
  interface_N = mkN "interface" ;
  invariant_AP = mkAP invariant_A ;
  iteration_N = mkN "iteration" ;
  Java_N = mkN "Java" ;
  kernel_N = mkN "kernel" ;
  matrix_N = mkN "matrix" ;
  modem_N = mkN "modem" ;
  numerical_AP = mkAP numerical_A ;
  analysis_N = mkN "analysis" ;
  peripheral_N = mkN "peripheral" ;
  queue_N = mkN "queue" ;
  recursion_N = mkN "recursion" ;
  router_N = mkN "router" ;
  sequence_N = mkN "sequence" ;
  software_N = mkN "software" ;
  string_N = mkN "string" ;
  XHTML_N = mkN "XHTML" ;
  generalization_N = mkN "generalization" ;
  concept_N = mkN "concept" ;
  blueprint_N = mkN "blueprint" ;
  customer_N = mkN "customer" ;
  calculation_N = mkN "calculation" ;
  productivity_N = mkN "productivity" ;
  list_N = mkN "list" ;
  mathematical_AP = mkAP mathematical_A ;
  programmer_N = mkN "programmer" ;
  spreadsheet_N = mkN "spreadsheet" ;
  theoretical_AP = mkAP theoretical_A ;
  discreet_AP = mkAP discreet_A ;
  mathematics_N = mkN "mathematics" ;
  philosophy_N = mkN "philosophy" ;
  number_N = mkN "number" ;
  biology_N = mkN "biology" ;
  statistics_N = mkN "statistics" ;
  information_N = mkN "information" ;
  communication_N = mkN "communication" ;
  telecommunications_N = mkN "telecommunications" ;
  whitelist_N = mkN "whitelist" ;
  variable_N = mkN "variable" ;
  conjunction_N = mkN "conjunction" ;
  disjunction_N = mkN "disjunction" ;
  negation_N = mkN "negation" ;
  instruction_N = mkN "instruction" ;
  arithmetic_N = mkN "arithmetic" ;
  hardware_N = mkN "hardware" ;
  server_N = mkN "server" ;
  code_N = mkN "code" ;
  electronics_N = mkN "electronics" ;
  linguistics_N = mkN "linguistics" ;
  science_N = mkN "science" ;
  memory_N = mkN "memory" ;
  table_N = mkN "table" ;
  video_N = mkN "video" ;
  engineering_N = mkN "engineering" ;
  technology_N = mkN "technology" ;
  simulation_N = mkN "simulation" ;
  network_N = mkN "network" ;
  sensor_N = mkN "sensor" ;
  thread_N = mkN "thread" ;
  graphic_AP = mkAP graphic_A ;
  parser_N = mkN "parser" ;
  execution_N = mkN "execution" ;
  interruption_N = mkN "interruption" ;
  operator_N = mkN "operator" ;
  mathematical_AP = mkAP mathematical_A ;
  expression_N = mkN "expression" ;
  environment_N = mkN "environment" ;
  value_N = mkN "value" ;
  proof_N = mkN "proof" ;
  integer_N = mkN "integer" ;
  virtual_AP = mkAP virtual_A ;
  debugger_N = mkN "debugger" ;
  property_N = mkN "property" ;
  touchscreen_N = mkN "touchscreen" ;
  documentation_N = mkN "documentation" ;
  bug_N = mkN "bug" ;
  formal_AP = mkAP formal_A ;
  LED_N = mkN "LED" ;
  operation_N = mkN "operation" ;
  unit_N = mkN "unit" ;
  symbol_N = mkN "symbol" ;
  reference_N = mkN "reference" ;
  bot_N = mkN "bot" ;
  wireless_AP = mkAP wireless_A ;
}
