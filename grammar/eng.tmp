Prerequisites
Goals
Computer programming
basic skill
studies
professional life
course
participants
programming tasks
science
engineering tasks
fundamental principles
computers
programming
Learning outcomes
On successful completion of the course
student
Knowledge
understanding
Express
mathematical formulas
programming language
expressions
algorithms
datatypes
datastructures
data
Structure
programs
manageable
reusable
units
by the use of
concepts
modules
classes
functions
Search
find
relevant
program libraries
use
in adequate ways
Explain
relations
hardware
operating system
user programs
data analysis
files
Competence
skills
Write
programs
manipulate
numeric
textual
perform
standard
programming tasks
Build
interactive
text-based
graphical
user interfaces
read
transform
generate
file system 
standard libraries
best programming practices 
Test
programs
methods
unit testing
regression testing
property-based testing
programming tools
code editors
revision control systems
Judgement
approach
Assess
difficulty
resources
typical
programming tasks
Analyse
code
errors
possibilities
improvement
Course content
introduction
programming
general-purpose
programming language
language
in parallel to
basic concepts
binary
representations
memory
source code
compiler
machine
syntactic structure
expressions
statements
functions
classes
modules
basics
algorithmic design
iteration
recursion
decomposition
functions
top-down
bottom-up
software design
in terms of
functions
classes
modules
Organisation
lectures
exercise sessions
programming assignments
in practice
Literature
Information
course home-page
start of the course
Examination
Compulsory
written
oral
exam

